Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    DIF
    EXP
    SHL
    ANDB
    MULTEQ
    SUM
    SHR
    XOR
    MINEQ
    EQ
    AND
    PP
    PLUSEQ
    MM
    DIVEQ
    ASEQ
    ORB
    OR
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model statementblock RCURLY
Rule 2     functions -> function functions
Rule 3     functions -> empty
Rule 4     function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
Rule 5     lparameters -> parameter
Rule 6     lparameters -> parameter parameters
Rule 7     lparameters -> empty
Rule 8     parameters -> COMMA parameters
Rule 9     parameters -> empty
Rule 10    parameter -> vartype ID
Rule 11    vars -> varblock
Rule 12    vars -> empty
Rule 13    varblock -> VARS LCURLY lvars RCURLY
Rule 14    lvars -> listofvars lvars
Rule 15    lvars -> listofvars
Rule 16    lvars -> empty
Rule 17    listofvars -> typedeclaration POINTS listofids SEMIC
Rule 18    typedeclaration -> vartype dimensions
Rule 19    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 20    dimensions -> empty
Rule 21    listofids -> ID lid
Rule 22    lid -> COMMA listofids
Rule 23    lid -> empty
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> ID EQUALS expresiones SEMIC
Rule 28    expresiones -> expresion COMMA expresiones
Rule 29    expresiones -> expresion
Rule 30    expresion -> exp
Rule 31    expresion -> exp LESSTHAN exp
Rule 32    expresion -> exp LESSEQUAL exp
Rule 33    expresion -> exp GREATEREQUAL exp
Rule 34    expresion -> exp GREATERTHAN exp
Rule 35    expresion -> exp BETWEEN exp
Rule 36    exp -> term
Rule 37    exp -> term PLUS exp
Rule 38    exp -> term MINUS exp
Rule 39    term -> factor
Rule 40    term -> factor STAR term
Rule 41    term -> factor SLASH term
Rule 42    factor -> PLUS constant
Rule 43    factor -> MINUS constant
Rule 44    factor -> constant
Rule 45    factor -> ID
Rule 46    factor -> LPAREN expresion RPAREN
Rule 47    model -> optimize
Rule 48    model -> optimize where
Rule 49    model -> statementblock
Rule 50    model -> empty
Rule 51    optimize -> MIN LCURLY statement where RCURLY
Rule 52    optimize -> MAX LCURLY statement where RCURLY
Rule 53    statement -> asign
Rule 54    statement -> expresion
Rule 55    statement -> condition
Rule 56    statement -> write
Rule 57    statement -> optimize
Rule 58    statement -> for
Rule 59    statement -> return
Rule 60    statement -> build
Rule 61    statement -> wherecondition
Rule 62    build -> BUILD expresion SEMIC
Rule 63    where -> WHERE LCURLY statementblock RCURLY
Rule 64    wherecondition -> CONDITION expresion SEMIC
Rule 65    vartype -> TINT
Rule 66    vartype -> TFLOAT
Rule 67    vartype -> TBOOL
Rule 68    constant -> CTEI
Rule 69    constant -> CTEF
Rule 70    constant -> CTESTRING
Rule 71    constant -> CTEBOOL
Rule 72    constant -> id
Rule 73    constant -> functioncall
Rule 74    id -> ID dimensions
Rule 75    functioncall -> ID LPAREN expresion RPAREN
Rule 76    functioncall -> ID LPAREN CTEI RPAREN
Rule 77    functioncall -> ID LPAREN CTEF RPAREN
Rule 78    for -> FOR ID IN DOT ID LCURLY statementblock RCURLY
Rule 79    condition -> IF LPAREN expresion RPAREN statementblock SEMIC
Rule 80    condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
Rule 81    write -> PRINT LPAREN write2 RPAREN SEMIC
Rule 82    write2 -> expresion
Rule 83    write2 -> CTESTRING
Rule 84    write2 -> expresion DOT write2
Rule 85    write2 -> CTESTRING DOT write2
Rule 86    return -> RETURN asign
Rule 87    statementblock -> statement statementblock
Rule 88    statementblock -> statement
Rule 89    statementblock -> empty
Rule 90    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ANDB                 : 
ASEQ                 : 
BETWEEN              : 35
BUILD                : 62
COMMA                : 8 22 28
CONDITION            : 64
CTEBOOL              : 71
CTEF                 : 69 77
CTEI                 : 68 76
CTESTRING            : 70 83 85
DATA                 : 24
DIF                  : 
DIVEQ                : 
DOT                  : 78 84 85
ELSE                 : 80
EQ                   : 
EQUALS               : 27
EXP                  : 
FOR                  : 78
FUNC                 : 4
GREATEREQUAL         : 33
GREATERTHAN          : 34
ID                   : 4 10 21 27 45 74 75 76 77 78 78
IF                   : 79 80
IN                   : 78
LBRACKET             : 19
LCURLY               : 1 4 13 24 51 52 63 78
LESSEQUAL            : 32
LESSTHAN             : 31
LPAREN               : 4 46 75 76 77 79 80 81
MAX                  : 52
MIN                  : 51
MINEQ                : 
MINUS                : 38 43
MM                   : 
MOD                  : 
MODEL                : 1
MULTEQ               : 
OR                   : 
ORB                  : 
PLUS                 : 37 42
PLUSEQ               : 
POINTS               : 17
PP                   : 
PRINT                : 81
RBRACKET             : 19
RCURLY               : 1 4 13 24 51 52 63 78
RETURN               : 86
RPAREN               : 4 46 75 76 77 79 80 81
SEMIC                : 17 27 62 64 79 80 81
SHL                  : 
SHR                  : 
SLASH                : 41
STAR                 : 40
SUM                  : 
TBOOL                : 67
TFLOAT               : 66
TINT                 : 65
VARS                 : 13
WHERE                : 63
XOR                  : 
error                : 

Nonterminals, with rules where they appear

asign                : 25 53 86
asignmany            : 24 25
build                : 60
condition            : 55
constant             : 42 43 44
data                 : 1 4
dimensions           : 18 19 74
empty                : 3 7 9 12 16 20 23 26 50 89
exp                  : 30 31 31 32 32 33 33 34 34 35 35 37 38
expresion            : 19 28 29 46 54 62 64 75 79 80 82 84
expresiones          : 27 28
factor               : 39 40 41
for                  : 58
function             : 2
functioncall         : 73
functions            : 1 2
id                   : 72
lid                  : 21
listofids            : 17 22
listofvars           : 14 15
lparameters          : 4
lvars                : 13 14
model                : 1
optimize             : 47 48 57
parameter            : 5 6
parameters           : 6 8
program              : 0
return               : 59
statement            : 51 52 87 88
statementblock       : 1 4 49 63 78 79 80 80 87
term                 : 36 37 38 40 41
typedeclaration      : 17
varblock             : 11
vars                 : 1 4
vartype              : 10 18
where                : 48 51 52
wherecondition       : 61
write                : 56
write2               : 81 84 85

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model statementblock RCURLY
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
    (90) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 90 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 2
    program                        shift and go to state 3
    empty                          shift and go to state 5

state 1

    (2) functions -> function . functions
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
    (90) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 90 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 6
    empty                          shift and go to state 5

state 2

    (1) program -> functions . MODEL LCURLY vars data model statementblock RCURLY

    MODEL           shift and go to state 7


state 3

    (0) S' -> program .



state 4

    (4) function -> FUNC . ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY

    ID              shift and go to state 8


state 5

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 6

    (2) functions -> function functions .

    MODEL           reduce using rule 2 (functions -> function functions .)


state 7

    (1) program -> functions MODEL . LCURLY vars data model statementblock RCURLY

    LCURLY          shift and go to state 9


state 8

    (4) function -> FUNC ID . LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY

    LPAREN          shift and go to state 10


state 9

    (1) program -> functions MODEL LCURLY . vars data model statementblock RCURLY
    (11) vars -> . varblock
    (12) vars -> . empty
    (13) varblock -> . VARS LCURLY lvars RCURLY
    (90) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 90 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (4) function -> FUNC ID LPAREN . lparameters RPAREN LCURLY vars data statementblock RCURLY
    (5) lparameters -> . parameter
    (6) lparameters -> . parameter parameters
    (7) lparameters -> . empty
    (10) parameter -> . vartype ID
    (90) empty -> .
    (65) vartype -> . TINT
    (66) vartype -> . TFLOAT
    (67) vartype -> . TBOOL

    RPAREN          reduce using rule 90 (empty -> .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

    lparameters                    shift and go to state 16
    vartype                        shift and go to state 19
    parameter                      shift and go to state 17
    empty                          shift and go to state 21

state 11

    (13) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 22


state 12

    (1) program -> functions MODEL LCURLY vars . data model statementblock RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 23

    data                           shift and go to state 24

state 13

    (11) vars -> varblock .

    DATA            reduce using rule 11 (vars -> varblock .)


state 14

    (12) vars -> empty .

    DATA            reduce using rule 12 (vars -> empty .)


state 15

    (66) vartype -> TFLOAT .

    ID              reduce using rule 66 (vartype -> TFLOAT .)
    LBRACKET        reduce using rule 66 (vartype -> TFLOAT .)
    POINTS          reduce using rule 66 (vartype -> TFLOAT .)


state 16

    (4) function -> FUNC ID LPAREN lparameters . RPAREN LCURLY vars data statementblock RCURLY

    RPAREN          shift and go to state 25


state 17

    (5) lparameters -> parameter .
    (6) lparameters -> parameter . parameters
    (8) parameters -> . COMMA parameters
    (9) parameters -> . empty
    (90) empty -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 5 (lparameters -> parameter .)
    RPAREN          reduce using rule 5 (lparameters -> parameter .)
    COMMA           shift and go to state 26

  ! RPAREN          [ reduce using rule 90 (empty -> .) ]

    empty                          shift and go to state 27
    parameters                     shift and go to state 28

state 18

    (65) vartype -> TINT .

    ID              reduce using rule 65 (vartype -> TINT .)
    LBRACKET        reduce using rule 65 (vartype -> TINT .)
    POINTS          reduce using rule 65 (vartype -> TINT .)


state 19

    (10) parameter -> vartype . ID

    ID              shift and go to state 29


state 20

    (67) vartype -> TBOOL .

    ID              reduce using rule 67 (vartype -> TBOOL .)
    LBRACKET        reduce using rule 67 (vartype -> TBOOL .)
    POINTS          reduce using rule 67 (vartype -> TBOOL .)


state 21

    (7) lparameters -> empty .

    RPAREN          reduce using rule 7 (lparameters -> empty .)


state 22

    (13) varblock -> VARS LCURLY . lvars RCURLY
    (14) lvars -> . listofvars lvars
    (15) lvars -> . listofvars
    (16) lvars -> . empty
    (17) listofvars -> . typedeclaration POINTS listofids SEMIC
    (90) empty -> .
    (18) typedeclaration -> . vartype dimensions
    (65) vartype -> . TINT
    (66) vartype -> . TFLOAT
    (67) vartype -> . TBOOL

    RCURLY          reduce using rule 90 (empty -> .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

    listofvars                     shift and go to state 31
    typedeclaration                shift and go to state 30
    lvars                          shift and go to state 32
    vartype                        shift and go to state 33
    empty                          shift and go to state 34

state 23

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 35


state 24

    (1) program -> functions MODEL LCURLY vars data . model statementblock RCURLY
    (47) model -> . optimize
    (48) model -> . optimize where
    (49) model -> . statementblock
    (50) model -> . empty
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (90) empty -> .
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for CTEBOOL resolved as shift
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    RCURLY          reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]
  ! MIN             [ reduce using rule 90 (empty -> .) ]
  ! MAX             [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! BUILD           [ reduce using rule 90 (empty -> .) ]
  ! CONDITION       [ reduce using rule 90 (empty -> .) ]
  ! PLUS            [ reduce using rule 90 (empty -> .) ]
  ! MINUS           [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! CTEI            [ reduce using rule 90 (empty -> .) ]
  ! CTEF            [ reduce using rule 90 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 90 (empty -> .) ]
  ! CTEBOOL         [ reduce using rule 90 (empty -> .) ]

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    optimize                       shift and go to state 57
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 51
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    model                          shift and go to state 36
    condition                      shift and go to state 58
    statementblock                 shift and go to state 60
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 25

    (4) function -> FUNC ID LPAREN lparameters RPAREN . LCURLY vars data statementblock RCURLY

    LCURLY          shift and go to state 71


state 26

    (8) parameters -> COMMA . parameters
    (8) parameters -> . COMMA parameters
    (9) parameters -> . empty
    (90) empty -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 90 (empty -> .)

    empty                          shift and go to state 27
    parameters                     shift and go to state 72

state 27

    (9) parameters -> empty .

    RPAREN          reduce using rule 9 (parameters -> empty .)


state 28

    (6) lparameters -> parameter parameters .

    RPAREN          reduce using rule 6 (lparameters -> parameter parameters .)


state 29

    (10) parameter -> vartype ID .

    COMMA           reduce using rule 10 (parameter -> vartype ID .)
    RPAREN          reduce using rule 10 (parameter -> vartype ID .)


state 30

    (17) listofvars -> typedeclaration . POINTS listofids SEMIC

    POINTS          shift and go to state 73


state 31

    (14) lvars -> listofvars . lvars
    (15) lvars -> listofvars .
    (14) lvars -> . listofvars lvars
    (15) lvars -> . listofvars
    (16) lvars -> . empty
    (17) listofvars -> . typedeclaration POINTS listofids SEMIC
    (90) empty -> .
    (18) typedeclaration -> . vartype dimensions
    (65) vartype -> . TINT
    (66) vartype -> . TFLOAT
    (67) vartype -> . TBOOL

  ! reduce/reduce conflict for RCURLY resolved using rule 15 (lvars -> listofvars .)
    RCURLY          reduce using rule 15 (lvars -> listofvars .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

  ! RCURLY          [ reduce using rule 90 (empty -> .) ]

    listofvars                     shift and go to state 31
    typedeclaration                shift and go to state 30
    lvars                          shift and go to state 74
    vartype                        shift and go to state 33
    empty                          shift and go to state 34

state 32

    (13) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 75


state 33

    (18) typedeclaration -> vartype . dimensions
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (90) empty -> .

    LBRACKET        shift and go to state 77
    POINTS          reduce using rule 90 (empty -> .)

    dimensions                     shift and go to state 76
    empty                          shift and go to state 78

state 34

    (16) lvars -> empty .

    RCURLY          reduce using rule 16 (lvars -> empty .)


state 35

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . ID EQUALS expresiones SEMIC
    (90) empty -> .

    ID              shift and go to state 81
    RCURLY          reduce using rule 90 (empty -> .)

    asignmany                      shift and go to state 79
    empty                          shift and go to state 82
    asign                          shift and go to state 80

state 36

    (1) program -> functions MODEL LCURLY vars data model . statementblock RCURLY
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    optimize                       shift and go to state 84
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    condition                      shift and go to state 58
    statementblock                 shift and go to state 85
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 37

    (86) return -> RETURN . asign
    (27) asign -> . ID EQUALS expresiones SEMIC

    ID              shift and go to state 81

    asign                          shift and go to state 86

state 38

    (51) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 87


state 39

    (81) write -> PRINT . LPAREN write2 RPAREN SEMIC

    LPAREN          shift and go to state 88


state 40

    (43) factor -> MINUS . constant
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67
    ID              shift and go to state 90

    functioncall                   shift and go to state 49
    constant                       shift and go to state 89
    id                             shift and go to state 42

state 41

    (58) statement -> for .

    ID              reduce using rule 58 (statement -> for .)
    IF              reduce using rule 58 (statement -> for .)
    PRINT           reduce using rule 58 (statement -> for .)
    MIN             reduce using rule 58 (statement -> for .)
    MAX             reduce using rule 58 (statement -> for .)
    FOR             reduce using rule 58 (statement -> for .)
    RETURN          reduce using rule 58 (statement -> for .)
    BUILD           reduce using rule 58 (statement -> for .)
    CONDITION       reduce using rule 58 (statement -> for .)
    PLUS            reduce using rule 58 (statement -> for .)
    MINUS           reduce using rule 58 (statement -> for .)
    LPAREN          reduce using rule 58 (statement -> for .)
    CTEI            reduce using rule 58 (statement -> for .)
    CTEF            reduce using rule 58 (statement -> for .)
    CTESTRING       reduce using rule 58 (statement -> for .)
    CTEBOOL         reduce using rule 58 (statement -> for .)
    RCURLY          reduce using rule 58 (statement -> for .)
    SEMIC           reduce using rule 58 (statement -> for .)
    ELSE            reduce using rule 58 (statement -> for .)
    WHERE           reduce using rule 58 (statement -> for .)


state 42

    (72) constant -> id .

    STAR            reduce using rule 72 (constant -> id .)
    SLASH           reduce using rule 72 (constant -> id .)
    PLUS            reduce using rule 72 (constant -> id .)
    MINUS           reduce using rule 72 (constant -> id .)
    LESSTHAN        reduce using rule 72 (constant -> id .)
    LESSEQUAL       reduce using rule 72 (constant -> id .)
    GREATEREQUAL    reduce using rule 72 (constant -> id .)
    GREATERTHAN     reduce using rule 72 (constant -> id .)
    BETWEEN         reduce using rule 72 (constant -> id .)
    RPAREN          reduce using rule 72 (constant -> id .)
    RBRACKET        reduce using rule 72 (constant -> id .)
    ID              reduce using rule 72 (constant -> id .)
    IF              reduce using rule 72 (constant -> id .)
    PRINT           reduce using rule 72 (constant -> id .)
    MIN             reduce using rule 72 (constant -> id .)
    MAX             reduce using rule 72 (constant -> id .)
    FOR             reduce using rule 72 (constant -> id .)
    RETURN          reduce using rule 72 (constant -> id .)
    BUILD           reduce using rule 72 (constant -> id .)
    CONDITION       reduce using rule 72 (constant -> id .)
    LPAREN          reduce using rule 72 (constant -> id .)
    CTEI            reduce using rule 72 (constant -> id .)
    CTEF            reduce using rule 72 (constant -> id .)
    CTESTRING       reduce using rule 72 (constant -> id .)
    CTEBOOL         reduce using rule 72 (constant -> id .)
    RCURLY          reduce using rule 72 (constant -> id .)
    SEMIC           reduce using rule 72 (constant -> id .)
    ELSE            reduce using rule 72 (constant -> id .)
    WHERE           reduce using rule 72 (constant -> id .)
    DOT             reduce using rule 72 (constant -> id .)
    COMMA           reduce using rule 72 (constant -> id .)


state 43

    (27) asign -> ID . EQUALS expresiones SEMIC
    (45) factor -> ID .
    (74) id -> ID . dimensions
    (75) functioncall -> ID . LPAREN expresion RPAREN
    (76) functioncall -> ID . LPAREN CTEI RPAREN
    (77) functioncall -> ID . LPAREN CTEF RPAREN
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (90) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for STAR resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for SLASH resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MIN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MAX resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for BUILD resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CONDITION resolved using rule 45 (factor -> ID .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTEF resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTEBOOL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RCURLY resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for SEMIC resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for WHERE resolved using rule 45 (factor -> ID .)
    EQUALS          shift and go to state 92
    STAR            reduce using rule 45 (factor -> ID .)
    SLASH           reduce using rule 45 (factor -> ID .)
    PLUS            reduce using rule 45 (factor -> ID .)
    MINUS           reduce using rule 45 (factor -> ID .)
    LESSTHAN        reduce using rule 45 (factor -> ID .)
    LESSEQUAL       reduce using rule 45 (factor -> ID .)
    GREATEREQUAL    reduce using rule 45 (factor -> ID .)
    GREATERTHAN     reduce using rule 45 (factor -> ID .)
    BETWEEN         reduce using rule 45 (factor -> ID .)
    ID              reduce using rule 45 (factor -> ID .)
    IF              reduce using rule 45 (factor -> ID .)
    PRINT           reduce using rule 45 (factor -> ID .)
    MIN             reduce using rule 45 (factor -> ID .)
    MAX             reduce using rule 45 (factor -> ID .)
    FOR             reduce using rule 45 (factor -> ID .)
    RETURN          reduce using rule 45 (factor -> ID .)
    BUILD           reduce using rule 45 (factor -> ID .)
    CONDITION       reduce using rule 45 (factor -> ID .)
    CTEI            reduce using rule 45 (factor -> ID .)
    CTEF            reduce using rule 45 (factor -> ID .)
    CTESTRING       reduce using rule 45 (factor -> ID .)
    CTEBOOL         reduce using rule 45 (factor -> ID .)
    RCURLY          reduce using rule 45 (factor -> ID .)
    SEMIC           reduce using rule 45 (factor -> ID .)
    WHERE           reduce using rule 45 (factor -> ID .)
    ELSE            reduce using rule 45 (factor -> ID .)
    LPAREN          shift and go to state 93
    LBRACKET        shift and go to state 77

  ! LPAREN          [ reduce using rule 45 (factor -> ID .) ]
  ! STAR            [ reduce using rule 90 (empty -> .) ]
  ! SLASH           [ reduce using rule 90 (empty -> .) ]
  ! PLUS            [ reduce using rule 90 (empty -> .) ]
  ! MINUS           [ reduce using rule 90 (empty -> .) ]
  ! LESSTHAN        [ reduce using rule 90 (empty -> .) ]
  ! LESSEQUAL       [ reduce using rule 90 (empty -> .) ]
  ! GREATEREQUAL    [ reduce using rule 90 (empty -> .) ]
  ! GREATERTHAN     [ reduce using rule 90 (empty -> .) ]
  ! BETWEEN         [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]
  ! MIN             [ reduce using rule 90 (empty -> .) ]
  ! MAX             [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! BUILD           [ reduce using rule 90 (empty -> .) ]
  ! CONDITION       [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! CTEI            [ reduce using rule 90 (empty -> .) ]
  ! CTEF            [ reduce using rule 90 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 90 (empty -> .) ]
  ! CTEBOOL         [ reduce using rule 90 (empty -> .) ]
  ! RCURLY          [ reduce using rule 90 (empty -> .) ]
  ! SEMIC           [ reduce using rule 90 (empty -> .) ]
  ! ELSE            [ reduce using rule 90 (empty -> .) ]
  ! WHERE           [ reduce using rule 90 (empty -> .) ]

    dimensions                     shift and go to state 91
    empty                          shift and go to state 78

state 44

    (56) statement -> write .

    ID              reduce using rule 56 (statement -> write .)
    IF              reduce using rule 56 (statement -> write .)
    PRINT           reduce using rule 56 (statement -> write .)
    MIN             reduce using rule 56 (statement -> write .)
    MAX             reduce using rule 56 (statement -> write .)
    FOR             reduce using rule 56 (statement -> write .)
    RETURN          reduce using rule 56 (statement -> write .)
    BUILD           reduce using rule 56 (statement -> write .)
    CONDITION       reduce using rule 56 (statement -> write .)
    PLUS            reduce using rule 56 (statement -> write .)
    MINUS           reduce using rule 56 (statement -> write .)
    LPAREN          reduce using rule 56 (statement -> write .)
    CTEI            reduce using rule 56 (statement -> write .)
    CTEF            reduce using rule 56 (statement -> write .)
    CTESTRING       reduce using rule 56 (statement -> write .)
    CTEBOOL         reduce using rule 56 (statement -> write .)
    RCURLY          reduce using rule 56 (statement -> write .)
    SEMIC           reduce using rule 56 (statement -> write .)
    ELSE            reduce using rule 56 (statement -> write .)
    WHERE           reduce using rule 56 (statement -> write .)


state 45

    (42) factor -> PLUS . constant
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67
    ID              shift and go to state 90

    functioncall                   shift and go to state 49
    constant                       shift and go to state 94
    id                             shift and go to state 42

state 46

    (60) statement -> build .

    ID              reduce using rule 60 (statement -> build .)
    IF              reduce using rule 60 (statement -> build .)
    PRINT           reduce using rule 60 (statement -> build .)
    MIN             reduce using rule 60 (statement -> build .)
    MAX             reduce using rule 60 (statement -> build .)
    FOR             reduce using rule 60 (statement -> build .)
    RETURN          reduce using rule 60 (statement -> build .)
    BUILD           reduce using rule 60 (statement -> build .)
    CONDITION       reduce using rule 60 (statement -> build .)
    PLUS            reduce using rule 60 (statement -> build .)
    MINUS           reduce using rule 60 (statement -> build .)
    LPAREN          reduce using rule 60 (statement -> build .)
    CTEI            reduce using rule 60 (statement -> build .)
    CTEF            reduce using rule 60 (statement -> build .)
    CTESTRING       reduce using rule 60 (statement -> build .)
    CTEBOOL         reduce using rule 60 (statement -> build .)
    RCURLY          reduce using rule 60 (statement -> build .)
    SEMIC           reduce using rule 60 (statement -> build .)
    ELSE            reduce using rule 60 (statement -> build .)
    WHERE           reduce using rule 60 (statement -> build .)


state 47

    (87) statementblock -> statement . statementblock
    (88) statementblock -> statement .
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

  ! reduce/reduce conflict for ID resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for IF resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for PRINT resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for MIN resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for MAX resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for FOR resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for RETURN resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for BUILD resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for CONDITION resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for PLUS resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for MINUS resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for LPAREN resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for CTEI resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for CTEF resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for CTEBOOL resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for RCURLY resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for SEMIC resolved using rule 88 (statementblock -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 88 (statementblock -> statement .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for CTEBOOL resolved as shift
    SEMIC           reduce using rule 88 (statementblock -> statement .)
    RCURLY          reduce using rule 88 (statementblock -> statement .)
    ELSE            reduce using rule 88 (statementblock -> statement .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

  ! ID              [ reduce using rule 88 (statementblock -> statement .) ]
  ! IF              [ reduce using rule 88 (statementblock -> statement .) ]
  ! PRINT           [ reduce using rule 88 (statementblock -> statement .) ]
  ! MIN             [ reduce using rule 88 (statementblock -> statement .) ]
  ! MAX             [ reduce using rule 88 (statementblock -> statement .) ]
  ! FOR             [ reduce using rule 88 (statementblock -> statement .) ]
  ! RETURN          [ reduce using rule 88 (statementblock -> statement .) ]
  ! BUILD           [ reduce using rule 88 (statementblock -> statement .) ]
  ! CONDITION       [ reduce using rule 88 (statementblock -> statement .) ]
  ! PLUS            [ reduce using rule 88 (statementblock -> statement .) ]
  ! MINUS           [ reduce using rule 88 (statementblock -> statement .) ]
  ! LPAREN          [ reduce using rule 88 (statementblock -> statement .) ]
  ! CTEI            [ reduce using rule 88 (statementblock -> statement .) ]
  ! CTEF            [ reduce using rule 88 (statementblock -> statement .) ]
  ! CTESTRING       [ reduce using rule 88 (statementblock -> statement .) ]
  ! CTEBOOL         [ reduce using rule 88 (statementblock -> statement .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]
  ! MIN             [ reduce using rule 90 (empty -> .) ]
  ! MAX             [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! BUILD           [ reduce using rule 90 (empty -> .) ]
  ! CONDITION       [ reduce using rule 90 (empty -> .) ]
  ! PLUS            [ reduce using rule 90 (empty -> .) ]
  ! MINUS           [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! CTEI            [ reduce using rule 90 (empty -> .) ]
  ! CTEF            [ reduce using rule 90 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 90 (empty -> .) ]
  ! CTEBOOL         [ reduce using rule 90 (empty -> .) ]
  ! RCURLY          [ reduce using rule 90 (empty -> .) ]
  ! SEMIC           [ reduce using rule 90 (empty -> .) ]
  ! ELSE            [ reduce using rule 90 (empty -> .) ]

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    statementblock                 shift and go to state 95
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 48

    (39) term -> factor .
    (40) term -> factor . STAR term
    (41) term -> factor . SLASH term

    PLUS            reduce using rule 39 (term -> factor .)
    MINUS           reduce using rule 39 (term -> factor .)
    LESSTHAN        reduce using rule 39 (term -> factor .)
    LESSEQUAL       reduce using rule 39 (term -> factor .)
    GREATEREQUAL    reduce using rule 39 (term -> factor .)
    GREATERTHAN     reduce using rule 39 (term -> factor .)
    BETWEEN         reduce using rule 39 (term -> factor .)
    ID              reduce using rule 39 (term -> factor .)
    IF              reduce using rule 39 (term -> factor .)
    PRINT           reduce using rule 39 (term -> factor .)
    MIN             reduce using rule 39 (term -> factor .)
    MAX             reduce using rule 39 (term -> factor .)
    FOR             reduce using rule 39 (term -> factor .)
    RETURN          reduce using rule 39 (term -> factor .)
    BUILD           reduce using rule 39 (term -> factor .)
    CONDITION       reduce using rule 39 (term -> factor .)
    LPAREN          reduce using rule 39 (term -> factor .)
    CTEI            reduce using rule 39 (term -> factor .)
    CTEF            reduce using rule 39 (term -> factor .)
    CTESTRING       reduce using rule 39 (term -> factor .)
    CTEBOOL         reduce using rule 39 (term -> factor .)
    RCURLY          reduce using rule 39 (term -> factor .)
    RPAREN          reduce using rule 39 (term -> factor .)
    COMMA           reduce using rule 39 (term -> factor .)
    SEMIC           reduce using rule 39 (term -> factor .)
    DOT             reduce using rule 39 (term -> factor .)
    WHERE           reduce using rule 39 (term -> factor .)
    ELSE            reduce using rule 39 (term -> factor .)
    RBRACKET        reduce using rule 39 (term -> factor .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 97


state 49

    (73) constant -> functioncall .

    STAR            reduce using rule 73 (constant -> functioncall .)
    SLASH           reduce using rule 73 (constant -> functioncall .)
    PLUS            reduce using rule 73 (constant -> functioncall .)
    MINUS           reduce using rule 73 (constant -> functioncall .)
    LESSTHAN        reduce using rule 73 (constant -> functioncall .)
    LESSEQUAL       reduce using rule 73 (constant -> functioncall .)
    GREATEREQUAL    reduce using rule 73 (constant -> functioncall .)
    GREATERTHAN     reduce using rule 73 (constant -> functioncall .)
    BETWEEN         reduce using rule 73 (constant -> functioncall .)
    RPAREN          reduce using rule 73 (constant -> functioncall .)
    RBRACKET        reduce using rule 73 (constant -> functioncall .)
    ID              reduce using rule 73 (constant -> functioncall .)
    IF              reduce using rule 73 (constant -> functioncall .)
    PRINT           reduce using rule 73 (constant -> functioncall .)
    MIN             reduce using rule 73 (constant -> functioncall .)
    MAX             reduce using rule 73 (constant -> functioncall .)
    FOR             reduce using rule 73 (constant -> functioncall .)
    RETURN          reduce using rule 73 (constant -> functioncall .)
    BUILD           reduce using rule 73 (constant -> functioncall .)
    CONDITION       reduce using rule 73 (constant -> functioncall .)
    LPAREN          reduce using rule 73 (constant -> functioncall .)
    CTEI            reduce using rule 73 (constant -> functioncall .)
    CTEF            reduce using rule 73 (constant -> functioncall .)
    CTESTRING       reduce using rule 73 (constant -> functioncall .)
    CTEBOOL         reduce using rule 73 (constant -> functioncall .)
    RCURLY          reduce using rule 73 (constant -> functioncall .)
    SEMIC           reduce using rule 73 (constant -> functioncall .)
    ELSE            reduce using rule 73 (constant -> functioncall .)
    WHERE           reduce using rule 73 (constant -> functioncall .)
    DOT             reduce using rule 73 (constant -> functioncall .)
    COMMA           reduce using rule 73 (constant -> functioncall .)


state 50

    (44) factor -> constant .

    STAR            reduce using rule 44 (factor -> constant .)
    SLASH           reduce using rule 44 (factor -> constant .)
    PLUS            reduce using rule 44 (factor -> constant .)
    MINUS           reduce using rule 44 (factor -> constant .)
    ID              reduce using rule 44 (factor -> constant .)
    IF              reduce using rule 44 (factor -> constant .)
    PRINT           reduce using rule 44 (factor -> constant .)
    MIN             reduce using rule 44 (factor -> constant .)
    MAX             reduce using rule 44 (factor -> constant .)
    FOR             reduce using rule 44 (factor -> constant .)
    RETURN          reduce using rule 44 (factor -> constant .)
    BUILD           reduce using rule 44 (factor -> constant .)
    CONDITION       reduce using rule 44 (factor -> constant .)
    LPAREN          reduce using rule 44 (factor -> constant .)
    CTEI            reduce using rule 44 (factor -> constant .)
    CTEF            reduce using rule 44 (factor -> constant .)
    CTESTRING       reduce using rule 44 (factor -> constant .)
    CTEBOOL         reduce using rule 44 (factor -> constant .)
    RCURLY          reduce using rule 44 (factor -> constant .)
    SEMIC           reduce using rule 44 (factor -> constant .)
    ELSE            reduce using rule 44 (factor -> constant .)
    RPAREN          reduce using rule 44 (factor -> constant .)
    RBRACKET        reduce using rule 44 (factor -> constant .)
    WHERE           reduce using rule 44 (factor -> constant .)
    DOT             reduce using rule 44 (factor -> constant .)
    COMMA           reduce using rule 44 (factor -> constant .)
    LESSTHAN        reduce using rule 44 (factor -> constant .)
    LESSEQUAL       reduce using rule 44 (factor -> constant .)
    GREATEREQUAL    reduce using rule 44 (factor -> constant .)
    GREATERTHAN     reduce using rule 44 (factor -> constant .)
    BETWEEN         reduce using rule 44 (factor -> constant .)


state 51

    (50) model -> empty .
    (89) statementblock -> empty .

  ! reduce/reduce conflict for ID resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for IF resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for MIN resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for MAX resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for BUILD resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for CONDITION resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for CTEI resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for CTEBOOL resolved using rule 50 (model -> empty .)
  ! reduce/reduce conflict for RCURLY resolved using rule 50 (model -> empty .)
    ID              reduce using rule 50 (model -> empty .)
    IF              reduce using rule 50 (model -> empty .)
    PRINT           reduce using rule 50 (model -> empty .)
    MIN             reduce using rule 50 (model -> empty .)
    MAX             reduce using rule 50 (model -> empty .)
    FOR             reduce using rule 50 (model -> empty .)
    RETURN          reduce using rule 50 (model -> empty .)
    BUILD           reduce using rule 50 (model -> empty .)
    CONDITION       reduce using rule 50 (model -> empty .)
    PLUS            reduce using rule 50 (model -> empty .)
    MINUS           reduce using rule 50 (model -> empty .)
    LPAREN          reduce using rule 50 (model -> empty .)
    CTEI            reduce using rule 50 (model -> empty .)
    CTEF            reduce using rule 50 (model -> empty .)
    CTESTRING       reduce using rule 50 (model -> empty .)
    CTEBOOL         reduce using rule 50 (model -> empty .)
    RCURLY          reduce using rule 50 (model -> empty .)

  ! ID              [ reduce using rule 89 (statementblock -> empty .) ]
  ! IF              [ reduce using rule 89 (statementblock -> empty .) ]
  ! PRINT           [ reduce using rule 89 (statementblock -> empty .) ]
  ! MIN             [ reduce using rule 89 (statementblock -> empty .) ]
  ! MAX             [ reduce using rule 89 (statementblock -> empty .) ]
  ! FOR             [ reduce using rule 89 (statementblock -> empty .) ]
  ! RETURN          [ reduce using rule 89 (statementblock -> empty .) ]
  ! BUILD           [ reduce using rule 89 (statementblock -> empty .) ]
  ! CONDITION       [ reduce using rule 89 (statementblock -> empty .) ]
  ! PLUS            [ reduce using rule 89 (statementblock -> empty .) ]
  ! MINUS           [ reduce using rule 89 (statementblock -> empty .) ]
  ! LPAREN          [ reduce using rule 89 (statementblock -> empty .) ]
  ! CTEI            [ reduce using rule 89 (statementblock -> empty .) ]
  ! CTEF            [ reduce using rule 89 (statementblock -> empty .) ]
  ! CTESTRING       [ reduce using rule 89 (statementblock -> empty .) ]
  ! CTEBOOL         [ reduce using rule 89 (statementblock -> empty .) ]
  ! RCURLY          [ reduce using rule 89 (statementblock -> empty .) ]


state 52

    (54) statement -> expresion .

    ID              reduce using rule 54 (statement -> expresion .)
    IF              reduce using rule 54 (statement -> expresion .)
    PRINT           reduce using rule 54 (statement -> expresion .)
    MIN             reduce using rule 54 (statement -> expresion .)
    MAX             reduce using rule 54 (statement -> expresion .)
    FOR             reduce using rule 54 (statement -> expresion .)
    RETURN          reduce using rule 54 (statement -> expresion .)
    BUILD           reduce using rule 54 (statement -> expresion .)
    CONDITION       reduce using rule 54 (statement -> expresion .)
    PLUS            reduce using rule 54 (statement -> expresion .)
    MINUS           reduce using rule 54 (statement -> expresion .)
    LPAREN          reduce using rule 54 (statement -> expresion .)
    CTEI            reduce using rule 54 (statement -> expresion .)
    CTEF            reduce using rule 54 (statement -> expresion .)
    CTESTRING       reduce using rule 54 (statement -> expresion .)
    CTEBOOL         reduce using rule 54 (statement -> expresion .)
    RCURLY          reduce using rule 54 (statement -> expresion .)
    SEMIC           reduce using rule 54 (statement -> expresion .)
    ELSE            reduce using rule 54 (statement -> expresion .)
    WHERE           reduce using rule 54 (statement -> expresion .)


state 53

    (59) statement -> return .

    ID              reduce using rule 59 (statement -> return .)
    IF              reduce using rule 59 (statement -> return .)
    PRINT           reduce using rule 59 (statement -> return .)
    MIN             reduce using rule 59 (statement -> return .)
    MAX             reduce using rule 59 (statement -> return .)
    FOR             reduce using rule 59 (statement -> return .)
    RETURN          reduce using rule 59 (statement -> return .)
    BUILD           reduce using rule 59 (statement -> return .)
    CONDITION       reduce using rule 59 (statement -> return .)
    PLUS            reduce using rule 59 (statement -> return .)
    MINUS           reduce using rule 59 (statement -> return .)
    LPAREN          reduce using rule 59 (statement -> return .)
    CTEI            reduce using rule 59 (statement -> return .)
    CTEF            reduce using rule 59 (statement -> return .)
    CTESTRING       reduce using rule 59 (statement -> return .)
    CTEBOOL         reduce using rule 59 (statement -> return .)
    RCURLY          reduce using rule 59 (statement -> return .)
    SEMIC           reduce using rule 59 (statement -> return .)
    ELSE            reduce using rule 59 (statement -> return .)
    WHERE           reduce using rule 59 (statement -> return .)


state 54

    (78) for -> FOR . ID IN DOT ID LCURLY statementblock RCURLY

    ID              shift and go to state 98


state 55

    (62) build -> BUILD . expresion SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 100
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 56

    (46) factor -> LPAREN . expresion RPAREN
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 101
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 57

    (47) model -> optimize .
    (48) model -> optimize . where
    (57) statement -> optimize .
    (63) where -> . WHERE LCURLY statementblock RCURLY

  ! reduce/reduce conflict for ID resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for IF resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for MIN resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for MAX resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for RETURN resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for BUILD resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for CONDITION resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for LPAREN resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for CTEI resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for CTEF resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for CTEBOOL resolved using rule 47 (model -> optimize .)
  ! reduce/reduce conflict for RCURLY resolved using rule 47 (model -> optimize .)
    ID              reduce using rule 47 (model -> optimize .)
    IF              reduce using rule 47 (model -> optimize .)
    PRINT           reduce using rule 47 (model -> optimize .)
    MIN             reduce using rule 47 (model -> optimize .)
    MAX             reduce using rule 47 (model -> optimize .)
    FOR             reduce using rule 47 (model -> optimize .)
    RETURN          reduce using rule 47 (model -> optimize .)
    BUILD           reduce using rule 47 (model -> optimize .)
    CONDITION       reduce using rule 47 (model -> optimize .)
    PLUS            reduce using rule 47 (model -> optimize .)
    MINUS           reduce using rule 47 (model -> optimize .)
    LPAREN          reduce using rule 47 (model -> optimize .)
    CTEI            reduce using rule 47 (model -> optimize .)
    CTEF            reduce using rule 47 (model -> optimize .)
    CTESTRING       reduce using rule 47 (model -> optimize .)
    CTEBOOL         reduce using rule 47 (model -> optimize .)
    RCURLY          reduce using rule 47 (model -> optimize .)
    WHERE           shift and go to state 103

  ! ID              [ reduce using rule 57 (statement -> optimize .) ]
  ! IF              [ reduce using rule 57 (statement -> optimize .) ]
  ! PRINT           [ reduce using rule 57 (statement -> optimize .) ]
  ! MIN             [ reduce using rule 57 (statement -> optimize .) ]
  ! MAX             [ reduce using rule 57 (statement -> optimize .) ]
  ! FOR             [ reduce using rule 57 (statement -> optimize .) ]
  ! RETURN          [ reduce using rule 57 (statement -> optimize .) ]
  ! BUILD           [ reduce using rule 57 (statement -> optimize .) ]
  ! CONDITION       [ reduce using rule 57 (statement -> optimize .) ]
  ! PLUS            [ reduce using rule 57 (statement -> optimize .) ]
  ! MINUS           [ reduce using rule 57 (statement -> optimize .) ]
  ! LPAREN          [ reduce using rule 57 (statement -> optimize .) ]
  ! CTEI            [ reduce using rule 57 (statement -> optimize .) ]
  ! CTEF            [ reduce using rule 57 (statement -> optimize .) ]
  ! CTESTRING       [ reduce using rule 57 (statement -> optimize .) ]
  ! CTEBOOL         [ reduce using rule 57 (statement -> optimize .) ]
  ! RCURLY          [ reduce using rule 57 (statement -> optimize .) ]

    where                          shift and go to state 102

state 58

    (55) statement -> condition .

    ID              reduce using rule 55 (statement -> condition .)
    IF              reduce using rule 55 (statement -> condition .)
    PRINT           reduce using rule 55 (statement -> condition .)
    MIN             reduce using rule 55 (statement -> condition .)
    MAX             reduce using rule 55 (statement -> condition .)
    FOR             reduce using rule 55 (statement -> condition .)
    RETURN          reduce using rule 55 (statement -> condition .)
    BUILD           reduce using rule 55 (statement -> condition .)
    CONDITION       reduce using rule 55 (statement -> condition .)
    PLUS            reduce using rule 55 (statement -> condition .)
    MINUS           reduce using rule 55 (statement -> condition .)
    LPAREN          reduce using rule 55 (statement -> condition .)
    CTEI            reduce using rule 55 (statement -> condition .)
    CTEF            reduce using rule 55 (statement -> condition .)
    CTESTRING       reduce using rule 55 (statement -> condition .)
    CTEBOOL         reduce using rule 55 (statement -> condition .)
    RCURLY          reduce using rule 55 (statement -> condition .)
    SEMIC           reduce using rule 55 (statement -> condition .)
    ELSE            reduce using rule 55 (statement -> condition .)
    WHERE           reduce using rule 55 (statement -> condition .)


state 59

    (79) condition -> IF . LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> IF . LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC

    LPAREN          shift and go to state 104


state 60

    (49) model -> statementblock .

    ID              reduce using rule 49 (model -> statementblock .)
    IF              reduce using rule 49 (model -> statementblock .)
    PRINT           reduce using rule 49 (model -> statementblock .)
    MIN             reduce using rule 49 (model -> statementblock .)
    MAX             reduce using rule 49 (model -> statementblock .)
    FOR             reduce using rule 49 (model -> statementblock .)
    RETURN          reduce using rule 49 (model -> statementblock .)
    BUILD           reduce using rule 49 (model -> statementblock .)
    CONDITION       reduce using rule 49 (model -> statementblock .)
    PLUS            reduce using rule 49 (model -> statementblock .)
    MINUS           reduce using rule 49 (model -> statementblock .)
    LPAREN          reduce using rule 49 (model -> statementblock .)
    CTEI            reduce using rule 49 (model -> statementblock .)
    CTEF            reduce using rule 49 (model -> statementblock .)
    CTESTRING       reduce using rule 49 (model -> statementblock .)
    CTEBOOL         reduce using rule 49 (model -> statementblock .)
    RCURLY          reduce using rule 49 (model -> statementblock .)


state 61

    (36) exp -> term .
    (37) exp -> term . PLUS exp
    (38) exp -> term . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LESSTHAN        reduce using rule 36 (exp -> term .)
    LESSEQUAL       reduce using rule 36 (exp -> term .)
    GREATEREQUAL    reduce using rule 36 (exp -> term .)
    GREATERTHAN     reduce using rule 36 (exp -> term .)
    BETWEEN         reduce using rule 36 (exp -> term .)
    ID              reduce using rule 36 (exp -> term .)
    IF              reduce using rule 36 (exp -> term .)
    PRINT           reduce using rule 36 (exp -> term .)
    MIN             reduce using rule 36 (exp -> term .)
    MAX             reduce using rule 36 (exp -> term .)
    FOR             reduce using rule 36 (exp -> term .)
    RETURN          reduce using rule 36 (exp -> term .)
    BUILD           reduce using rule 36 (exp -> term .)
    CONDITION       reduce using rule 36 (exp -> term .)
    LPAREN          reduce using rule 36 (exp -> term .)
    CTEI            reduce using rule 36 (exp -> term .)
    CTEF            reduce using rule 36 (exp -> term .)
    CTESTRING       reduce using rule 36 (exp -> term .)
    CTEBOOL         reduce using rule 36 (exp -> term .)
    RCURLY          reduce using rule 36 (exp -> term .)
    SEMIC           reduce using rule 36 (exp -> term .)
    ELSE            reduce using rule 36 (exp -> term .)
    RPAREN          reduce using rule 36 (exp -> term .)
    RBRACKET        reduce using rule 36 (exp -> term .)
    WHERE           reduce using rule 36 (exp -> term .)
    DOT             reduce using rule 36 (exp -> term .)
    COMMA           reduce using rule 36 (exp -> term .)
    PLUS            shift and go to state 105
    MINUS           shift and go to state 106

  ! PLUS            [ reduce using rule 36 (exp -> term .) ]
  ! MINUS           [ reduce using rule 36 (exp -> term .) ]


state 62

    (52) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 107


state 63

    (53) statement -> asign .

    ID              reduce using rule 53 (statement -> asign .)
    IF              reduce using rule 53 (statement -> asign .)
    PRINT           reduce using rule 53 (statement -> asign .)
    MIN             reduce using rule 53 (statement -> asign .)
    MAX             reduce using rule 53 (statement -> asign .)
    FOR             reduce using rule 53 (statement -> asign .)
    RETURN          reduce using rule 53 (statement -> asign .)
    BUILD           reduce using rule 53 (statement -> asign .)
    CONDITION       reduce using rule 53 (statement -> asign .)
    PLUS            reduce using rule 53 (statement -> asign .)
    MINUS           reduce using rule 53 (statement -> asign .)
    LPAREN          reduce using rule 53 (statement -> asign .)
    CTEI            reduce using rule 53 (statement -> asign .)
    CTEF            reduce using rule 53 (statement -> asign .)
    CTESTRING       reduce using rule 53 (statement -> asign .)
    CTEBOOL         reduce using rule 53 (statement -> asign .)
    RCURLY          reduce using rule 53 (statement -> asign .)
    SEMIC           reduce using rule 53 (statement -> asign .)
    ELSE            reduce using rule 53 (statement -> asign .)
    WHERE           reduce using rule 53 (statement -> asign .)


state 64

    (69) constant -> CTEF .

    STAR            reduce using rule 69 (constant -> CTEF .)
    SLASH           reduce using rule 69 (constant -> CTEF .)
    PLUS            reduce using rule 69 (constant -> CTEF .)
    MINUS           reduce using rule 69 (constant -> CTEF .)
    LESSTHAN        reduce using rule 69 (constant -> CTEF .)
    LESSEQUAL       reduce using rule 69 (constant -> CTEF .)
    GREATEREQUAL    reduce using rule 69 (constant -> CTEF .)
    GREATERTHAN     reduce using rule 69 (constant -> CTEF .)
    BETWEEN         reduce using rule 69 (constant -> CTEF .)
    RPAREN          reduce using rule 69 (constant -> CTEF .)
    RBRACKET        reduce using rule 69 (constant -> CTEF .)
    ID              reduce using rule 69 (constant -> CTEF .)
    IF              reduce using rule 69 (constant -> CTEF .)
    PRINT           reduce using rule 69 (constant -> CTEF .)
    MIN             reduce using rule 69 (constant -> CTEF .)
    MAX             reduce using rule 69 (constant -> CTEF .)
    FOR             reduce using rule 69 (constant -> CTEF .)
    RETURN          reduce using rule 69 (constant -> CTEF .)
    BUILD           reduce using rule 69 (constant -> CTEF .)
    CONDITION       reduce using rule 69 (constant -> CTEF .)
    LPAREN          reduce using rule 69 (constant -> CTEF .)
    CTEI            reduce using rule 69 (constant -> CTEF .)
    CTEF            reduce using rule 69 (constant -> CTEF .)
    CTESTRING       reduce using rule 69 (constant -> CTEF .)
    CTEBOOL         reduce using rule 69 (constant -> CTEF .)
    RCURLY          reduce using rule 69 (constant -> CTEF .)
    SEMIC           reduce using rule 69 (constant -> CTEF .)
    ELSE            reduce using rule 69 (constant -> CTEF .)
    WHERE           reduce using rule 69 (constant -> CTEF .)
    DOT             reduce using rule 69 (constant -> CTEF .)
    COMMA           reduce using rule 69 (constant -> CTEF .)


state 65

    (64) wherecondition -> CONDITION . expresion SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 108
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 66

    (30) expresion -> exp .
    (31) expresion -> exp . LESSTHAN exp
    (32) expresion -> exp . LESSEQUAL exp
    (33) expresion -> exp . GREATEREQUAL exp
    (34) expresion -> exp . GREATERTHAN exp
    (35) expresion -> exp . BETWEEN exp

    ID              reduce using rule 30 (expresion -> exp .)
    IF              reduce using rule 30 (expresion -> exp .)
    PRINT           reduce using rule 30 (expresion -> exp .)
    MIN             reduce using rule 30 (expresion -> exp .)
    MAX             reduce using rule 30 (expresion -> exp .)
    FOR             reduce using rule 30 (expresion -> exp .)
    RETURN          reduce using rule 30 (expresion -> exp .)
    BUILD           reduce using rule 30 (expresion -> exp .)
    CONDITION       reduce using rule 30 (expresion -> exp .)
    PLUS            reduce using rule 30 (expresion -> exp .)
    MINUS           reduce using rule 30 (expresion -> exp .)
    LPAREN          reduce using rule 30 (expresion -> exp .)
    CTEI            reduce using rule 30 (expresion -> exp .)
    CTEF            reduce using rule 30 (expresion -> exp .)
    CTESTRING       reduce using rule 30 (expresion -> exp .)
    CTEBOOL         reduce using rule 30 (expresion -> exp .)
    RCURLY          reduce using rule 30 (expresion -> exp .)
    COMMA           reduce using rule 30 (expresion -> exp .)
    SEMIC           reduce using rule 30 (expresion -> exp .)
    RPAREN          reduce using rule 30 (expresion -> exp .)
    ELSE            reduce using rule 30 (expresion -> exp .)
    WHERE           reduce using rule 30 (expresion -> exp .)
    DOT             reduce using rule 30 (expresion -> exp .)
    RBRACKET        reduce using rule 30 (expresion -> exp .)
    LESSTHAN        shift and go to state 110
    LESSEQUAL       shift and go to state 113
    GREATEREQUAL    shift and go to state 109
    GREATERTHAN     shift and go to state 111
    BETWEEN         shift and go to state 112


state 67

    (71) constant -> CTEBOOL .

    STAR            reduce using rule 71 (constant -> CTEBOOL .)
    SLASH           reduce using rule 71 (constant -> CTEBOOL .)
    PLUS            reduce using rule 71 (constant -> CTEBOOL .)
    MINUS           reduce using rule 71 (constant -> CTEBOOL .)
    LESSTHAN        reduce using rule 71 (constant -> CTEBOOL .)
    LESSEQUAL       reduce using rule 71 (constant -> CTEBOOL .)
    GREATEREQUAL    reduce using rule 71 (constant -> CTEBOOL .)
    GREATERTHAN     reduce using rule 71 (constant -> CTEBOOL .)
    BETWEEN         reduce using rule 71 (constant -> CTEBOOL .)
    RPAREN          reduce using rule 71 (constant -> CTEBOOL .)
    RBRACKET        reduce using rule 71 (constant -> CTEBOOL .)
    ID              reduce using rule 71 (constant -> CTEBOOL .)
    IF              reduce using rule 71 (constant -> CTEBOOL .)
    PRINT           reduce using rule 71 (constant -> CTEBOOL .)
    MIN             reduce using rule 71 (constant -> CTEBOOL .)
    MAX             reduce using rule 71 (constant -> CTEBOOL .)
    FOR             reduce using rule 71 (constant -> CTEBOOL .)
    RETURN          reduce using rule 71 (constant -> CTEBOOL .)
    BUILD           reduce using rule 71 (constant -> CTEBOOL .)
    CONDITION       reduce using rule 71 (constant -> CTEBOOL .)
    LPAREN          reduce using rule 71 (constant -> CTEBOOL .)
    CTEI            reduce using rule 71 (constant -> CTEBOOL .)
    CTEF            reduce using rule 71 (constant -> CTEBOOL .)
    CTESTRING       reduce using rule 71 (constant -> CTEBOOL .)
    CTEBOOL         reduce using rule 71 (constant -> CTEBOOL .)
    RCURLY          reduce using rule 71 (constant -> CTEBOOL .)
    SEMIC           reduce using rule 71 (constant -> CTEBOOL .)
    ELSE            reduce using rule 71 (constant -> CTEBOOL .)
    WHERE           reduce using rule 71 (constant -> CTEBOOL .)
    DOT             reduce using rule 71 (constant -> CTEBOOL .)
    COMMA           reduce using rule 71 (constant -> CTEBOOL .)


state 68

    (61) statement -> wherecondition .

    ID              reduce using rule 61 (statement -> wherecondition .)
    IF              reduce using rule 61 (statement -> wherecondition .)
    PRINT           reduce using rule 61 (statement -> wherecondition .)
    MIN             reduce using rule 61 (statement -> wherecondition .)
    MAX             reduce using rule 61 (statement -> wherecondition .)
    FOR             reduce using rule 61 (statement -> wherecondition .)
    RETURN          reduce using rule 61 (statement -> wherecondition .)
    BUILD           reduce using rule 61 (statement -> wherecondition .)
    CONDITION       reduce using rule 61 (statement -> wherecondition .)
    PLUS            reduce using rule 61 (statement -> wherecondition .)
    MINUS           reduce using rule 61 (statement -> wherecondition .)
    LPAREN          reduce using rule 61 (statement -> wherecondition .)
    CTEI            reduce using rule 61 (statement -> wherecondition .)
    CTEF            reduce using rule 61 (statement -> wherecondition .)
    CTESTRING       reduce using rule 61 (statement -> wherecondition .)
    CTEBOOL         reduce using rule 61 (statement -> wherecondition .)
    RCURLY          reduce using rule 61 (statement -> wherecondition .)
    SEMIC           reduce using rule 61 (statement -> wherecondition .)
    ELSE            reduce using rule 61 (statement -> wherecondition .)
    WHERE           reduce using rule 61 (statement -> wherecondition .)


state 69

    (68) constant -> CTEI .

    STAR            reduce using rule 68 (constant -> CTEI .)
    SLASH           reduce using rule 68 (constant -> CTEI .)
    PLUS            reduce using rule 68 (constant -> CTEI .)
    MINUS           reduce using rule 68 (constant -> CTEI .)
    LESSTHAN        reduce using rule 68 (constant -> CTEI .)
    LESSEQUAL       reduce using rule 68 (constant -> CTEI .)
    GREATEREQUAL    reduce using rule 68 (constant -> CTEI .)
    GREATERTHAN     reduce using rule 68 (constant -> CTEI .)
    BETWEEN         reduce using rule 68 (constant -> CTEI .)
    RPAREN          reduce using rule 68 (constant -> CTEI .)
    RBRACKET        reduce using rule 68 (constant -> CTEI .)
    ID              reduce using rule 68 (constant -> CTEI .)
    IF              reduce using rule 68 (constant -> CTEI .)
    PRINT           reduce using rule 68 (constant -> CTEI .)
    MIN             reduce using rule 68 (constant -> CTEI .)
    MAX             reduce using rule 68 (constant -> CTEI .)
    FOR             reduce using rule 68 (constant -> CTEI .)
    RETURN          reduce using rule 68 (constant -> CTEI .)
    BUILD           reduce using rule 68 (constant -> CTEI .)
    CONDITION       reduce using rule 68 (constant -> CTEI .)
    LPAREN          reduce using rule 68 (constant -> CTEI .)
    CTEI            reduce using rule 68 (constant -> CTEI .)
    CTEF            reduce using rule 68 (constant -> CTEI .)
    CTESTRING       reduce using rule 68 (constant -> CTEI .)
    CTEBOOL         reduce using rule 68 (constant -> CTEI .)
    RCURLY          reduce using rule 68 (constant -> CTEI .)
    SEMIC           reduce using rule 68 (constant -> CTEI .)
    ELSE            reduce using rule 68 (constant -> CTEI .)
    WHERE           reduce using rule 68 (constant -> CTEI .)
    DOT             reduce using rule 68 (constant -> CTEI .)
    COMMA           reduce using rule 68 (constant -> CTEI .)


state 70

    (70) constant -> CTESTRING .

    STAR            reduce using rule 70 (constant -> CTESTRING .)
    SLASH           reduce using rule 70 (constant -> CTESTRING .)
    PLUS            reduce using rule 70 (constant -> CTESTRING .)
    MINUS           reduce using rule 70 (constant -> CTESTRING .)
    LESSTHAN        reduce using rule 70 (constant -> CTESTRING .)
    LESSEQUAL       reduce using rule 70 (constant -> CTESTRING .)
    GREATEREQUAL    reduce using rule 70 (constant -> CTESTRING .)
    GREATERTHAN     reduce using rule 70 (constant -> CTESTRING .)
    BETWEEN         reduce using rule 70 (constant -> CTESTRING .)
    RPAREN          reduce using rule 70 (constant -> CTESTRING .)
    RBRACKET        reduce using rule 70 (constant -> CTESTRING .)
    ID              reduce using rule 70 (constant -> CTESTRING .)
    IF              reduce using rule 70 (constant -> CTESTRING .)
    PRINT           reduce using rule 70 (constant -> CTESTRING .)
    MIN             reduce using rule 70 (constant -> CTESTRING .)
    MAX             reduce using rule 70 (constant -> CTESTRING .)
    FOR             reduce using rule 70 (constant -> CTESTRING .)
    RETURN          reduce using rule 70 (constant -> CTESTRING .)
    BUILD           reduce using rule 70 (constant -> CTESTRING .)
    CONDITION       reduce using rule 70 (constant -> CTESTRING .)
    LPAREN          reduce using rule 70 (constant -> CTESTRING .)
    CTEI            reduce using rule 70 (constant -> CTESTRING .)
    CTEF            reduce using rule 70 (constant -> CTESTRING .)
    CTESTRING       reduce using rule 70 (constant -> CTESTRING .)
    CTEBOOL         reduce using rule 70 (constant -> CTESTRING .)
    RCURLY          reduce using rule 70 (constant -> CTESTRING .)
    SEMIC           reduce using rule 70 (constant -> CTESTRING .)
    ELSE            reduce using rule 70 (constant -> CTESTRING .)
    WHERE           reduce using rule 70 (constant -> CTESTRING .)
    DOT             reduce using rule 70 (constant -> CTESTRING .)
    COMMA           reduce using rule 70 (constant -> CTESTRING .)


state 71

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY . vars data statementblock RCURLY
    (11) vars -> . varblock
    (12) vars -> . empty
    (13) varblock -> . VARS LCURLY lvars RCURLY
    (90) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 90 (empty -> .)

    vars                           shift and go to state 114
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 72

    (8) parameters -> COMMA parameters .

    RPAREN          reduce using rule 8 (parameters -> COMMA parameters .)


state 73

    (17) listofvars -> typedeclaration POINTS . listofids SEMIC
    (21) listofids -> . ID lid

    ID              shift and go to state 116

    listofids                      shift and go to state 115

state 74

    (14) lvars -> listofvars lvars .

    RCURLY          reduce using rule 14 (lvars -> listofvars lvars .)


state 75

    (13) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 13 (varblock -> VARS LCURLY lvars RCURLY .)


state 76

    (18) typedeclaration -> vartype dimensions .

    POINTS          reduce using rule 18 (typedeclaration -> vartype dimensions .)


state 77

    (19) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 117
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 78

    (20) dimensions -> empty .

    STAR            reduce using rule 20 (dimensions -> empty .)
    SLASH           reduce using rule 20 (dimensions -> empty .)
    PLUS            reduce using rule 20 (dimensions -> empty .)
    MINUS           reduce using rule 20 (dimensions -> empty .)
    LESSTHAN        reduce using rule 20 (dimensions -> empty .)
    LESSEQUAL       reduce using rule 20 (dimensions -> empty .)
    GREATEREQUAL    reduce using rule 20 (dimensions -> empty .)
    GREATERTHAN     reduce using rule 20 (dimensions -> empty .)
    BETWEEN         reduce using rule 20 (dimensions -> empty .)
    ID              reduce using rule 20 (dimensions -> empty .)
    IF              reduce using rule 20 (dimensions -> empty .)
    PRINT           reduce using rule 20 (dimensions -> empty .)
    MIN             reduce using rule 20 (dimensions -> empty .)
    MAX             reduce using rule 20 (dimensions -> empty .)
    FOR             reduce using rule 20 (dimensions -> empty .)
    RETURN          reduce using rule 20 (dimensions -> empty .)
    BUILD           reduce using rule 20 (dimensions -> empty .)
    CONDITION       reduce using rule 20 (dimensions -> empty .)
    LPAREN          reduce using rule 20 (dimensions -> empty .)
    CTEI            reduce using rule 20 (dimensions -> empty .)
    CTEF            reduce using rule 20 (dimensions -> empty .)
    CTESTRING       reduce using rule 20 (dimensions -> empty .)
    CTEBOOL         reduce using rule 20 (dimensions -> empty .)
    RCURLY          reduce using rule 20 (dimensions -> empty .)
    SEMIC           reduce using rule 20 (dimensions -> empty .)
    ELSE            reduce using rule 20 (dimensions -> empty .)
    RPAREN          reduce using rule 20 (dimensions -> empty .)
    RBRACKET        reduce using rule 20 (dimensions -> empty .)
    WHERE           reduce using rule 20 (dimensions -> empty .)
    DOT             reduce using rule 20 (dimensions -> empty .)
    COMMA           reduce using rule 20 (dimensions -> empty .)
    POINTS          reduce using rule 20 (dimensions -> empty .)


state 79

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 118


state 80

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . ID EQUALS expresiones SEMIC
    (90) empty -> .

    ID              shift and go to state 81
    RCURLY          reduce using rule 90 (empty -> .)

    asignmany                      shift and go to state 119
    empty                          shift and go to state 82
    asign                          shift and go to state 80

state 81

    (27) asign -> ID . EQUALS expresiones SEMIC

    EQUALS          shift and go to state 92


state 82

    (26) asignmany -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)


state 83

    (89) statementblock -> empty .

    SEMIC           reduce using rule 89 (statementblock -> empty .)
    ELSE            reduce using rule 89 (statementblock -> empty .)
    RCURLY          reduce using rule 89 (statementblock -> empty .)
    ID              reduce using rule 89 (statementblock -> empty .)
    IF              reduce using rule 89 (statementblock -> empty .)
    PRINT           reduce using rule 89 (statementblock -> empty .)
    MIN             reduce using rule 89 (statementblock -> empty .)
    MAX             reduce using rule 89 (statementblock -> empty .)
    FOR             reduce using rule 89 (statementblock -> empty .)
    RETURN          reduce using rule 89 (statementblock -> empty .)
    BUILD           reduce using rule 89 (statementblock -> empty .)
    CONDITION       reduce using rule 89 (statementblock -> empty .)
    PLUS            reduce using rule 89 (statementblock -> empty .)
    MINUS           reduce using rule 89 (statementblock -> empty .)
    LPAREN          reduce using rule 89 (statementblock -> empty .)
    CTEI            reduce using rule 89 (statementblock -> empty .)
    CTEF            reduce using rule 89 (statementblock -> empty .)
    CTESTRING       reduce using rule 89 (statementblock -> empty .)
    CTEBOOL         reduce using rule 89 (statementblock -> empty .)


state 84

    (57) statement -> optimize .

    ID              reduce using rule 57 (statement -> optimize .)
    IF              reduce using rule 57 (statement -> optimize .)
    PRINT           reduce using rule 57 (statement -> optimize .)
    MIN             reduce using rule 57 (statement -> optimize .)
    MAX             reduce using rule 57 (statement -> optimize .)
    FOR             reduce using rule 57 (statement -> optimize .)
    RETURN          reduce using rule 57 (statement -> optimize .)
    BUILD           reduce using rule 57 (statement -> optimize .)
    CONDITION       reduce using rule 57 (statement -> optimize .)
    PLUS            reduce using rule 57 (statement -> optimize .)
    MINUS           reduce using rule 57 (statement -> optimize .)
    LPAREN          reduce using rule 57 (statement -> optimize .)
    CTEI            reduce using rule 57 (statement -> optimize .)
    CTEF            reduce using rule 57 (statement -> optimize .)
    CTESTRING       reduce using rule 57 (statement -> optimize .)
    CTEBOOL         reduce using rule 57 (statement -> optimize .)
    RCURLY          reduce using rule 57 (statement -> optimize .)
    SEMIC           reduce using rule 57 (statement -> optimize .)
    ELSE            reduce using rule 57 (statement -> optimize .)
    WHERE           reduce using rule 57 (statement -> optimize .)


state 85

    (1) program -> functions MODEL LCURLY vars data model statementblock . RCURLY

    RCURLY          shift and go to state 120


state 86

    (86) return -> RETURN asign .

    WHERE           reduce using rule 86 (return -> RETURN asign .)
    ID              reduce using rule 86 (return -> RETURN asign .)
    IF              reduce using rule 86 (return -> RETURN asign .)
    PRINT           reduce using rule 86 (return -> RETURN asign .)
    MIN             reduce using rule 86 (return -> RETURN asign .)
    MAX             reduce using rule 86 (return -> RETURN asign .)
    FOR             reduce using rule 86 (return -> RETURN asign .)
    RETURN          reduce using rule 86 (return -> RETURN asign .)
    BUILD           reduce using rule 86 (return -> RETURN asign .)
    CONDITION       reduce using rule 86 (return -> RETURN asign .)
    PLUS            reduce using rule 86 (return -> RETURN asign .)
    MINUS           reduce using rule 86 (return -> RETURN asign .)
    LPAREN          reduce using rule 86 (return -> RETURN asign .)
    CTEI            reduce using rule 86 (return -> RETURN asign .)
    CTEF            reduce using rule 86 (return -> RETURN asign .)
    CTESTRING       reduce using rule 86 (return -> RETURN asign .)
    CTEBOOL         reduce using rule 86 (return -> RETURN asign .)
    SEMIC           reduce using rule 86 (return -> RETURN asign .)
    RCURLY          reduce using rule 86 (return -> RETURN asign .)
    ELSE            reduce using rule 86 (return -> RETURN asign .)


state 87

    (51) optimize -> MIN LCURLY . statement where RCURLY
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 52
    return                         shift and go to state 53
    exp                            shift and go to state 66
    for                            shift and go to state 41
    term                           shift and go to state 61
    asign                          shift and go to state 63
    write                          shift and go to state 44
    functioncall                   shift and go to state 49
    build                          shift and go to state 46
    statement                      shift and go to state 121
    factor                         shift and go to state 48
    id                             shift and go to state 42
    constant                       shift and go to state 50
    wherecondition                 shift and go to state 68
    optimize                       shift and go to state 84
    condition                      shift and go to state 58

state 88

    (81) write -> PRINT LPAREN . write2 RPAREN SEMIC
    (82) write2 -> . expresion
    (83) write2 -> . CTESTRING
    (84) write2 -> . expresion DOT write2
    (85) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 122
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 123
    term                           shift and go to state 61
    constant                       shift and go to state 50
    write2                         shift and go to state 124
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 89

    (43) factor -> MINUS constant .

    STAR            reduce using rule 43 (factor -> MINUS constant .)
    SLASH           reduce using rule 43 (factor -> MINUS constant .)
    PLUS            reduce using rule 43 (factor -> MINUS constant .)
    MINUS           reduce using rule 43 (factor -> MINUS constant .)
    ID              reduce using rule 43 (factor -> MINUS constant .)
    IF              reduce using rule 43 (factor -> MINUS constant .)
    PRINT           reduce using rule 43 (factor -> MINUS constant .)
    MIN             reduce using rule 43 (factor -> MINUS constant .)
    MAX             reduce using rule 43 (factor -> MINUS constant .)
    FOR             reduce using rule 43 (factor -> MINUS constant .)
    RETURN          reduce using rule 43 (factor -> MINUS constant .)
    BUILD           reduce using rule 43 (factor -> MINUS constant .)
    CONDITION       reduce using rule 43 (factor -> MINUS constant .)
    LPAREN          reduce using rule 43 (factor -> MINUS constant .)
    CTEI            reduce using rule 43 (factor -> MINUS constant .)
    CTEF            reduce using rule 43 (factor -> MINUS constant .)
    CTESTRING       reduce using rule 43 (factor -> MINUS constant .)
    CTEBOOL         reduce using rule 43 (factor -> MINUS constant .)
    RCURLY          reduce using rule 43 (factor -> MINUS constant .)
    SEMIC           reduce using rule 43 (factor -> MINUS constant .)
    ELSE            reduce using rule 43 (factor -> MINUS constant .)
    RPAREN          reduce using rule 43 (factor -> MINUS constant .)
    RBRACKET        reduce using rule 43 (factor -> MINUS constant .)
    WHERE           reduce using rule 43 (factor -> MINUS constant .)
    DOT             reduce using rule 43 (factor -> MINUS constant .)
    COMMA           reduce using rule 43 (factor -> MINUS constant .)
    LESSTHAN        reduce using rule 43 (factor -> MINUS constant .)
    LESSEQUAL       reduce using rule 43 (factor -> MINUS constant .)
    GREATEREQUAL    reduce using rule 43 (factor -> MINUS constant .)
    GREATERTHAN     reduce using rule 43 (factor -> MINUS constant .)
    BETWEEN         reduce using rule 43 (factor -> MINUS constant .)


state 90

    (74) id -> ID . dimensions
    (75) functioncall -> ID . LPAREN expresion RPAREN
    (76) functioncall -> ID . LPAREN CTEI RPAREN
    (77) functioncall -> ID . LPAREN CTEF RPAREN
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (90) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 93
    LBRACKET        shift and go to state 77
    STAR            reduce using rule 90 (empty -> .)
    SLASH           reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    LESSTHAN        reduce using rule 90 (empty -> .)
    LESSEQUAL       reduce using rule 90 (empty -> .)
    GREATEREQUAL    reduce using rule 90 (empty -> .)
    GREATERTHAN     reduce using rule 90 (empty -> .)
    BETWEEN         reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    PRINT           reduce using rule 90 (empty -> .)
    MIN             reduce using rule 90 (empty -> .)
    MAX             reduce using rule 90 (empty -> .)
    FOR             reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    BUILD           reduce using rule 90 (empty -> .)
    CONDITION       reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTESTRING       reduce using rule 90 (empty -> .)
    CTEBOOL         reduce using rule 90 (empty -> .)
    RCURLY          reduce using rule 90 (empty -> .)
    SEMIC           reduce using rule 90 (empty -> .)
    ELSE            reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    RBRACKET        reduce using rule 90 (empty -> .)
    WHERE           reduce using rule 90 (empty -> .)
    DOT             reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)

  ! LPAREN          [ reduce using rule 90 (empty -> .) ]

    dimensions                     shift and go to state 91
    empty                          shift and go to state 78

state 91

    (74) id -> ID dimensions .

    STAR            reduce using rule 74 (id -> ID dimensions .)
    SLASH           reduce using rule 74 (id -> ID dimensions .)
    PLUS            reduce using rule 74 (id -> ID dimensions .)
    MINUS           reduce using rule 74 (id -> ID dimensions .)
    LESSTHAN        reduce using rule 74 (id -> ID dimensions .)
    LESSEQUAL       reduce using rule 74 (id -> ID dimensions .)
    GREATEREQUAL    reduce using rule 74 (id -> ID dimensions .)
    GREATERTHAN     reduce using rule 74 (id -> ID dimensions .)
    BETWEEN         reduce using rule 74 (id -> ID dimensions .)
    ID              reduce using rule 74 (id -> ID dimensions .)
    IF              reduce using rule 74 (id -> ID dimensions .)
    PRINT           reduce using rule 74 (id -> ID dimensions .)
    MIN             reduce using rule 74 (id -> ID dimensions .)
    MAX             reduce using rule 74 (id -> ID dimensions .)
    FOR             reduce using rule 74 (id -> ID dimensions .)
    RETURN          reduce using rule 74 (id -> ID dimensions .)
    BUILD           reduce using rule 74 (id -> ID dimensions .)
    CONDITION       reduce using rule 74 (id -> ID dimensions .)
    LPAREN          reduce using rule 74 (id -> ID dimensions .)
    CTEI            reduce using rule 74 (id -> ID dimensions .)
    CTEF            reduce using rule 74 (id -> ID dimensions .)
    CTESTRING       reduce using rule 74 (id -> ID dimensions .)
    CTEBOOL         reduce using rule 74 (id -> ID dimensions .)
    RCURLY          reduce using rule 74 (id -> ID dimensions .)
    SEMIC           reduce using rule 74 (id -> ID dimensions .)
    ELSE            reduce using rule 74 (id -> ID dimensions .)
    RPAREN          reduce using rule 74 (id -> ID dimensions .)
    RBRACKET        reduce using rule 74 (id -> ID dimensions .)
    WHERE           reduce using rule 74 (id -> ID dimensions .)
    DOT             reduce using rule 74 (id -> ID dimensions .)
    COMMA           reduce using rule 74 (id -> ID dimensions .)


state 92

    (27) asign -> ID EQUALS . expresiones SEMIC
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 126
    expresiones                    shift and go to state 125
    constant                       shift and go to state 50
    term                           shift and go to state 61
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 93

    (75) functioncall -> ID LPAREN . expresion RPAREN
    (76) functioncall -> ID LPAREN . CTEI RPAREN
    (77) functioncall -> ID LPAREN . CTEF RPAREN
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 129
    CTEF            shift and go to state 128
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 127
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 94

    (42) factor -> PLUS constant .

    STAR            reduce using rule 42 (factor -> PLUS constant .)
    SLASH           reduce using rule 42 (factor -> PLUS constant .)
    PLUS            reduce using rule 42 (factor -> PLUS constant .)
    MINUS           reduce using rule 42 (factor -> PLUS constant .)
    ID              reduce using rule 42 (factor -> PLUS constant .)
    IF              reduce using rule 42 (factor -> PLUS constant .)
    PRINT           reduce using rule 42 (factor -> PLUS constant .)
    MIN             reduce using rule 42 (factor -> PLUS constant .)
    MAX             reduce using rule 42 (factor -> PLUS constant .)
    FOR             reduce using rule 42 (factor -> PLUS constant .)
    RETURN          reduce using rule 42 (factor -> PLUS constant .)
    BUILD           reduce using rule 42 (factor -> PLUS constant .)
    CONDITION       reduce using rule 42 (factor -> PLUS constant .)
    LPAREN          reduce using rule 42 (factor -> PLUS constant .)
    CTEI            reduce using rule 42 (factor -> PLUS constant .)
    CTEF            reduce using rule 42 (factor -> PLUS constant .)
    CTESTRING       reduce using rule 42 (factor -> PLUS constant .)
    CTEBOOL         reduce using rule 42 (factor -> PLUS constant .)
    RCURLY          reduce using rule 42 (factor -> PLUS constant .)
    SEMIC           reduce using rule 42 (factor -> PLUS constant .)
    ELSE            reduce using rule 42 (factor -> PLUS constant .)
    RPAREN          reduce using rule 42 (factor -> PLUS constant .)
    RBRACKET        reduce using rule 42 (factor -> PLUS constant .)
    WHERE           reduce using rule 42 (factor -> PLUS constant .)
    DOT             reduce using rule 42 (factor -> PLUS constant .)
    COMMA           reduce using rule 42 (factor -> PLUS constant .)
    LESSTHAN        reduce using rule 42 (factor -> PLUS constant .)
    LESSEQUAL       reduce using rule 42 (factor -> PLUS constant .)
    GREATEREQUAL    reduce using rule 42 (factor -> PLUS constant .)
    GREATERTHAN     reduce using rule 42 (factor -> PLUS constant .)
    BETWEEN         reduce using rule 42 (factor -> PLUS constant .)


state 95

    (87) statementblock -> statement statementblock .

    SEMIC           reduce using rule 87 (statementblock -> statement statementblock .)
    ID              reduce using rule 87 (statementblock -> statement statementblock .)
    IF              reduce using rule 87 (statementblock -> statement statementblock .)
    PRINT           reduce using rule 87 (statementblock -> statement statementblock .)
    MIN             reduce using rule 87 (statementblock -> statement statementblock .)
    MAX             reduce using rule 87 (statementblock -> statement statementblock .)
    FOR             reduce using rule 87 (statementblock -> statement statementblock .)
    RETURN          reduce using rule 87 (statementblock -> statement statementblock .)
    BUILD           reduce using rule 87 (statementblock -> statement statementblock .)
    CONDITION       reduce using rule 87 (statementblock -> statement statementblock .)
    PLUS            reduce using rule 87 (statementblock -> statement statementblock .)
    MINUS           reduce using rule 87 (statementblock -> statement statementblock .)
    LPAREN          reduce using rule 87 (statementblock -> statement statementblock .)
    CTEI            reduce using rule 87 (statementblock -> statement statementblock .)
    CTEF            reduce using rule 87 (statementblock -> statement statementblock .)
    CTESTRING       reduce using rule 87 (statementblock -> statement statementblock .)
    CTEBOOL         reduce using rule 87 (statementblock -> statement statementblock .)
    RCURLY          reduce using rule 87 (statementblock -> statement statementblock .)
    ELSE            reduce using rule 87 (statementblock -> statement statementblock .)


state 96

    (40) term -> factor STAR . term
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 130
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 97

    (41) term -> factor SLASH . term
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 131
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 98

    (78) for -> FOR ID . IN DOT ID LCURLY statementblock RCURLY

    IN              shift and go to state 132


state 99

    (45) factor -> ID .
    (74) id -> ID . dimensions
    (75) functioncall -> ID . LPAREN expresion RPAREN
    (76) functioncall -> ID . LPAREN CTEI RPAREN
    (77) functioncall -> ID . LPAREN CTEF RPAREN
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (90) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for STAR resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for SLASH resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for SEMIC resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for DOT resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MIN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for MAX resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for BUILD resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CONDITION resolved using rule 45 (factor -> ID .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for CTEI resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTEF resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTESTRING resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for CTEBOOL resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for RCURLY resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (factor -> ID .)
  ! reduce/reduce conflict for WHERE resolved using rule 45 (factor -> ID .)
    STAR            reduce using rule 45 (factor -> ID .)
    SLASH           reduce using rule 45 (factor -> ID .)
    PLUS            reduce using rule 45 (factor -> ID .)
    MINUS           reduce using rule 45 (factor -> ID .)
    ID              reduce using rule 45 (factor -> ID .)
    IF              reduce using rule 45 (factor -> ID .)
    PRINT           reduce using rule 45 (factor -> ID .)
    MIN             reduce using rule 45 (factor -> ID .)
    MAX             reduce using rule 45 (factor -> ID .)
    FOR             reduce using rule 45 (factor -> ID .)
    RETURN          reduce using rule 45 (factor -> ID .)
    BUILD           reduce using rule 45 (factor -> ID .)
    CONDITION       reduce using rule 45 (factor -> ID .)
    CTEI            reduce using rule 45 (factor -> ID .)
    CTEF            reduce using rule 45 (factor -> ID .)
    CTESTRING       reduce using rule 45 (factor -> ID .)
    CTEBOOL         reduce using rule 45 (factor -> ID .)
    RCURLY          reduce using rule 45 (factor -> ID .)
    SEMIC           reduce using rule 45 (factor -> ID .)
    ELSE            reduce using rule 45 (factor -> ID .)
    RPAREN          reduce using rule 45 (factor -> ID .)
    RBRACKET        reduce using rule 45 (factor -> ID .)
    WHERE           reduce using rule 45 (factor -> ID .)
    DOT             reduce using rule 45 (factor -> ID .)
    COMMA           reduce using rule 45 (factor -> ID .)
    LESSTHAN        reduce using rule 45 (factor -> ID .)
    LESSEQUAL       reduce using rule 45 (factor -> ID .)
    GREATEREQUAL    reduce using rule 45 (factor -> ID .)
    GREATERTHAN     reduce using rule 45 (factor -> ID .)
    BETWEEN         reduce using rule 45 (factor -> ID .)
    LPAREN          shift and go to state 93
    LBRACKET        shift and go to state 77

  ! LPAREN          [ reduce using rule 45 (factor -> ID .) ]
  ! STAR            [ reduce using rule 90 (empty -> .) ]
  ! SLASH           [ reduce using rule 90 (empty -> .) ]
  ! PLUS            [ reduce using rule 90 (empty -> .) ]
  ! MINUS           [ reduce using rule 90 (empty -> .) ]
  ! LESSTHAN        [ reduce using rule 90 (empty -> .) ]
  ! LESSEQUAL       [ reduce using rule 90 (empty -> .) ]
  ! GREATEREQUAL    [ reduce using rule 90 (empty -> .) ]
  ! GREATERTHAN     [ reduce using rule 90 (empty -> .) ]
  ! BETWEEN         [ reduce using rule 90 (empty -> .) ]
  ! SEMIC           [ reduce using rule 90 (empty -> .) ]
  ! RPAREN          [ reduce using rule 90 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 90 (empty -> .) ]
  ! DOT             [ reduce using rule 90 (empty -> .) ]
  ! COMMA           [ reduce using rule 90 (empty -> .) ]
  ! ID              [ reduce using rule 90 (empty -> .) ]
  ! IF              [ reduce using rule 90 (empty -> .) ]
  ! PRINT           [ reduce using rule 90 (empty -> .) ]
  ! MIN             [ reduce using rule 90 (empty -> .) ]
  ! MAX             [ reduce using rule 90 (empty -> .) ]
  ! FOR             [ reduce using rule 90 (empty -> .) ]
  ! RETURN          [ reduce using rule 90 (empty -> .) ]
  ! BUILD           [ reduce using rule 90 (empty -> .) ]
  ! CONDITION       [ reduce using rule 90 (empty -> .) ]
  ! LPAREN          [ reduce using rule 90 (empty -> .) ]
  ! CTEI            [ reduce using rule 90 (empty -> .) ]
  ! CTEF            [ reduce using rule 90 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 90 (empty -> .) ]
  ! CTEBOOL         [ reduce using rule 90 (empty -> .) ]
  ! RCURLY          [ reduce using rule 90 (empty -> .) ]
  ! ELSE            [ reduce using rule 90 (empty -> .) ]
  ! WHERE           [ reduce using rule 90 (empty -> .) ]

    dimensions                     shift and go to state 91
    empty                          shift and go to state 78

state 100

    (62) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 133


state 101

    (46) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 134


state 102

    (48) model -> optimize where .

    ID              reduce using rule 48 (model -> optimize where .)
    IF              reduce using rule 48 (model -> optimize where .)
    PRINT           reduce using rule 48 (model -> optimize where .)
    MIN             reduce using rule 48 (model -> optimize where .)
    MAX             reduce using rule 48 (model -> optimize where .)
    FOR             reduce using rule 48 (model -> optimize where .)
    RETURN          reduce using rule 48 (model -> optimize where .)
    BUILD           reduce using rule 48 (model -> optimize where .)
    CONDITION       reduce using rule 48 (model -> optimize where .)
    PLUS            reduce using rule 48 (model -> optimize where .)
    MINUS           reduce using rule 48 (model -> optimize where .)
    LPAREN          reduce using rule 48 (model -> optimize where .)
    CTEI            reduce using rule 48 (model -> optimize where .)
    CTEF            reduce using rule 48 (model -> optimize where .)
    CTESTRING       reduce using rule 48 (model -> optimize where .)
    CTEBOOL         reduce using rule 48 (model -> optimize where .)
    RCURLY          reduce using rule 48 (model -> optimize where .)


state 103

    (63) where -> WHERE . LCURLY statementblock RCURLY

    LCURLY          shift and go to state 135


state 104

    (79) condition -> IF LPAREN . expresion RPAREN statementblock SEMIC
    (80) condition -> IF LPAREN . expresion RPAREN statementblock ELSE statementblock SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 136
    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 105

    (37) exp -> term PLUS . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 137
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 106

    (38) exp -> term MINUS . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 138
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 107

    (52) optimize -> MAX LCURLY . statement where RCURLY
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 52
    return                         shift and go to state 53
    exp                            shift and go to state 66
    for                            shift and go to state 41
    term                           shift and go to state 61
    asign                          shift and go to state 63
    write                          shift and go to state 44
    functioncall                   shift and go to state 49
    build                          shift and go to state 46
    statement                      shift and go to state 139
    factor                         shift and go to state 48
    id                             shift and go to state 42
    constant                       shift and go to state 50
    wherecondition                 shift and go to state 68
    optimize                       shift and go to state 84
    condition                      shift and go to state 58

state 108

    (64) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 140


state 109

    (33) expresion -> exp GREATEREQUAL . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 141
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 110

    (31) expresion -> exp LESSTHAN . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 142
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 111

    (34) expresion -> exp GREATERTHAN . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 143
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 112

    (35) expresion -> exp BETWEEN . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 144
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 113

    (32) expresion -> exp LESSEQUAL . exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    term                           shift and go to state 61
    constant                       shift and go to state 50
    functioncall                   shift and go to state 49
    exp                            shift and go to state 145
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 114

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars . data statementblock RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 23

    data                           shift and go to state 146

state 115

    (17) listofvars -> typedeclaration POINTS listofids . SEMIC

    SEMIC           shift and go to state 147


state 116

    (21) listofids -> ID . lid
    (22) lid -> . COMMA listofids
    (23) lid -> . empty
    (90) empty -> .

    COMMA           shift and go to state 150
    SEMIC           reduce using rule 90 (empty -> .)

    lid                            shift and go to state 148
    empty                          shift and go to state 149

state 117

    (19) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 151


state 118

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PLUS            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MINUS           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    LPAREN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEI            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEF            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTESTRING       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEBOOL         reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 119

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 120

    (1) program -> functions MODEL LCURLY vars data model statementblock RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model statementblock RCURLY .)


state 121

    (51) optimize -> MIN LCURLY statement . where RCURLY
    (63) where -> . WHERE LCURLY statementblock RCURLY

    WHERE           shift and go to state 103

    where                          shift and go to state 152

state 122

    (83) write2 -> CTESTRING .
    (85) write2 -> CTESTRING . DOT write2
    (70) constant -> CTESTRING .

  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 70 (constant -> CTESTRING .)
    DOT             shift and go to state 153
    STAR            reduce using rule 70 (constant -> CTESTRING .)
    SLASH           reduce using rule 70 (constant -> CTESTRING .)
    PLUS            reduce using rule 70 (constant -> CTESTRING .)
    MINUS           reduce using rule 70 (constant -> CTESTRING .)
    LESSTHAN        reduce using rule 70 (constant -> CTESTRING .)
    LESSEQUAL       reduce using rule 70 (constant -> CTESTRING .)
    GREATEREQUAL    reduce using rule 70 (constant -> CTESTRING .)
    GREATERTHAN     reduce using rule 70 (constant -> CTESTRING .)
    BETWEEN         reduce using rule 70 (constant -> CTESTRING .)
    RPAREN          reduce using rule 70 (constant -> CTESTRING .)

  ! RPAREN          [ reduce using rule 83 (write2 -> CTESTRING .) ]
  ! DOT             [ reduce using rule 70 (constant -> CTESTRING .) ]


state 123

    (82) write2 -> expresion .
    (84) write2 -> expresion . DOT write2

    RPAREN          reduce using rule 82 (write2 -> expresion .)
    DOT             shift and go to state 154


state 124

    (81) write -> PRINT LPAREN write2 . RPAREN SEMIC

    RPAREN          shift and go to state 155


state 125

    (27) asign -> ID EQUALS expresiones . SEMIC

    SEMIC           shift and go to state 156


state 126

    (28) expresiones -> expresion . COMMA expresiones
    (29) expresiones -> expresion .

    COMMA           shift and go to state 157
    SEMIC           reduce using rule 29 (expresiones -> expresion .)


state 127

    (75) functioncall -> ID LPAREN expresion . RPAREN

    RPAREN          shift and go to state 158


state 128

    (77) functioncall -> ID LPAREN CTEF . RPAREN
    (69) constant -> CTEF .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 159
    STAR            reduce using rule 69 (constant -> CTEF .)
    SLASH           reduce using rule 69 (constant -> CTEF .)
    PLUS            reduce using rule 69 (constant -> CTEF .)
    MINUS           reduce using rule 69 (constant -> CTEF .)
    LESSTHAN        reduce using rule 69 (constant -> CTEF .)
    LESSEQUAL       reduce using rule 69 (constant -> CTEF .)
    GREATEREQUAL    reduce using rule 69 (constant -> CTEF .)
    GREATERTHAN     reduce using rule 69 (constant -> CTEF .)
    BETWEEN         reduce using rule 69 (constant -> CTEF .)

  ! RPAREN          [ reduce using rule 69 (constant -> CTEF .) ]


state 129

    (76) functioncall -> ID LPAREN CTEI . RPAREN
    (68) constant -> CTEI .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 160
    STAR            reduce using rule 68 (constant -> CTEI .)
    SLASH           reduce using rule 68 (constant -> CTEI .)
    PLUS            reduce using rule 68 (constant -> CTEI .)
    MINUS           reduce using rule 68 (constant -> CTEI .)
    LESSTHAN        reduce using rule 68 (constant -> CTEI .)
    LESSEQUAL       reduce using rule 68 (constant -> CTEI .)
    GREATEREQUAL    reduce using rule 68 (constant -> CTEI .)
    GREATERTHAN     reduce using rule 68 (constant -> CTEI .)
    BETWEEN         reduce using rule 68 (constant -> CTEI .)

  ! RPAREN          [ reduce using rule 68 (constant -> CTEI .) ]


state 130

    (40) term -> factor STAR term .

    PLUS            reduce using rule 40 (term -> factor STAR term .)
    MINUS           reduce using rule 40 (term -> factor STAR term .)
    LESSTHAN        reduce using rule 40 (term -> factor STAR term .)
    LESSEQUAL       reduce using rule 40 (term -> factor STAR term .)
    GREATEREQUAL    reduce using rule 40 (term -> factor STAR term .)
    GREATERTHAN     reduce using rule 40 (term -> factor STAR term .)
    BETWEEN         reduce using rule 40 (term -> factor STAR term .)
    ID              reduce using rule 40 (term -> factor STAR term .)
    IF              reduce using rule 40 (term -> factor STAR term .)
    PRINT           reduce using rule 40 (term -> factor STAR term .)
    MIN             reduce using rule 40 (term -> factor STAR term .)
    MAX             reduce using rule 40 (term -> factor STAR term .)
    FOR             reduce using rule 40 (term -> factor STAR term .)
    RETURN          reduce using rule 40 (term -> factor STAR term .)
    BUILD           reduce using rule 40 (term -> factor STAR term .)
    CONDITION       reduce using rule 40 (term -> factor STAR term .)
    LPAREN          reduce using rule 40 (term -> factor STAR term .)
    CTEI            reduce using rule 40 (term -> factor STAR term .)
    CTEF            reduce using rule 40 (term -> factor STAR term .)
    CTESTRING       reduce using rule 40 (term -> factor STAR term .)
    CTEBOOL         reduce using rule 40 (term -> factor STAR term .)
    RCURLY          reduce using rule 40 (term -> factor STAR term .)
    RPAREN          reduce using rule 40 (term -> factor STAR term .)
    COMMA           reduce using rule 40 (term -> factor STAR term .)
    SEMIC           reduce using rule 40 (term -> factor STAR term .)
    DOT             reduce using rule 40 (term -> factor STAR term .)
    WHERE           reduce using rule 40 (term -> factor STAR term .)
    ELSE            reduce using rule 40 (term -> factor STAR term .)
    RBRACKET        reduce using rule 40 (term -> factor STAR term .)


state 131

    (41) term -> factor SLASH term .

    PLUS            reduce using rule 41 (term -> factor SLASH term .)
    MINUS           reduce using rule 41 (term -> factor SLASH term .)
    LESSTHAN        reduce using rule 41 (term -> factor SLASH term .)
    LESSEQUAL       reduce using rule 41 (term -> factor SLASH term .)
    GREATEREQUAL    reduce using rule 41 (term -> factor SLASH term .)
    GREATERTHAN     reduce using rule 41 (term -> factor SLASH term .)
    BETWEEN         reduce using rule 41 (term -> factor SLASH term .)
    ID              reduce using rule 41 (term -> factor SLASH term .)
    IF              reduce using rule 41 (term -> factor SLASH term .)
    PRINT           reduce using rule 41 (term -> factor SLASH term .)
    MIN             reduce using rule 41 (term -> factor SLASH term .)
    MAX             reduce using rule 41 (term -> factor SLASH term .)
    FOR             reduce using rule 41 (term -> factor SLASH term .)
    RETURN          reduce using rule 41 (term -> factor SLASH term .)
    BUILD           reduce using rule 41 (term -> factor SLASH term .)
    CONDITION       reduce using rule 41 (term -> factor SLASH term .)
    LPAREN          reduce using rule 41 (term -> factor SLASH term .)
    CTEI            reduce using rule 41 (term -> factor SLASH term .)
    CTEF            reduce using rule 41 (term -> factor SLASH term .)
    CTESTRING       reduce using rule 41 (term -> factor SLASH term .)
    CTEBOOL         reduce using rule 41 (term -> factor SLASH term .)
    RCURLY          reduce using rule 41 (term -> factor SLASH term .)
    RPAREN          reduce using rule 41 (term -> factor SLASH term .)
    COMMA           reduce using rule 41 (term -> factor SLASH term .)
    SEMIC           reduce using rule 41 (term -> factor SLASH term .)
    DOT             reduce using rule 41 (term -> factor SLASH term .)
    WHERE           reduce using rule 41 (term -> factor SLASH term .)
    ELSE            reduce using rule 41 (term -> factor SLASH term .)
    RBRACKET        reduce using rule 41 (term -> factor SLASH term .)


state 132

    (78) for -> FOR ID IN . DOT ID LCURLY statementblock RCURLY

    DOT             shift and go to state 161


state 133

    (62) build -> BUILD expresion SEMIC .

    WHERE           reduce using rule 62 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 62 (build -> BUILD expresion SEMIC .)
    IF              reduce using rule 62 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 62 (build -> BUILD expresion SEMIC .)
    MIN             reduce using rule 62 (build -> BUILD expresion SEMIC .)
    MAX             reduce using rule 62 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 62 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 62 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 62 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 62 (build -> BUILD expresion SEMIC .)
    PLUS            reduce using rule 62 (build -> BUILD expresion SEMIC .)
    MINUS           reduce using rule 62 (build -> BUILD expresion SEMIC .)
    LPAREN          reduce using rule 62 (build -> BUILD expresion SEMIC .)
    CTEI            reduce using rule 62 (build -> BUILD expresion SEMIC .)
    CTEF            reduce using rule 62 (build -> BUILD expresion SEMIC .)
    CTESTRING       reduce using rule 62 (build -> BUILD expresion SEMIC .)
    CTEBOOL         reduce using rule 62 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 62 (build -> BUILD expresion SEMIC .)
    SEMIC           reduce using rule 62 (build -> BUILD expresion SEMIC .)
    ELSE            reduce using rule 62 (build -> BUILD expresion SEMIC .)


state 134

    (46) factor -> LPAREN expresion RPAREN .

    STAR            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MIN             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    MAX             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    BUILD           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CONDITION       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CTESTRING       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    CTEBOOL         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    WHERE           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    DOT             reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 46 (factor -> LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 46 (factor -> LPAREN expresion RPAREN .)


state 135

    (63) where -> WHERE LCURLY . statementblock RCURLY
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    statementblock                 shift and go to state 162
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 136

    (79) condition -> IF LPAREN expresion . RPAREN statementblock SEMIC
    (80) condition -> IF LPAREN expresion . RPAREN statementblock ELSE statementblock SEMIC

    RPAREN          shift and go to state 163


state 137

    (37) exp -> term PLUS exp .

    LESSTHAN        reduce using rule 37 (exp -> term PLUS exp .)
    LESSEQUAL       reduce using rule 37 (exp -> term PLUS exp .)
    GREATEREQUAL    reduce using rule 37 (exp -> term PLUS exp .)
    GREATERTHAN     reduce using rule 37 (exp -> term PLUS exp .)
    BETWEEN         reduce using rule 37 (exp -> term PLUS exp .)
    ID              reduce using rule 37 (exp -> term PLUS exp .)
    IF              reduce using rule 37 (exp -> term PLUS exp .)
    PRINT           reduce using rule 37 (exp -> term PLUS exp .)
    MIN             reduce using rule 37 (exp -> term PLUS exp .)
    MAX             reduce using rule 37 (exp -> term PLUS exp .)
    FOR             reduce using rule 37 (exp -> term PLUS exp .)
    RETURN          reduce using rule 37 (exp -> term PLUS exp .)
    BUILD           reduce using rule 37 (exp -> term PLUS exp .)
    CONDITION       reduce using rule 37 (exp -> term PLUS exp .)
    PLUS            reduce using rule 37 (exp -> term PLUS exp .)
    MINUS           reduce using rule 37 (exp -> term PLUS exp .)
    LPAREN          reduce using rule 37 (exp -> term PLUS exp .)
    CTEI            reduce using rule 37 (exp -> term PLUS exp .)
    CTEF            reduce using rule 37 (exp -> term PLUS exp .)
    CTESTRING       reduce using rule 37 (exp -> term PLUS exp .)
    CTEBOOL         reduce using rule 37 (exp -> term PLUS exp .)
    RCURLY          reduce using rule 37 (exp -> term PLUS exp .)
    SEMIC           reduce using rule 37 (exp -> term PLUS exp .)
    ELSE            reduce using rule 37 (exp -> term PLUS exp .)
    RPAREN          reduce using rule 37 (exp -> term PLUS exp .)
    RBRACKET        reduce using rule 37 (exp -> term PLUS exp .)
    WHERE           reduce using rule 37 (exp -> term PLUS exp .)
    DOT             reduce using rule 37 (exp -> term PLUS exp .)
    COMMA           reduce using rule 37 (exp -> term PLUS exp .)


state 138

    (38) exp -> term MINUS exp .

    LESSTHAN        reduce using rule 38 (exp -> term MINUS exp .)
    LESSEQUAL       reduce using rule 38 (exp -> term MINUS exp .)
    GREATEREQUAL    reduce using rule 38 (exp -> term MINUS exp .)
    GREATERTHAN     reduce using rule 38 (exp -> term MINUS exp .)
    BETWEEN         reduce using rule 38 (exp -> term MINUS exp .)
    ID              reduce using rule 38 (exp -> term MINUS exp .)
    IF              reduce using rule 38 (exp -> term MINUS exp .)
    PRINT           reduce using rule 38 (exp -> term MINUS exp .)
    MIN             reduce using rule 38 (exp -> term MINUS exp .)
    MAX             reduce using rule 38 (exp -> term MINUS exp .)
    FOR             reduce using rule 38 (exp -> term MINUS exp .)
    RETURN          reduce using rule 38 (exp -> term MINUS exp .)
    BUILD           reduce using rule 38 (exp -> term MINUS exp .)
    CONDITION       reduce using rule 38 (exp -> term MINUS exp .)
    PLUS            reduce using rule 38 (exp -> term MINUS exp .)
    MINUS           reduce using rule 38 (exp -> term MINUS exp .)
    LPAREN          reduce using rule 38 (exp -> term MINUS exp .)
    CTEI            reduce using rule 38 (exp -> term MINUS exp .)
    CTEF            reduce using rule 38 (exp -> term MINUS exp .)
    CTESTRING       reduce using rule 38 (exp -> term MINUS exp .)
    CTEBOOL         reduce using rule 38 (exp -> term MINUS exp .)
    RCURLY          reduce using rule 38 (exp -> term MINUS exp .)
    SEMIC           reduce using rule 38 (exp -> term MINUS exp .)
    ELSE            reduce using rule 38 (exp -> term MINUS exp .)
    RPAREN          reduce using rule 38 (exp -> term MINUS exp .)
    RBRACKET        reduce using rule 38 (exp -> term MINUS exp .)
    WHERE           reduce using rule 38 (exp -> term MINUS exp .)
    DOT             reduce using rule 38 (exp -> term MINUS exp .)
    COMMA           reduce using rule 38 (exp -> term MINUS exp .)


state 139

    (52) optimize -> MAX LCURLY statement . where RCURLY
    (63) where -> . WHERE LCURLY statementblock RCURLY

    WHERE           shift and go to state 103

    where                          shift and go to state 164

state 140

    (64) wherecondition -> CONDITION expresion SEMIC .

    WHERE           reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    IF              reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    MIN             reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    MAX             reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    PLUS            reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    MINUS           reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    LPAREN          reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    CTEI            reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    CTEF            reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    CTESTRING       reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    CTEBOOL         reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    SEMIC           reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)
    ELSE            reduce using rule 64 (wherecondition -> CONDITION expresion SEMIC .)


state 141

    (33) expresion -> exp GREATEREQUAL exp .

    ID              reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    IF              reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    PRINT           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    MIN             reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    MAX             reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    FOR             reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    RETURN          reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    BUILD           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    CONDITION       reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    PLUS            reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    MINUS           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    LPAREN          reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    CTEI            reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    CTEF            reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    CTESTRING       reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    CTEBOOL         reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    RCURLY          reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    COMMA           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    SEMIC           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    RPAREN          reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    ELSE            reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    WHERE           reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    DOT             reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)
    RBRACKET        reduce using rule 33 (expresion -> exp GREATEREQUAL exp .)


state 142

    (31) expresion -> exp LESSTHAN exp .

    ID              reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    IF              reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    PRINT           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MIN             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MAX             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    FOR             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RETURN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    BUILD           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CONDITION       reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    PLUS            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MINUS           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    LPAREN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEI            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEF            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTESTRING       reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEBOOL         reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RCURLY          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    COMMA           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    SEMIC           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    ELSE            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    WHERE           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    DOT             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RBRACKET        reduce using rule 31 (expresion -> exp LESSTHAN exp .)


state 143

    (34) expresion -> exp GREATERTHAN exp .

    ID              reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    IF              reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    PRINT           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    MIN             reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    MAX             reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    FOR             reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    RETURN          reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    BUILD           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    CONDITION       reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    PLUS            reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    MINUS           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    LPAREN          reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    CTEI            reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    CTEF            reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    CTESTRING       reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    CTEBOOL         reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    RCURLY          reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    COMMA           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    SEMIC           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    ELSE            reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    WHERE           reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    DOT             reduce using rule 34 (expresion -> exp GREATERTHAN exp .)
    RBRACKET        reduce using rule 34 (expresion -> exp GREATERTHAN exp .)


state 144

    (35) expresion -> exp BETWEEN exp .

    ID              reduce using rule 35 (expresion -> exp BETWEEN exp .)
    IF              reduce using rule 35 (expresion -> exp BETWEEN exp .)
    PRINT           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    MIN             reduce using rule 35 (expresion -> exp BETWEEN exp .)
    MAX             reduce using rule 35 (expresion -> exp BETWEEN exp .)
    FOR             reduce using rule 35 (expresion -> exp BETWEEN exp .)
    RETURN          reduce using rule 35 (expresion -> exp BETWEEN exp .)
    BUILD           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    CONDITION       reduce using rule 35 (expresion -> exp BETWEEN exp .)
    PLUS            reduce using rule 35 (expresion -> exp BETWEEN exp .)
    MINUS           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    LPAREN          reduce using rule 35 (expresion -> exp BETWEEN exp .)
    CTEI            reduce using rule 35 (expresion -> exp BETWEEN exp .)
    CTEF            reduce using rule 35 (expresion -> exp BETWEEN exp .)
    CTESTRING       reduce using rule 35 (expresion -> exp BETWEEN exp .)
    CTEBOOL         reduce using rule 35 (expresion -> exp BETWEEN exp .)
    RCURLY          reduce using rule 35 (expresion -> exp BETWEEN exp .)
    COMMA           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    SEMIC           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    RPAREN          reduce using rule 35 (expresion -> exp BETWEEN exp .)
    ELSE            reduce using rule 35 (expresion -> exp BETWEEN exp .)
    WHERE           reduce using rule 35 (expresion -> exp BETWEEN exp .)
    DOT             reduce using rule 35 (expresion -> exp BETWEEN exp .)
    RBRACKET        reduce using rule 35 (expresion -> exp BETWEEN exp .)


state 145

    (32) expresion -> exp LESSEQUAL exp .

    ID              reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    IF              reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    PRINT           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    MIN             reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    MAX             reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    FOR             reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    RETURN          reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    BUILD           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    CONDITION       reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    PLUS            reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    MINUS           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    LPAREN          reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    CTEI            reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    CTEF            reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    CTESTRING       reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    CTEBOOL         reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    RCURLY          reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    COMMA           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    SEMIC           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    RPAREN          reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    ELSE            reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    WHERE           reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    DOT             reduce using rule 32 (expresion -> exp LESSEQUAL exp .)
    RBRACKET        reduce using rule 32 (expresion -> exp LESSEQUAL exp .)


state 146

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data . statementblock RCURLY
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    statementblock                 shift and go to state 165
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 147

    (17) listofvars -> typedeclaration POINTS listofids SEMIC .

    TINT            reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    TFLOAT          reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    TBOOL           reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    RCURLY          reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)


state 148

    (21) listofids -> ID lid .

    SEMIC           reduce using rule 21 (listofids -> ID lid .)


state 149

    (23) lid -> empty .

    SEMIC           reduce using rule 23 (lid -> empty .)


state 150

    (22) lid -> COMMA . listofids
    (21) listofids -> . ID lid

    ID              shift and go to state 116

    listofids                      shift and go to state 166

state 151

    (19) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (90) empty -> .

    LBRACKET        shift and go to state 77
    POINTS          reduce using rule 90 (empty -> .)
    STAR            reduce using rule 90 (empty -> .)
    SLASH           reduce using rule 90 (empty -> .)
    PLUS            reduce using rule 90 (empty -> .)
    MINUS           reduce using rule 90 (empty -> .)
    LESSTHAN        reduce using rule 90 (empty -> .)
    LESSEQUAL       reduce using rule 90 (empty -> .)
    GREATEREQUAL    reduce using rule 90 (empty -> .)
    GREATERTHAN     reduce using rule 90 (empty -> .)
    BETWEEN         reduce using rule 90 (empty -> .)
    ID              reduce using rule 90 (empty -> .)
    IF              reduce using rule 90 (empty -> .)
    PRINT           reduce using rule 90 (empty -> .)
    MIN             reduce using rule 90 (empty -> .)
    MAX             reduce using rule 90 (empty -> .)
    FOR             reduce using rule 90 (empty -> .)
    RETURN          reduce using rule 90 (empty -> .)
    BUILD           reduce using rule 90 (empty -> .)
    CONDITION       reduce using rule 90 (empty -> .)
    LPAREN          reduce using rule 90 (empty -> .)
    CTEI            reduce using rule 90 (empty -> .)
    CTEF            reduce using rule 90 (empty -> .)
    CTESTRING       reduce using rule 90 (empty -> .)
    CTEBOOL         reduce using rule 90 (empty -> .)
    RCURLY          reduce using rule 90 (empty -> .)
    SEMIC           reduce using rule 90 (empty -> .)
    ELSE            reduce using rule 90 (empty -> .)
    WHERE           reduce using rule 90 (empty -> .)
    RPAREN          reduce using rule 90 (empty -> .)
    RBRACKET        reduce using rule 90 (empty -> .)
    DOT             reduce using rule 90 (empty -> .)
    COMMA           reduce using rule 90 (empty -> .)

    dimensions                     shift and go to state 167
    empty                          shift and go to state 78

state 152

    (51) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 168


state 153

    (85) write2 -> CTESTRING DOT . write2
    (82) write2 -> . expresion
    (83) write2 -> . CTESTRING
    (84) write2 -> . expresion DOT write2
    (85) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 122
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 123
    term                           shift and go to state 61
    constant                       shift and go to state 50
    write2                         shift and go to state 169
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 154

    (84) write2 -> expresion DOT . write2
    (82) write2 -> . expresion
    (83) write2 -> . CTESTRING
    (84) write2 -> . expresion DOT write2
    (85) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 122
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 123
    term                           shift and go to state 61
    constant                       shift and go to state 50
    write2                         shift and go to state 170
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 155

    (81) write -> PRINT LPAREN write2 RPAREN . SEMIC

    SEMIC           shift and go to state 171


state 156

    (27) asign -> ID EQUALS expresiones SEMIC .

    ID              reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    IF              reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    PRINT           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MIN             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MAX             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    FOR             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    RETURN          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    BUILD           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CONDITION       reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    PLUS            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MINUS           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    LPAREN          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEI            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEF            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTESTRING       reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEBOOL         reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    RCURLY          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    WHERE           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    SEMIC           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    ELSE            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)


state 157

    (28) expresiones -> expresion COMMA . expresiones
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    ID              shift and go to state 99
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    expresion                      shift and go to state 126
    expresiones                    shift and go to state 172
    constant                       shift and go to state 50
    term                           shift and go to state 61
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    factor                         shift and go to state 48
    id                             shift and go to state 42

state 158

    (75) functioncall -> ID LPAREN expresion RPAREN .

    STAR            reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    SLASH           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    PLUS            reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    MINUS           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    ID              reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    IF              reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    PRINT           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    MIN             reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    MAX             reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    FOR             reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    RETURN          reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    BUILD           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    CONDITION       reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEI            reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEF            reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    CTESTRING       reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEBOOL         reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    ELSE            reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    DOT             reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    WHERE           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)
    COMMA           reduce using rule 75 (functioncall -> ID LPAREN expresion RPAREN .)


state 159

    (77) functioncall -> ID LPAREN CTEF RPAREN .

    STAR            reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    SLASH           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    PLUS            reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    MINUS           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    LESSTHAN        reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    LESSEQUAL       reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    GREATEREQUAL    reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    GREATERTHAN     reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    BETWEEN         reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    ID              reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    IF              reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    PRINT           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    MIN             reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    MAX             reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    FOR             reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    RETURN          reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    BUILD           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    CONDITION       reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    LPAREN          reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEI            reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEF            reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTESTRING       reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEBOOL         reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    RCURLY          reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    SEMIC           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    ELSE            reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    DOT             reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    RPAREN          reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    RBRACKET        reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    WHERE           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)
    COMMA           reduce using rule 77 (functioncall -> ID LPAREN CTEF RPAREN .)


state 160

    (76) functioncall -> ID LPAREN CTEI RPAREN .

    STAR            reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    SLASH           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    PLUS            reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    MINUS           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    LESSTHAN        reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    LESSEQUAL       reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    GREATEREQUAL    reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    GREATERTHAN     reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    BETWEEN         reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    ID              reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    IF              reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    PRINT           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    MIN             reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    MAX             reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    FOR             reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    RETURN          reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    BUILD           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    CONDITION       reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    LPAREN          reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEI            reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEF            reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTESTRING       reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEBOOL         reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    RCURLY          reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    SEMIC           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    ELSE            reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    DOT             reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    RPAREN          reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    RBRACKET        reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    WHERE           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)
    COMMA           reduce using rule 76 (functioncall -> ID LPAREN CTEI RPAREN .)


state 161

    (78) for -> FOR ID IN DOT . ID LCURLY statementblock RCURLY

    ID              shift and go to state 173


state 162

    (63) where -> WHERE LCURLY statementblock . RCURLY

    RCURLY          shift and go to state 174


state 163

    (79) condition -> IF LPAREN expresion RPAREN . statementblock SEMIC
    (80) condition -> IF LPAREN expresion RPAREN . statementblock ELSE statementblock SEMIC
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    SEMIC           reduce using rule 90 (empty -> .)
    ELSE            reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    statementblock                 shift and go to state 175
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    expresion                      shift and go to state 52
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 164

    (52) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 176


state 165

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock . RCURLY

    RCURLY          shift and go to state 177


state 166

    (22) lid -> COMMA listofids .

    SEMIC           reduce using rule 22 (lid -> COMMA listofids .)


state 167

    (19) dimensions -> LBRACKET expresion RBRACKET dimensions .

    STAR            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SLASH           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUS            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINUS           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSTHAN        reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSEQUAL       reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATEREQUAL    reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATERTHAN     reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    BETWEEN         reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ID              reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    IF              reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PRINT           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MIN             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MAX             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    FOR             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RETURN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    BUILD           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CONDITION       reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LPAREN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEI            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEF            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTESTRING       reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEBOOL         reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RCURLY          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SEMIC           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ELSE            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RPAREN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RBRACKET        reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    WHERE           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DOT             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    COMMA           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    POINTS          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 168

    (51) optimize -> MIN LCURLY statement where RCURLY .

    ID              reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    MIN             reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    MAX             reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    PLUS            reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    MINUS           reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEI            reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEF            reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    CTESTRING       reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEBOOL         reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    SEMIC           reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    ELSE            reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)
    WHERE           reduce using rule 51 (optimize -> MIN LCURLY statement where RCURLY .)


state 169

    (85) write2 -> CTESTRING DOT write2 .

    RPAREN          reduce using rule 85 (write2 -> CTESTRING DOT write2 .)


state 170

    (84) write2 -> expresion DOT write2 .

    RPAREN          reduce using rule 84 (write2 -> expresion DOT write2 .)


state 171

    (81) write -> PRINT LPAREN write2 RPAREN SEMIC .

    ID              reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    IF              reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    PRINT           reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MIN             reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MAX             reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    FOR             reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    RETURN          reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    BUILD           reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CONDITION       reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    PLUS            reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MINUS           reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    LPAREN          reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEI            reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEF            reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTESTRING       reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEBOOL         reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    RCURLY          reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    SEMIC           reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    ELSE            reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    WHERE           reduce using rule 81 (write -> PRINT LPAREN write2 RPAREN SEMIC .)


state 172

    (28) expresiones -> expresion COMMA expresiones .

    SEMIC           reduce using rule 28 (expresiones -> expresion COMMA expresiones .)


state 173

    (78) for -> FOR ID IN DOT ID . LCURLY statementblock RCURLY

    LCURLY          shift and go to state 178


state 174

    (63) where -> WHERE LCURLY statementblock RCURLY .

    RCURLY          reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    ID              reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    IF              reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    PRINT           reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    MIN             reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    MAX             reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    FOR             reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    RETURN          reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    BUILD           reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    CONDITION       reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    PLUS            reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    MINUS           reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    LPAREN          reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    CTEI            reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    CTEF            reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    CTESTRING       reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)
    CTEBOOL         reduce using rule 63 (where -> WHERE LCURLY statementblock RCURLY .)


state 175

    (79) condition -> IF LPAREN expresion RPAREN statementblock . SEMIC
    (80) condition -> IF LPAREN expresion RPAREN statementblock . ELSE statementblock SEMIC

    SEMIC           shift and go to state 179
    ELSE            shift and go to state 180


state 176

    (52) optimize -> MAX LCURLY statement where RCURLY .

    ID              reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    MIN             reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    MAX             reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    PLUS            reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    MINUS           reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEI            reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEF            reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    CTESTRING       reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEBOOL         reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    SEMIC           reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    ELSE            reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)
    WHERE           reduce using rule 52 (optimize -> MAX LCURLY statement where RCURLY .)


state 177

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .

    FUNC            reduce using rule 4 (function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .)
    MODEL           reduce using rule 4 (function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .)


state 178

    (78) for -> FOR ID IN DOT ID LCURLY . statementblock RCURLY
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    expresion                      shift and go to state 52
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    statementblock                 shift and go to state 181
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 179

    (79) condition -> IF LPAREN expresion RPAREN statementblock SEMIC .

    WHERE           reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    ID              reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    IF              reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    PRINT           reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MIN             reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MAX             reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    FOR             reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    RETURN          reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    BUILD           reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CONDITION       reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    PLUS            reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MINUS           reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    LPAREN          reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEI            reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEF            reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTESTRING       reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEBOOL         reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    RCURLY          reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    SEMIC           reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    ELSE            reduce using rule 79 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)


state 180

    (80) condition -> IF LPAREN expresion RPAREN statementblock ELSE . statementblock SEMIC
    (87) statementblock -> . statement statementblock
    (88) statementblock -> . statement
    (89) statementblock -> . empty
    (53) statement -> . asign
    (54) statement -> . expresion
    (55) statement -> . condition
    (56) statement -> . write
    (57) statement -> . optimize
    (58) statement -> . for
    (59) statement -> . return
    (60) statement -> . build
    (61) statement -> . wherecondition
    (90) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp LESSEQUAL exp
    (33) expresion -> . exp GREATEREQUAL exp
    (34) expresion -> . exp GREATERTHAN exp
    (35) expresion -> . exp BETWEEN exp
    (79) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (80) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (81) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (51) optimize -> . MIN LCURLY statement where RCURLY
    (52) optimize -> . MAX LCURLY statement where RCURLY
    (78) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (86) return -> . RETURN asign
    (62) build -> . BUILD expresion SEMIC
    (64) wherecondition -> . CONDITION expresion SEMIC
    (36) exp -> . term
    (37) exp -> . term PLUS exp
    (38) exp -> . term MINUS exp
    (39) term -> . factor
    (40) term -> . factor STAR term
    (41) term -> . factor SLASH term
    (42) factor -> . PLUS constant
    (43) factor -> . MINUS constant
    (44) factor -> . constant
    (45) factor -> . ID
    (46) factor -> . LPAREN expresion RPAREN
    (68) constant -> . CTEI
    (69) constant -> . CTEF
    (70) constant -> . CTESTRING
    (71) constant -> . CTEBOOL
    (72) constant -> . id
    (73) constant -> . functioncall
    (74) id -> . ID dimensions
    (75) functioncall -> . ID LPAREN expresion RPAREN
    (76) functioncall -> . ID LPAREN CTEI RPAREN
    (77) functioncall -> . ID LPAREN CTEF RPAREN

    SEMIC           reduce using rule 90 (empty -> .)
    ID              shift and go to state 43
    IF              shift and go to state 59
    PRINT           shift and go to state 39
    MIN             shift and go to state 38
    MAX             shift and go to state 62
    FOR             shift and go to state 54
    RETURN          shift and go to state 37
    BUILD           shift and go to state 55
    CONDITION       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 40
    LPAREN          shift and go to state 56
    CTEI            shift and go to state 69
    CTEF            shift and go to state 64
    CTESTRING       shift and go to state 70
    CTEBOOL         shift and go to state 67

    constant                       shift and go to state 50
    id                             shift and go to state 42
    for                            shift and go to state 41
    write                          shift and go to state 44
    build                          shift and go to state 46
    statement                      shift and go to state 47
    factor                         shift and go to state 48
    empty                          shift and go to state 83
    statementblock                 shift and go to state 182
    return                         shift and go to state 53
    optimize                       shift and go to state 84
    condition                      shift and go to state 58
    expresion                      shift and go to state 52
    term                           shift and go to state 61
    asign                          shift and go to state 63
    functioncall                   shift and go to state 49
    exp                            shift and go to state 66
    wherecondition                 shift and go to state 68

state 181

    (78) for -> FOR ID IN DOT ID LCURLY statementblock . RCURLY

    RCURLY          shift and go to state 183


state 182

    (80) condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock . SEMIC

    SEMIC           shift and go to state 184


state 183

    (78) for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .

    ID              reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    IF              reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    PRINT           reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MIN             reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MAX             reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    FOR             reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    RETURN          reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    BUILD           reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CONDITION       reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    PLUS            reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MINUS           reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    LPAREN          reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEI            reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEF            reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTESTRING       reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEBOOL         reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    RCURLY          reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    SEMIC           reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    WHERE           reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    ELSE            reduce using rule 78 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)


state 184

    (80) condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .

    WHERE           reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    ID              reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    IF              reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    PRINT           reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MIN             reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MAX             reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    FOR             reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    RETURN          reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    BUILD           reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CONDITION       reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    PLUS            reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MINUS           reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    LPAREN          reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEI            reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEF            reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTESTRING       reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEBOOL         reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    RCURLY          reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    SEMIC           reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    ELSE            reduce using rule 80 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MIN in state 24 resolved as shift
WARNING: shift/reduce conflict for MAX in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for IF in state 24 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 24 resolved as shift
WARNING: shift/reduce conflict for FOR in state 24 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 24 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 24 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 24 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 24 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 24 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 24 resolved as shift
WARNING: shift/reduce conflict for CTEBOOL in state 24 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 43 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for IF in state 47 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 47 resolved as shift
WARNING: shift/reduce conflict for MIN in state 47 resolved as shift
WARNING: shift/reduce conflict for MAX in state 47 resolved as shift
WARNING: shift/reduce conflict for FOR in state 47 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 47 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 47 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 47 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 47 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 47 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 47 resolved as shift
WARNING: shift/reduce conflict for CTEBOOL in state 47 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 90 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 99 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 99 resolved as shift
WARNING: shift/reduce conflict for DOT in state 122 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 129 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (lparameters -> parameter)
WARNING: rejected rule (empty -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 31 resolved using rule (lvars -> listofvars)
WARNING: rejected rule (empty -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 43 resolved using rule (factor -> ID)
WARNING: rejected rule (empty -> <empty>) in state 43
WARNING: reduce/reduce conflict in state 47 resolved using rule (statementblock -> statement)
WARNING: rejected rule (empty -> <empty>) in state 47
WARNING: reduce/reduce conflict in state 51 resolved using rule (model -> empty)
WARNING: rejected rule (statementblock -> empty) in state 51
WARNING: reduce/reduce conflict in state 57 resolved using rule (model -> optimize)
WARNING: rejected rule (statement -> optimize) in state 57
WARNING: reduce/reduce conflict in state 99 resolved using rule (factor -> ID)
WARNING: rejected rule (empty -> <empty>) in state 99
WARNING: reduce/reduce conflict in state 122 resolved using rule (constant -> CTESTRING)
WARNING: rejected rule (write2 -> CTESTRING) in state 122
WARNING: Rule (write2 -> CTESTRING) is never reduced
