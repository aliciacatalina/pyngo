Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CTESTRING
    SUM
    BETWEEN

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model bloque2 RCURLY
Rule 2     functions -> function functions
Rule 3     functions -> empty
Rule 4     function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY
Rule 5     lparameters -> parameter parameters
Rule 6     lparameters -> empty
Rule 7     parameters -> COMMA lparameters
Rule 8     parameters -> empty
Rule 9     parameter -> type ID
Rule 10    vars -> varblock
Rule 11    vars -> empty
Rule 12    varblock -> VARS LCURLY lvars RCURLY
Rule 13    model -> optimize
Rule 14    model -> optimize where
Rule 15    model -> bloque2
Rule 16    model -> empty
Rule 17    optimize -> MIN LCURLY statement where RCURLY
Rule 18    optimize -> MAX LCURLY statement where RCURLY
Rule 19    build -> BUILD expresion SEMIC
Rule 20    where -> WHERE LCURLY bloque2 RCURLY
Rule 21    wherecondition -> CONDITION expresion SEMIC
Rule 22    statement -> declaration
Rule 23    statement -> asign
Rule 24    statement -> condition
Rule 25    statement -> write
Rule 26    statement -> ciclo
Rule 27    statement -> return
Rule 28    statement -> build
Rule 29    statement -> wherecondition
Rule 30    data -> DATA LCURLY asignmany RCURLY
Rule 31    asignmany -> asign asignmany
Rule 32    asignmany -> empty
Rule 33    asign -> id asign_signo expresiones SEMIC
Rule 34    expresiones -> expresion expresiones2
Rule 35    expresiones2 -> COMMA expresion expresiones2
Rule 36    expresiones2 -> empty
Rule 37    asign_signo -> ASEQ
Rule 38    asign_signo -> PLUSEQ
Rule 39    asign_signo -> MINEQ
Rule 40    asign_signo -> MULTEQ
Rule 41    asign_signo -> DIVEQ
Rule 42    condition -> IF expresion bloque condition1
Rule 43    condition1 -> ELSE bloque
Rule 44    condition1 -> empty
Rule 45    write -> PRINT expresion write2 SEMIC
Rule 46    write2 -> COMMA expresion write2
Rule 47    write2 -> empty
Rule 48    ciclo -> FOR ID IN DOT ID bloque
Rule 49    lvars -> declaration lvars
Rule 50    lvars -> empty
Rule 51    declaration -> typedeclaration POINTS ID dec22 SEMIC
Rule 52    typedeclaration -> type dimensionsfixed
Rule 53    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 54    dimensions -> empty
Rule 55    dimensionsfixed -> LBRACKET CTEI RBRACKET dimensionsfixed
Rule 56    dimensionsfixed -> empty
Rule 57    dec22 -> COMMA ID dec22
Rule 58    dec22 -> empty
Rule 59    bloque -> LCURLY bloque2 RCURLY
Rule 60    bloque2 -> statement bloque2
Rule 61    bloque2 -> empty
Rule 62    return -> RETURN expresion SEMIC
Rule 63    expresion -> expresion2 expresioni
Rule 64    expresioni -> OR expresion
Rule 65    expresioni -> empty
Rule 66    expresion2 -> expresion3 expresion2i
Rule 67    expresion2i -> AND expresion2
Rule 68    expresion2i -> empty
Rule 69    expresion3 -> expresion4 expresion3i
Rule 70    expresion3i -> ORB expresion3
Rule 71    expresion3i -> empty
Rule 72    expresion4 -> expresion5 expresion4i
Rule 73    expresion4i -> XOR expresion4
Rule 74    expresion4i -> empty
Rule 75    expresion5 -> expresion6 expresion5i
Rule 76    expresion5i -> ANDB expresion5
Rule 77    expresion5i -> empty
Rule 78    expresion6 -> expresion7 expresion6i
Rule 79    expresion6i -> EQ expresion6
Rule 80    expresion6i -> DIF expresion6
Rule 81    expresion6i -> empty
Rule 82    expresion7 -> expresion8 expresion7i
Rule 83    expresion7i -> SHR expresion7
Rule 84    expresion7i -> SHL expresion7
Rule 85    expresion7i -> empty
Rule 86    expresion8 -> expresion9 expresion8i
Rule 87    expresion8i -> GREATERTHAN expresion8
Rule 88    expresion8i -> LESSTHAN expresion8
Rule 89    expresion8i -> GREATEREQUAL expresion8
Rule 90    expresion8i -> LESSEQUAL expresion8
Rule 91    expresion8i -> empty
Rule 92    expresion9 -> termino expresion9i
Rule 93    expresion9i -> PLUS expresion9
Rule 94    expresion9i -> MINUS expresion9
Rule 95    expresion9i -> empty
Rule 96    termino -> factor termino2
Rule 97    termino2 -> STAR termino
Rule 98    termino2 -> SLASH termino
Rule 99    termino2 -> MOD termino
Rule 100   termino2 -> empty
Rule 101   factor -> exponencial factor2
Rule 102   factor2 -> EXP factor
Rule 103   factor2 -> empty
Rule 104   exponencial -> LPAREN expresion RPAREN
Rule 105   exponencial -> exponencial2 valor
Rule 106   exponencial2 -> NOT
Rule 107   exponencial2 -> MM
Rule 108   exponencial2 -> PP
Rule 109   exponencial2 -> NEW
Rule 110   exponencial2 -> empty
Rule 111   valor -> id
Rule 112   valor -> int
Rule 113   valor -> float
Rule 114   valor -> bool
Rule 115   int -> CTEI
Rule 116   id -> ID llamarfuncion
Rule 117   id -> ID dimensions
Rule 118   id -> ID
Rule 119   float -> CTEF
Rule 120   bool -> CTEBOOL
Rule 121   llamarfuncion -> LPAREN llamarfuncion3 RPAREN
Rule 122   llamarfuncion3 -> expresion llamarfuncion33
Rule 123   llamarfuncion3 -> empty
Rule 124   llamarfuncion33 -> COMMA expresion llamarfuncion33
Rule 125   llamarfuncion33 -> empty
Rule 126   type -> TINT
Rule 127   type -> TBOOL
Rule 128   type -> TFLOAT
Rule 129   empty -> <empty>

Terminals, with rules where they appear

AND                  : 67
ANDB                 : 76
ASEQ                 : 37
BETWEEN              : 
BUILD                : 19
COMMA                : 7 35 46 57 124
CONDITION            : 21
CTEBOOL              : 120
CTEF                 : 119
CTEI                 : 55 115
CTESTRING            : 
DATA                 : 30
DIF                  : 80
DIVEQ                : 41
DOT                  : 48
ELSE                 : 43
EQ                   : 79
EXP                  : 102
FOR                  : 48
FUNC                 : 4
GREATEREQUAL         : 89
GREATERTHAN          : 87
ID                   : 4 9 48 48 51 57 116 117 118
IF                   : 42
IN                   : 48
LBRACKET             : 53 55
LCURLY               : 1 4 12 17 18 20 30 59
LESSEQUAL            : 90
LESSTHAN             : 88
LPAREN               : 4 104 121
MAX                  : 18
MIN                  : 17
MINEQ                : 39
MINUS                : 94
MM                   : 107
MOD                  : 99
MODEL                : 1
MULTEQ               : 40
NEW                  : 109
NOT                  : 106
OR                   : 64
ORB                  : 70
PLUS                 : 93
PLUSEQ               : 38
POINTS               : 51
PP                   : 108
PRINT                : 45
RBRACKET             : 53 55
RCURLY               : 1 4 12 17 18 20 30 59
RETURN               : 62
RPAREN               : 4 104 121
SEMIC                : 19 21 33 45 51 62
SHL                  : 84
SHR                  : 83
SLASH                : 98
STAR                 : 97
SUM                  : 
TBOOL                : 127
TFLOAT               : 128
TINT                 : 126
VARS                 : 12
WHERE                : 20
XOR                  : 73
error                : 

Nonterminals, with rules where they appear

asign                : 23 31
asign_signo          : 33
asignmany            : 30 31
bloque               : 42 43 48
bloque2              : 1 4 15 20 59 60
bool                 : 114
build                : 28
ciclo                : 26
condition            : 24
condition1           : 42
data                 : 1 4
dec22                : 51 57
declaration          : 22 49
dimensions           : 53 117
dimensionsfixed      : 52 55
empty                : 3 6 8 11 16 32 36 44 47 50 54 56 58 61 65 68 71 74 77 81 85 91 95 100 103 110 123 125
exponencial          : 101
exponencial2         : 105
expresion            : 19 21 34 35 42 45 46 53 62 64 104 122 124
expresion2           : 63 67
expresion2i          : 66
expresion3           : 66 70
expresion3i          : 69
expresion4           : 69 73
expresion4i          : 72
expresion5           : 72 76
expresion5i          : 75
expresion6           : 75 79 80
expresion6i          : 78
expresion7           : 78 83 84
expresion7i          : 82
expresion8           : 82 87 88 89 90
expresion8i          : 86
expresion9           : 86 93 94
expresion9i          : 92
expresiones          : 33
expresiones2         : 34 35
expresioni           : 63
factor               : 96 102
factor2              : 101
float                : 113
function             : 2
functions            : 1 2
id                   : 33 111
int                  : 112
llamarfuncion        : 116
llamarfuncion3       : 121
llamarfuncion33      : 122 124
lparameters          : 4 7
lvars                : 12 49
model                : 1
optimize             : 13 14
parameter            : 5
parameters           : 5
program              : 0
return               : 27
statement            : 17 18 60
termino              : 92 97 98 99
termino2             : 96
type                 : 4 9 52
typedeclaration      : 51
valor                : 105
varblock             : 10
vars                 : 1 4
where                : 14 17 18
wherecondition       : 29
write                : 25
write2               : 45 46

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model bloque2 RCURLY
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY
    (129) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 129 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 2
    program                        shift and go to state 3
    empty                          shift and go to state 5

state 1

    (2) functions -> function . functions
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY
    (129) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 129 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 6
    empty                          shift and go to state 5

state 2

    (1) program -> functions . MODEL LCURLY vars data model bloque2 RCURLY

    MODEL           shift and go to state 7


state 3

    (0) S' -> program .



state 4

    (4) function -> FUNC . type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    type                           shift and go to state 11

state 5

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 6

    (2) functions -> function functions .

    MODEL           reduce using rule 2 (functions -> function functions .)


state 7

    (1) program -> functions MODEL . LCURLY vars data model bloque2 RCURLY

    LCURLY          shift and go to state 12


state 8

    (128) type -> TFLOAT .

    LBRACKET        reduce using rule 128 (type -> TFLOAT .)
    POINTS          reduce using rule 128 (type -> TFLOAT .)
    ID              reduce using rule 128 (type -> TFLOAT .)


state 9

    (126) type -> TINT .

    LBRACKET        reduce using rule 126 (type -> TINT .)
    POINTS          reduce using rule 126 (type -> TINT .)
    ID              reduce using rule 126 (type -> TINT .)


state 10

    (127) type -> TBOOL .

    LBRACKET        reduce using rule 127 (type -> TBOOL .)
    POINTS          reduce using rule 127 (type -> TBOOL .)
    ID              reduce using rule 127 (type -> TBOOL .)


state 11

    (4) function -> FUNC type . ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY

    ID              shift and go to state 13


state 12

    (1) program -> functions MODEL LCURLY . vars data model bloque2 RCURLY
    (10) vars -> . varblock
    (11) vars -> . empty
    (12) varblock -> . VARS LCURLY lvars RCURLY
    (129) empty -> .

    VARS            shift and go to state 14
    DATA            reduce using rule 129 (empty -> .)

    vars                           shift and go to state 15
    varblock                       shift and go to state 16
    empty                          shift and go to state 17

state 13

    (4) function -> FUNC type ID . LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY

    LPAREN          shift and go to state 18


state 14

    (12) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 19


state 15

    (1) program -> functions MODEL LCURLY vars . data model bloque2 RCURLY
    (30) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 20

    data                           shift and go to state 21

state 16

    (10) vars -> varblock .

    DATA            reduce using rule 10 (vars -> varblock .)


state 17

    (11) vars -> empty .

    DATA            reduce using rule 11 (vars -> empty .)


state 18

    (4) function -> FUNC type ID LPAREN . lparameters RPAREN LCURLY vars data bloque2 RCURLY
    (5) lparameters -> . parameter parameters
    (6) lparameters -> . empty
    (9) parameter -> . type ID
    (129) empty -> .
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RPAREN          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    lparameters                    shift and go to state 22
    parameter                      shift and go to state 23
    type                           shift and go to state 24
    empty                          shift and go to state 25

state 19

    (12) varblock -> VARS LCURLY . lvars RCURLY
    (49) lvars -> . declaration lvars
    (50) lvars -> . empty
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (129) empty -> .
    (52) typedeclaration -> . type dimensionsfixed
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    typedeclaration                shift and go to state 26
    lvars                          shift and go to state 27
    declaration                    shift and go to state 28
    type                           shift and go to state 29
    empty                          shift and go to state 30

state 20

    (30) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 31


state 21

    (1) program -> functions MODEL LCURLY vars data . model bloque2 RCURLY
    (13) model -> . optimize
    (14) model -> . optimize where
    (15) model -> . bloque2
    (16) model -> . empty
    (17) optimize -> . MIN LCURLY statement where RCURLY
    (18) optimize -> . MAX LCURLY statement where RCURLY
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (129) empty -> .
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
    MIN             shift and go to state 33
    MAX             shift and go to state 51
    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! BUILD           [ reduce using rule 129 (empty -> .) ]
  ! CONDITION       [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! TINT            [ reduce using rule 129 (empty -> .) ]
  ! TBOOL           [ reduce using rule 129 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 129 (empty -> .) ]

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    optimize                       shift and go to state 47
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 41
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    model                          shift and go to state 42
    condition                      shift and go to state 48
    bloque2                        shift and go to state 50
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 22

    (4) function -> FUNC type ID LPAREN lparameters . RPAREN LCURLY vars data bloque2 RCURLY

    RPAREN          shift and go to state 55


state 23

    (5) lparameters -> parameter . parameters
    (7) parameters -> . COMMA lparameters
    (8) parameters -> . empty
    (129) empty -> .

    COMMA           shift and go to state 56
    RPAREN          reduce using rule 129 (empty -> .)

    empty                          shift and go to state 57
    parameters                     shift and go to state 58

state 24

    (9) parameter -> type . ID

    ID              shift and go to state 59


state 25

    (6) lparameters -> empty .

    RPAREN          reduce using rule 6 (lparameters -> empty .)


state 26

    (51) declaration -> typedeclaration . POINTS ID dec22 SEMIC

    POINTS          shift and go to state 60


state 27

    (12) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 61


state 28

    (49) lvars -> declaration . lvars
    (49) lvars -> . declaration lvars
    (50) lvars -> . empty
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (129) empty -> .
    (52) typedeclaration -> . type dimensionsfixed
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    typedeclaration                shift and go to state 26
    lvars                          shift and go to state 62
    declaration                    shift and go to state 28
    type                           shift and go to state 29
    empty                          shift and go to state 30

state 29

    (52) typedeclaration -> type . dimensionsfixed
    (55) dimensionsfixed -> . LBRACKET CTEI RBRACKET dimensionsfixed
    (56) dimensionsfixed -> . empty
    (129) empty -> .

    LBRACKET        shift and go to state 64
    POINTS          reduce using rule 129 (empty -> .)

    dimensionsfixed                shift and go to state 63
    empty                          shift and go to state 65

state 30

    (50) lvars -> empty .

    RCURLY          reduce using rule 50 (lvars -> empty .)


state 31

    (30) data -> DATA LCURLY . asignmany RCURLY
    (31) asignmany -> . asign asignmany
    (32) asignmany -> . empty
    (33) asign -> . id asign_signo expresiones SEMIC
    (129) empty -> .
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID

    RCURLY          reduce using rule 129 (empty -> .)
    ID              shift and go to state 37

    asignmany                      shift and go to state 66
    asign                          shift and go to state 67
    id                             shift and go to state 35
    empty                          shift and go to state 68

state 32

    (62) return -> RETURN . expresion SEMIC
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 85

state 33

    (17) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 88


state 34

    (45) write -> PRINT . expresion write2 SEMIC
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 89

state 35

    (33) asign -> id . asign_signo expresiones SEMIC
    (37) asign_signo -> . ASEQ
    (38) asign_signo -> . PLUSEQ
    (39) asign_signo -> . MINEQ
    (40) asign_signo -> . MULTEQ
    (41) asign_signo -> . DIVEQ

    ASEQ            shift and go to state 91
    PLUSEQ          shift and go to state 90
    MINEQ           shift and go to state 92
    MULTEQ          shift and go to state 93
    DIVEQ           shift and go to state 95

    asign_signo                    shift and go to state 94

state 36

    (26) statement -> ciclo .

    IF              reduce using rule 26 (statement -> ciclo .)
    PRINT           reduce using rule 26 (statement -> ciclo .)
    FOR             reduce using rule 26 (statement -> ciclo .)
    RETURN          reduce using rule 26 (statement -> ciclo .)
    BUILD           reduce using rule 26 (statement -> ciclo .)
    CONDITION       reduce using rule 26 (statement -> ciclo .)
    ID              reduce using rule 26 (statement -> ciclo .)
    TINT            reduce using rule 26 (statement -> ciclo .)
    TBOOL           reduce using rule 26 (statement -> ciclo .)
    TFLOAT          reduce using rule 26 (statement -> ciclo .)
    RCURLY          reduce using rule 26 (statement -> ciclo .)
    WHERE           reduce using rule 26 (statement -> ciclo .)


state 37

    (116) id -> ID . llamarfuncion
    (117) id -> ID . dimensions
    (118) id -> ID .
    (121) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN
    (53) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (54) dimensions -> . empty
    (129) empty -> .

  ! reduce/reduce conflict for ASEQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for PLUSEQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for MINEQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for MULTEQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for DIVEQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for EXP resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for STAR resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for SLASH resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for MOD resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for SHR resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for SHL resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for EQ resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for DIF resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for ANDB resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for XOR resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for ORB resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for SEMIC resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for LCURLY resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (id -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 118 (id -> ID .)
    ASEQ            reduce using rule 118 (id -> ID .)
    PLUSEQ          reduce using rule 118 (id -> ID .)
    MINEQ           reduce using rule 118 (id -> ID .)
    MULTEQ          reduce using rule 118 (id -> ID .)
    DIVEQ           reduce using rule 118 (id -> ID .)
    EXP             reduce using rule 118 (id -> ID .)
    STAR            reduce using rule 118 (id -> ID .)
    SLASH           reduce using rule 118 (id -> ID .)
    MOD             reduce using rule 118 (id -> ID .)
    PLUS            reduce using rule 118 (id -> ID .)
    MINUS           reduce using rule 118 (id -> ID .)
    GREATERTHAN     reduce using rule 118 (id -> ID .)
    LESSTHAN        reduce using rule 118 (id -> ID .)
    GREATEREQUAL    reduce using rule 118 (id -> ID .)
    LESSEQUAL       reduce using rule 118 (id -> ID .)
    SHR             reduce using rule 118 (id -> ID .)
    SHL             reduce using rule 118 (id -> ID .)
    EQ              reduce using rule 118 (id -> ID .)
    DIF             reduce using rule 118 (id -> ID .)
    ANDB            reduce using rule 118 (id -> ID .)
    XOR             reduce using rule 118 (id -> ID .)
    ORB             reduce using rule 118 (id -> ID .)
    AND             reduce using rule 118 (id -> ID .)
    OR              reduce using rule 118 (id -> ID .)
    SEMIC           reduce using rule 118 (id -> ID .)
    COMMA           reduce using rule 118 (id -> ID .)
    LCURLY          reduce using rule 118 (id -> ID .)
    RPAREN          reduce using rule 118 (id -> ID .)
    RBRACKET        reduce using rule 118 (id -> ID .)
    LPAREN          shift and go to state 99
    LBRACKET        shift and go to state 98

  ! ASEQ            [ reduce using rule 129 (empty -> .) ]
  ! PLUSEQ          [ reduce using rule 129 (empty -> .) ]
  ! MINEQ           [ reduce using rule 129 (empty -> .) ]
  ! MULTEQ          [ reduce using rule 129 (empty -> .) ]
  ! DIVEQ           [ reduce using rule 129 (empty -> .) ]
  ! EXP             [ reduce using rule 129 (empty -> .) ]
  ! STAR            [ reduce using rule 129 (empty -> .) ]
  ! SLASH           [ reduce using rule 129 (empty -> .) ]
  ! MOD             [ reduce using rule 129 (empty -> .) ]
  ! PLUS            [ reduce using rule 129 (empty -> .) ]
  ! MINUS           [ reduce using rule 129 (empty -> .) ]
  ! GREATERTHAN     [ reduce using rule 129 (empty -> .) ]
  ! LESSTHAN        [ reduce using rule 129 (empty -> .) ]
  ! GREATEREQUAL    [ reduce using rule 129 (empty -> .) ]
  ! LESSEQUAL       [ reduce using rule 129 (empty -> .) ]
  ! SHR             [ reduce using rule 129 (empty -> .) ]
  ! SHL             [ reduce using rule 129 (empty -> .) ]
  ! EQ              [ reduce using rule 129 (empty -> .) ]
  ! DIF             [ reduce using rule 129 (empty -> .) ]
  ! ANDB            [ reduce using rule 129 (empty -> .) ]
  ! XOR             [ reduce using rule 129 (empty -> .) ]
  ! ORB             [ reduce using rule 129 (empty -> .) ]
  ! AND             [ reduce using rule 129 (empty -> .) ]
  ! OR              [ reduce using rule 129 (empty -> .) ]
  ! SEMIC           [ reduce using rule 129 (empty -> .) ]
  ! COMMA           [ reduce using rule 129 (empty -> .) ]
  ! LCURLY          [ reduce using rule 129 (empty -> .) ]
  ! RPAREN          [ reduce using rule 129 (empty -> .) ]
  ! RBRACKET        [ reduce using rule 129 (empty -> .) ]

    llamarfuncion                  shift and go to state 97
    dimensions                     shift and go to state 96
    empty                          shift and go to state 100

state 38

    (25) statement -> write .

    IF              reduce using rule 25 (statement -> write .)
    PRINT           reduce using rule 25 (statement -> write .)
    FOR             reduce using rule 25 (statement -> write .)
    RETURN          reduce using rule 25 (statement -> write .)
    BUILD           reduce using rule 25 (statement -> write .)
    CONDITION       reduce using rule 25 (statement -> write .)
    ID              reduce using rule 25 (statement -> write .)
    TINT            reduce using rule 25 (statement -> write .)
    TBOOL           reduce using rule 25 (statement -> write .)
    TFLOAT          reduce using rule 25 (statement -> write .)
    RCURLY          reduce using rule 25 (statement -> write .)
    WHERE           reduce using rule 25 (statement -> write .)


state 39

    (28) statement -> build .

    IF              reduce using rule 28 (statement -> build .)
    PRINT           reduce using rule 28 (statement -> build .)
    FOR             reduce using rule 28 (statement -> build .)
    RETURN          reduce using rule 28 (statement -> build .)
    BUILD           reduce using rule 28 (statement -> build .)
    CONDITION       reduce using rule 28 (statement -> build .)
    ID              reduce using rule 28 (statement -> build .)
    TINT            reduce using rule 28 (statement -> build .)
    TBOOL           reduce using rule 28 (statement -> build .)
    TFLOAT          reduce using rule 28 (statement -> build .)
    RCURLY          reduce using rule 28 (statement -> build .)
    WHERE           reduce using rule 28 (statement -> build .)


state 40

    (60) bloque2 -> statement . bloque2
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (129) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

  ! IF              [ reduce using rule 129 (empty -> .) ]
  ! PRINT           [ reduce using rule 129 (empty -> .) ]
  ! FOR             [ reduce using rule 129 (empty -> .) ]
  ! RETURN          [ reduce using rule 129 (empty -> .) ]
  ! BUILD           [ reduce using rule 129 (empty -> .) ]
  ! CONDITION       [ reduce using rule 129 (empty -> .) ]
  ! ID              [ reduce using rule 129 (empty -> .) ]
  ! TINT            [ reduce using rule 129 (empty -> .) ]
  ! TBOOL           [ reduce using rule 129 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 129 (empty -> .) ]

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 101
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    bloque2                        shift and go to state 102
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 41

    (16) model -> empty .
    (61) bloque2 -> empty .

  ! reduce/reduce conflict for IF resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for BUILD resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for CONDITION resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for TINT resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for TBOOL resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for TFLOAT resolved using rule 16 (model -> empty .)
  ! reduce/reduce conflict for RCURLY resolved using rule 16 (model -> empty .)
    IF              reduce using rule 16 (model -> empty .)
    PRINT           reduce using rule 16 (model -> empty .)
    FOR             reduce using rule 16 (model -> empty .)
    RETURN          reduce using rule 16 (model -> empty .)
    BUILD           reduce using rule 16 (model -> empty .)
    CONDITION       reduce using rule 16 (model -> empty .)
    ID              reduce using rule 16 (model -> empty .)
    TINT            reduce using rule 16 (model -> empty .)
    TBOOL           reduce using rule 16 (model -> empty .)
    TFLOAT          reduce using rule 16 (model -> empty .)
    RCURLY          reduce using rule 16 (model -> empty .)

  ! IF              [ reduce using rule 61 (bloque2 -> empty .) ]
  ! PRINT           [ reduce using rule 61 (bloque2 -> empty .) ]
  ! FOR             [ reduce using rule 61 (bloque2 -> empty .) ]
  ! RETURN          [ reduce using rule 61 (bloque2 -> empty .) ]
  ! BUILD           [ reduce using rule 61 (bloque2 -> empty .) ]
  ! CONDITION       [ reduce using rule 61 (bloque2 -> empty .) ]
  ! ID              [ reduce using rule 61 (bloque2 -> empty .) ]
  ! TINT            [ reduce using rule 61 (bloque2 -> empty .) ]
  ! TBOOL           [ reduce using rule 61 (bloque2 -> empty .) ]
  ! TFLOAT          [ reduce using rule 61 (bloque2 -> empty .) ]
  ! RCURLY          [ reduce using rule 61 (bloque2 -> empty .) ]


state 42

    (1) program -> functions MODEL LCURLY vars data model . bloque2 RCURLY
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (129) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 101
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    wherecondition                 shift and go to state 54
    condition                      shift and go to state 48
    bloque2                        shift and go to state 103
    asign                          shift and go to state 52

state 43

    (27) statement -> return .

    IF              reduce using rule 27 (statement -> return .)
    PRINT           reduce using rule 27 (statement -> return .)
    FOR             reduce using rule 27 (statement -> return .)
    RETURN          reduce using rule 27 (statement -> return .)
    BUILD           reduce using rule 27 (statement -> return .)
    CONDITION       reduce using rule 27 (statement -> return .)
    ID              reduce using rule 27 (statement -> return .)
    TINT            reduce using rule 27 (statement -> return .)
    TBOOL           reduce using rule 27 (statement -> return .)
    TFLOAT          reduce using rule 27 (statement -> return .)
    RCURLY          reduce using rule 27 (statement -> return .)
    WHERE           reduce using rule 27 (statement -> return .)


state 44

    (48) ciclo -> FOR . ID IN DOT ID bloque

    ID              shift and go to state 104


state 45

    (19) build -> BUILD . expresion SEMIC
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 105

state 46

    (22) statement -> declaration .

    IF              reduce using rule 22 (statement -> declaration .)
    PRINT           reduce using rule 22 (statement -> declaration .)
    FOR             reduce using rule 22 (statement -> declaration .)
    RETURN          reduce using rule 22 (statement -> declaration .)
    BUILD           reduce using rule 22 (statement -> declaration .)
    CONDITION       reduce using rule 22 (statement -> declaration .)
    ID              reduce using rule 22 (statement -> declaration .)
    TINT            reduce using rule 22 (statement -> declaration .)
    TBOOL           reduce using rule 22 (statement -> declaration .)
    TFLOAT          reduce using rule 22 (statement -> declaration .)
    RCURLY          reduce using rule 22 (statement -> declaration .)
    WHERE           reduce using rule 22 (statement -> declaration .)


state 47

    (13) model -> optimize .
    (14) model -> optimize . where
    (20) where -> . WHERE LCURLY bloque2 RCURLY

    IF              reduce using rule 13 (model -> optimize .)
    PRINT           reduce using rule 13 (model -> optimize .)
    FOR             reduce using rule 13 (model -> optimize .)
    RETURN          reduce using rule 13 (model -> optimize .)
    BUILD           reduce using rule 13 (model -> optimize .)
    CONDITION       reduce using rule 13 (model -> optimize .)
    ID              reduce using rule 13 (model -> optimize .)
    TINT            reduce using rule 13 (model -> optimize .)
    TBOOL           reduce using rule 13 (model -> optimize .)
    TFLOAT          reduce using rule 13 (model -> optimize .)
    RCURLY          reduce using rule 13 (model -> optimize .)
    WHERE           shift and go to state 107

    where                          shift and go to state 106

state 48

    (24) statement -> condition .

    IF              reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    BUILD           reduce using rule 24 (statement -> condition .)
    CONDITION       reduce using rule 24 (statement -> condition .)
    ID              reduce using rule 24 (statement -> condition .)
    TINT            reduce using rule 24 (statement -> condition .)
    TBOOL           reduce using rule 24 (statement -> condition .)
    TFLOAT          reduce using rule 24 (statement -> condition .)
    RCURLY          reduce using rule 24 (statement -> condition .)
    WHERE           reduce using rule 24 (statement -> condition .)


state 49

    (42) condition -> IF . expresion bloque condition1
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 108

state 50

    (15) model -> bloque2 .

    IF              reduce using rule 15 (model -> bloque2 .)
    PRINT           reduce using rule 15 (model -> bloque2 .)
    FOR             reduce using rule 15 (model -> bloque2 .)
    RETURN          reduce using rule 15 (model -> bloque2 .)
    BUILD           reduce using rule 15 (model -> bloque2 .)
    CONDITION       reduce using rule 15 (model -> bloque2 .)
    ID              reduce using rule 15 (model -> bloque2 .)
    TINT            reduce using rule 15 (model -> bloque2 .)
    TBOOL           reduce using rule 15 (model -> bloque2 .)
    TFLOAT          reduce using rule 15 (model -> bloque2 .)
    RCURLY          reduce using rule 15 (model -> bloque2 .)


state 51

    (18) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 109


state 52

    (23) statement -> asign .

    IF              reduce using rule 23 (statement -> asign .)
    PRINT           reduce using rule 23 (statement -> asign .)
    FOR             reduce using rule 23 (statement -> asign .)
    RETURN          reduce using rule 23 (statement -> asign .)
    BUILD           reduce using rule 23 (statement -> asign .)
    CONDITION       reduce using rule 23 (statement -> asign .)
    ID              reduce using rule 23 (statement -> asign .)
    TINT            reduce using rule 23 (statement -> asign .)
    TBOOL           reduce using rule 23 (statement -> asign .)
    TFLOAT          reduce using rule 23 (statement -> asign .)
    RCURLY          reduce using rule 23 (statement -> asign .)
    WHERE           reduce using rule 23 (statement -> asign .)


state 53

    (21) wherecondition -> CONDITION . expresion SEMIC
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 110

state 54

    (29) statement -> wherecondition .

    IF              reduce using rule 29 (statement -> wherecondition .)
    PRINT           reduce using rule 29 (statement -> wherecondition .)
    FOR             reduce using rule 29 (statement -> wherecondition .)
    RETURN          reduce using rule 29 (statement -> wherecondition .)
    BUILD           reduce using rule 29 (statement -> wherecondition .)
    CONDITION       reduce using rule 29 (statement -> wherecondition .)
    ID              reduce using rule 29 (statement -> wherecondition .)
    TINT            reduce using rule 29 (statement -> wherecondition .)
    TBOOL           reduce using rule 29 (statement -> wherecondition .)
    TFLOAT          reduce using rule 29 (statement -> wherecondition .)
    RCURLY          reduce using rule 29 (statement -> wherecondition .)
    WHERE           reduce using rule 29 (statement -> wherecondition .)


state 55

    (4) function -> FUNC type ID LPAREN lparameters RPAREN . LCURLY vars data bloque2 RCURLY

    LCURLY          shift and go to state 111


state 56

    (7) parameters -> COMMA . lparameters
    (5) lparameters -> . parameter parameters
    (6) lparameters -> . empty
    (9) parameter -> . type ID
    (129) empty -> .
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RPAREN          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    type                           shift and go to state 24
    lparameters                    shift and go to state 112
    parameter                      shift and go to state 23
    empty                          shift and go to state 25

state 57

    (8) parameters -> empty .

    RPAREN          reduce using rule 8 (parameters -> empty .)


state 58

    (5) lparameters -> parameter parameters .

    RPAREN          reduce using rule 5 (lparameters -> parameter parameters .)


state 59

    (9) parameter -> type ID .

    COMMA           reduce using rule 9 (parameter -> type ID .)
    RPAREN          reduce using rule 9 (parameter -> type ID .)


state 60

    (51) declaration -> typedeclaration POINTS . ID dec22 SEMIC

    ID              shift and go to state 113


state 61

    (12) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 12 (varblock -> VARS LCURLY lvars RCURLY .)


state 62

    (49) lvars -> declaration lvars .

    RCURLY          reduce using rule 49 (lvars -> declaration lvars .)


state 63

    (52) typedeclaration -> type dimensionsfixed .

    POINTS          reduce using rule 52 (typedeclaration -> type dimensionsfixed .)


state 64

    (55) dimensionsfixed -> LBRACKET . CTEI RBRACKET dimensionsfixed

    CTEI            shift and go to state 114


state 65

    (56) dimensionsfixed -> empty .

    POINTS          reduce using rule 56 (dimensionsfixed -> empty .)


state 66

    (30) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 115


state 67

    (31) asignmany -> asign . asignmany
    (31) asignmany -> . asign asignmany
    (32) asignmany -> . empty
    (33) asign -> . id asign_signo expresiones SEMIC
    (129) empty -> .
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID

    RCURLY          reduce using rule 129 (empty -> .)
    ID              shift and go to state 37

    asignmany                      shift and go to state 116
    asign                          shift and go to state 67
    id                             shift and go to state 35
    empty                          shift and go to state 68

state 68

    (32) asignmany -> empty .

    RCURLY          reduce using rule 32 (asignmany -> empty .)


state 69

    (92) expresion9 -> termino . expresion9i
    (93) expresion9i -> . PLUS expresion9
    (94) expresion9i -> . MINUS expresion9
    (95) expresion9i -> . empty
    (129) empty -> .

    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresion9i                    shift and go to state 117
    empty                          shift and go to state 120

state 70

    (109) exponencial2 -> NEW .

    ID              reduce using rule 109 (exponencial2 -> NEW .)
    CTEI            reduce using rule 109 (exponencial2 -> NEW .)
    CTEF            reduce using rule 109 (exponencial2 -> NEW .)
    CTEBOOL         reduce using rule 109 (exponencial2 -> NEW .)


state 71

    (108) exponencial2 -> PP .

    ID              reduce using rule 108 (exponencial2 -> PP .)
    CTEI            reduce using rule 108 (exponencial2 -> PP .)
    CTEF            reduce using rule 108 (exponencial2 -> PP .)
    CTEBOOL         reduce using rule 108 (exponencial2 -> PP .)


state 72

    (105) exponencial -> exponencial2 . valor
    (111) valor -> . id
    (112) valor -> . int
    (113) valor -> . float
    (114) valor -> . bool
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (115) int -> . CTEI
    (119) float -> . CTEF
    (120) bool -> . CTEBOOL

    ID              shift and go to state 37
    CTEI            shift and go to state 127
    CTEF            shift and go to state 126
    CTEBOOL         shift and go to state 122

    int                            shift and go to state 121
    float                          shift and go to state 123
    bool                           shift and go to state 124
    valor                          shift and go to state 125
    id                             shift and go to state 128

state 73

    (96) termino -> factor . termino2
    (97) termino2 -> . STAR termino
    (98) termino2 -> . SLASH termino
    (99) termino2 -> . MOD termino
    (100) termino2 -> . empty
    (129) empty -> .

    STAR            shift and go to state 129
    SLASH           shift and go to state 131
    MOD             shift and go to state 133
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    termino2                       shift and go to state 130
    empty                          shift and go to state 132

state 74

    (101) factor -> exponencial . factor2
    (102) factor2 -> . EXP factor
    (103) factor2 -> . empty
    (129) empty -> .

    EXP             shift and go to state 135
    STAR            reduce using rule 129 (empty -> .)
    SLASH           reduce using rule 129 (empty -> .)
    MOD             reduce using rule 129 (empty -> .)
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    empty                          shift and go to state 134
    factor2                        shift and go to state 136

state 75

    (110) exponencial2 -> empty .

    ID              reduce using rule 110 (exponencial2 -> empty .)
    CTEI            reduce using rule 110 (exponencial2 -> empty .)
    CTEF            reduce using rule 110 (exponencial2 -> empty .)
    CTEBOOL         reduce using rule 110 (exponencial2 -> empty .)


state 76

    (66) expresion2 -> expresion3 . expresion2i
    (67) expresion2i -> . AND expresion2
    (68) expresion2i -> . empty
    (129) empty -> .

    AND             shift and go to state 137
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresion2i                    shift and go to state 138
    empty                          shift and go to state 139

state 77

    (63) expresion -> expresion2 . expresioni
    (64) expresioni -> . OR expresion
    (65) expresioni -> . empty
    (129) empty -> .

    OR              shift and go to state 141
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresioni                     shift and go to state 140
    empty                          shift and go to state 142

state 78

    (72) expresion4 -> expresion5 . expresion4i
    (73) expresion4i -> . XOR expresion4
    (74) expresion4i -> . empty
    (129) empty -> .

    XOR             shift and go to state 143
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    empty                          shift and go to state 144
    expresion4i                    shift and go to state 145

state 79

    (69) expresion3 -> expresion4 . expresion3i
    (70) expresion3i -> . ORB expresion3
    (71) expresion3i -> . empty
    (129) empty -> .

    ORB             shift and go to state 147
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresion3i                    shift and go to state 146
    empty                          shift and go to state 148

state 80

    (78) expresion6 -> expresion7 . expresion6i
    (79) expresion6i -> . EQ expresion6
    (80) expresion6i -> . DIF expresion6
    (81) expresion6i -> . empty
    (129) empty -> .

    EQ              shift and go to state 151
    DIF             shift and go to state 150
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    empty                          shift and go to state 152
    expresion6i                    shift and go to state 149

state 81

    (75) expresion5 -> expresion6 . expresion5i
    (76) expresion5i -> . ANDB expresion5
    (77) expresion5i -> . empty
    (129) empty -> .

    ANDB            shift and go to state 154
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresion5i                    shift and go to state 153
    empty                          shift and go to state 155

state 82

    (86) expresion8 -> expresion9 . expresion8i
    (87) expresion8i -> . GREATERTHAN expresion8
    (88) expresion8i -> . LESSTHAN expresion8
    (89) expresion8i -> . GREATEREQUAL expresion8
    (90) expresion8i -> . LESSEQUAL expresion8
    (91) expresion8i -> . empty
    (129) empty -> .

    GREATERTHAN     shift and go to state 159
    LESSTHAN        shift and go to state 158
    GREATEREQUAL    shift and go to state 156
    LESSEQUAL       shift and go to state 160
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    expresion8i                    shift and go to state 157
    empty                          shift and go to state 161

state 83

    (82) expresion7 -> expresion8 . expresion7i
    (83) expresion7i -> . SHR expresion7
    (84) expresion7i -> . SHL expresion7
    (85) expresion7i -> . empty
    (129) empty -> .

    SHR             shift and go to state 162
    SHL             shift and go to state 164
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    empty                          shift and go to state 165
    expresion7i                    shift and go to state 163

state 84

    (104) exponencial -> LPAREN . expresion RPAREN
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 166

state 85

    (62) return -> RETURN expresion . SEMIC

    SEMIC           shift and go to state 167


state 86

    (107) exponencial2 -> MM .

    ID              reduce using rule 107 (exponencial2 -> MM .)
    CTEI            reduce using rule 107 (exponencial2 -> MM .)
    CTEF            reduce using rule 107 (exponencial2 -> MM .)
    CTEBOOL         reduce using rule 107 (exponencial2 -> MM .)


state 87

    (106) exponencial2 -> NOT .

    ID              reduce using rule 106 (exponencial2 -> NOT .)
    CTEI            reduce using rule 106 (exponencial2 -> NOT .)
    CTEF            reduce using rule 106 (exponencial2 -> NOT .)
    CTEBOOL         reduce using rule 106 (exponencial2 -> NOT .)


state 88

    (17) optimize -> MIN LCURLY . statement where RCURLY
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 168
    type                           shift and go to state 29
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 89

    (45) write -> PRINT expresion . write2 SEMIC
    (46) write2 -> . COMMA expresion write2
    (47) write2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 170
    SEMIC           reduce using rule 129 (empty -> .)

    write2                         shift and go to state 169
    empty                          shift and go to state 171

state 90

    (38) asign_signo -> PLUSEQ .

    LPAREN          reduce using rule 38 (asign_signo -> PLUSEQ .)
    NOT             reduce using rule 38 (asign_signo -> PLUSEQ .)
    MM              reduce using rule 38 (asign_signo -> PLUSEQ .)
    PP              reduce using rule 38 (asign_signo -> PLUSEQ .)
    NEW             reduce using rule 38 (asign_signo -> PLUSEQ .)
    ID              reduce using rule 38 (asign_signo -> PLUSEQ .)
    CTEI            reduce using rule 38 (asign_signo -> PLUSEQ .)
    CTEF            reduce using rule 38 (asign_signo -> PLUSEQ .)
    CTEBOOL         reduce using rule 38 (asign_signo -> PLUSEQ .)


state 91

    (37) asign_signo -> ASEQ .

    LPAREN          reduce using rule 37 (asign_signo -> ASEQ .)
    NOT             reduce using rule 37 (asign_signo -> ASEQ .)
    MM              reduce using rule 37 (asign_signo -> ASEQ .)
    PP              reduce using rule 37 (asign_signo -> ASEQ .)
    NEW             reduce using rule 37 (asign_signo -> ASEQ .)
    ID              reduce using rule 37 (asign_signo -> ASEQ .)
    CTEI            reduce using rule 37 (asign_signo -> ASEQ .)
    CTEF            reduce using rule 37 (asign_signo -> ASEQ .)
    CTEBOOL         reduce using rule 37 (asign_signo -> ASEQ .)


state 92

    (39) asign_signo -> MINEQ .

    LPAREN          reduce using rule 39 (asign_signo -> MINEQ .)
    NOT             reduce using rule 39 (asign_signo -> MINEQ .)
    MM              reduce using rule 39 (asign_signo -> MINEQ .)
    PP              reduce using rule 39 (asign_signo -> MINEQ .)
    NEW             reduce using rule 39 (asign_signo -> MINEQ .)
    ID              reduce using rule 39 (asign_signo -> MINEQ .)
    CTEI            reduce using rule 39 (asign_signo -> MINEQ .)
    CTEF            reduce using rule 39 (asign_signo -> MINEQ .)
    CTEBOOL         reduce using rule 39 (asign_signo -> MINEQ .)


state 93

    (40) asign_signo -> MULTEQ .

    LPAREN          reduce using rule 40 (asign_signo -> MULTEQ .)
    NOT             reduce using rule 40 (asign_signo -> MULTEQ .)
    MM              reduce using rule 40 (asign_signo -> MULTEQ .)
    PP              reduce using rule 40 (asign_signo -> MULTEQ .)
    NEW             reduce using rule 40 (asign_signo -> MULTEQ .)
    ID              reduce using rule 40 (asign_signo -> MULTEQ .)
    CTEI            reduce using rule 40 (asign_signo -> MULTEQ .)
    CTEF            reduce using rule 40 (asign_signo -> MULTEQ .)
    CTEBOOL         reduce using rule 40 (asign_signo -> MULTEQ .)


state 94

    (33) asign -> id asign_signo . expresiones SEMIC
    (34) expresiones -> . expresion expresiones2
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    expresion4                     shift and go to state 79
    expresiones                    shift and go to state 172
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 173

state 95

    (41) asign_signo -> DIVEQ .

    LPAREN          reduce using rule 41 (asign_signo -> DIVEQ .)
    NOT             reduce using rule 41 (asign_signo -> DIVEQ .)
    MM              reduce using rule 41 (asign_signo -> DIVEQ .)
    PP              reduce using rule 41 (asign_signo -> DIVEQ .)
    NEW             reduce using rule 41 (asign_signo -> DIVEQ .)
    ID              reduce using rule 41 (asign_signo -> DIVEQ .)
    CTEI            reduce using rule 41 (asign_signo -> DIVEQ .)
    CTEF            reduce using rule 41 (asign_signo -> DIVEQ .)
    CTEBOOL         reduce using rule 41 (asign_signo -> DIVEQ .)


state 96

    (117) id -> ID dimensions .

    ASEQ            reduce using rule 117 (id -> ID dimensions .)
    PLUSEQ          reduce using rule 117 (id -> ID dimensions .)
    MINEQ           reduce using rule 117 (id -> ID dimensions .)
    MULTEQ          reduce using rule 117 (id -> ID dimensions .)
    DIVEQ           reduce using rule 117 (id -> ID dimensions .)
    EXP             reduce using rule 117 (id -> ID dimensions .)
    STAR            reduce using rule 117 (id -> ID dimensions .)
    SLASH           reduce using rule 117 (id -> ID dimensions .)
    MOD             reduce using rule 117 (id -> ID dimensions .)
    PLUS            reduce using rule 117 (id -> ID dimensions .)
    MINUS           reduce using rule 117 (id -> ID dimensions .)
    GREATERTHAN     reduce using rule 117 (id -> ID dimensions .)
    LESSTHAN        reduce using rule 117 (id -> ID dimensions .)
    GREATEREQUAL    reduce using rule 117 (id -> ID dimensions .)
    LESSEQUAL       reduce using rule 117 (id -> ID dimensions .)
    SHR             reduce using rule 117 (id -> ID dimensions .)
    SHL             reduce using rule 117 (id -> ID dimensions .)
    EQ              reduce using rule 117 (id -> ID dimensions .)
    DIF             reduce using rule 117 (id -> ID dimensions .)
    ANDB            reduce using rule 117 (id -> ID dimensions .)
    XOR             reduce using rule 117 (id -> ID dimensions .)
    ORB             reduce using rule 117 (id -> ID dimensions .)
    AND             reduce using rule 117 (id -> ID dimensions .)
    OR              reduce using rule 117 (id -> ID dimensions .)
    SEMIC           reduce using rule 117 (id -> ID dimensions .)
    COMMA           reduce using rule 117 (id -> ID dimensions .)
    LCURLY          reduce using rule 117 (id -> ID dimensions .)
    RPAREN          reduce using rule 117 (id -> ID dimensions .)
    RBRACKET        reduce using rule 117 (id -> ID dimensions .)


state 97

    (116) id -> ID llamarfuncion .

    ASEQ            reduce using rule 116 (id -> ID llamarfuncion .)
    PLUSEQ          reduce using rule 116 (id -> ID llamarfuncion .)
    MINEQ           reduce using rule 116 (id -> ID llamarfuncion .)
    MULTEQ          reduce using rule 116 (id -> ID llamarfuncion .)
    DIVEQ           reduce using rule 116 (id -> ID llamarfuncion .)
    EXP             reduce using rule 116 (id -> ID llamarfuncion .)
    STAR            reduce using rule 116 (id -> ID llamarfuncion .)
    SLASH           reduce using rule 116 (id -> ID llamarfuncion .)
    MOD             reduce using rule 116 (id -> ID llamarfuncion .)
    PLUS            reduce using rule 116 (id -> ID llamarfuncion .)
    MINUS           reduce using rule 116 (id -> ID llamarfuncion .)
    GREATERTHAN     reduce using rule 116 (id -> ID llamarfuncion .)
    LESSTHAN        reduce using rule 116 (id -> ID llamarfuncion .)
    GREATEREQUAL    reduce using rule 116 (id -> ID llamarfuncion .)
    LESSEQUAL       reduce using rule 116 (id -> ID llamarfuncion .)
    SHR             reduce using rule 116 (id -> ID llamarfuncion .)
    SHL             reduce using rule 116 (id -> ID llamarfuncion .)
    EQ              reduce using rule 116 (id -> ID llamarfuncion .)
    DIF             reduce using rule 116 (id -> ID llamarfuncion .)
    ANDB            reduce using rule 116 (id -> ID llamarfuncion .)
    XOR             reduce using rule 116 (id -> ID llamarfuncion .)
    ORB             reduce using rule 116 (id -> ID llamarfuncion .)
    AND             reduce using rule 116 (id -> ID llamarfuncion .)
    OR              reduce using rule 116 (id -> ID llamarfuncion .)
    SEMIC           reduce using rule 116 (id -> ID llamarfuncion .)
    COMMA           reduce using rule 116 (id -> ID llamarfuncion .)
    LCURLY          reduce using rule 116 (id -> ID llamarfuncion .)
    RPAREN          reduce using rule 116 (id -> ID llamarfuncion .)
    RBRACKET        reduce using rule 116 (id -> ID llamarfuncion .)


state 98

    (53) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    expresion4                     shift and go to state 79
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 174

state 99

    (121) llamarfuncion -> LPAREN . llamarfuncion3 RPAREN
    (122) llamarfuncion3 -> . expresion llamarfuncion33
    (123) llamarfuncion3 -> . empty
    (63) expresion -> . expresion2 expresioni
    (129) empty -> .
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty

    RPAREN          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)
    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    llamarfuncion3                 shift and go to state 175
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 176
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 177

state 100

    (54) dimensions -> empty .

    ASEQ            reduce using rule 54 (dimensions -> empty .)
    PLUSEQ          reduce using rule 54 (dimensions -> empty .)
    MINEQ           reduce using rule 54 (dimensions -> empty .)
    MULTEQ          reduce using rule 54 (dimensions -> empty .)
    DIVEQ           reduce using rule 54 (dimensions -> empty .)
    EXP             reduce using rule 54 (dimensions -> empty .)
    STAR            reduce using rule 54 (dimensions -> empty .)
    SLASH           reduce using rule 54 (dimensions -> empty .)
    MOD             reduce using rule 54 (dimensions -> empty .)
    PLUS            reduce using rule 54 (dimensions -> empty .)
    MINUS           reduce using rule 54 (dimensions -> empty .)
    GREATERTHAN     reduce using rule 54 (dimensions -> empty .)
    LESSTHAN        reduce using rule 54 (dimensions -> empty .)
    GREATEREQUAL    reduce using rule 54 (dimensions -> empty .)
    LESSEQUAL       reduce using rule 54 (dimensions -> empty .)
    SHR             reduce using rule 54 (dimensions -> empty .)
    SHL             reduce using rule 54 (dimensions -> empty .)
    EQ              reduce using rule 54 (dimensions -> empty .)
    DIF             reduce using rule 54 (dimensions -> empty .)
    ANDB            reduce using rule 54 (dimensions -> empty .)
    XOR             reduce using rule 54 (dimensions -> empty .)
    ORB             reduce using rule 54 (dimensions -> empty .)
    AND             reduce using rule 54 (dimensions -> empty .)
    OR              reduce using rule 54 (dimensions -> empty .)
    SEMIC           reduce using rule 54 (dimensions -> empty .)
    COMMA           reduce using rule 54 (dimensions -> empty .)
    LCURLY          reduce using rule 54 (dimensions -> empty .)
    RPAREN          reduce using rule 54 (dimensions -> empty .)
    RBRACKET        reduce using rule 54 (dimensions -> empty .)


state 101

    (61) bloque2 -> empty .

    RCURLY          reduce using rule 61 (bloque2 -> empty .)
    IF              reduce using rule 61 (bloque2 -> empty .)
    PRINT           reduce using rule 61 (bloque2 -> empty .)
    FOR             reduce using rule 61 (bloque2 -> empty .)
    RETURN          reduce using rule 61 (bloque2 -> empty .)
    BUILD           reduce using rule 61 (bloque2 -> empty .)
    CONDITION       reduce using rule 61 (bloque2 -> empty .)
    ID              reduce using rule 61 (bloque2 -> empty .)
    TINT            reduce using rule 61 (bloque2 -> empty .)
    TBOOL           reduce using rule 61 (bloque2 -> empty .)
    TFLOAT          reduce using rule 61 (bloque2 -> empty .)


state 102

    (60) bloque2 -> statement bloque2 .

    RCURLY          reduce using rule 60 (bloque2 -> statement bloque2 .)
    IF              reduce using rule 60 (bloque2 -> statement bloque2 .)
    PRINT           reduce using rule 60 (bloque2 -> statement bloque2 .)
    FOR             reduce using rule 60 (bloque2 -> statement bloque2 .)
    RETURN          reduce using rule 60 (bloque2 -> statement bloque2 .)
    BUILD           reduce using rule 60 (bloque2 -> statement bloque2 .)
    CONDITION       reduce using rule 60 (bloque2 -> statement bloque2 .)
    ID              reduce using rule 60 (bloque2 -> statement bloque2 .)
    TINT            reduce using rule 60 (bloque2 -> statement bloque2 .)
    TBOOL           reduce using rule 60 (bloque2 -> statement bloque2 .)
    TFLOAT          reduce using rule 60 (bloque2 -> statement bloque2 .)


state 103

    (1) program -> functions MODEL LCURLY vars data model bloque2 . RCURLY

    RCURLY          shift and go to state 178


state 104

    (48) ciclo -> FOR ID . IN DOT ID bloque

    IN              shift and go to state 179


state 105

    (19) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 180


state 106

    (14) model -> optimize where .

    IF              reduce using rule 14 (model -> optimize where .)
    PRINT           reduce using rule 14 (model -> optimize where .)
    FOR             reduce using rule 14 (model -> optimize where .)
    RETURN          reduce using rule 14 (model -> optimize where .)
    BUILD           reduce using rule 14 (model -> optimize where .)
    CONDITION       reduce using rule 14 (model -> optimize where .)
    ID              reduce using rule 14 (model -> optimize where .)
    TINT            reduce using rule 14 (model -> optimize where .)
    TBOOL           reduce using rule 14 (model -> optimize where .)
    TFLOAT          reduce using rule 14 (model -> optimize where .)
    RCURLY          reduce using rule 14 (model -> optimize where .)


state 107

    (20) where -> WHERE . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 181


state 108

    (42) condition -> IF expresion . bloque condition1
    (59) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 182

    bloque                         shift and go to state 183

state 109

    (18) optimize -> MAX LCURLY . statement where RCURLY
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 184
    type                           shift and go to state 29
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 110

    (21) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 185


state 111

    (4) function -> FUNC type ID LPAREN lparameters RPAREN LCURLY . vars data bloque2 RCURLY
    (10) vars -> . varblock
    (11) vars -> . empty
    (12) varblock -> . VARS LCURLY lvars RCURLY
    (129) empty -> .

    VARS            shift and go to state 14
    DATA            reduce using rule 129 (empty -> .)

    vars                           shift and go to state 186
    varblock                       shift and go to state 16
    empty                          shift and go to state 17

state 112

    (7) parameters -> COMMA lparameters .

    RPAREN          reduce using rule 7 (parameters -> COMMA lparameters .)


state 113

    (51) declaration -> typedeclaration POINTS ID . dec22 SEMIC
    (57) dec22 -> . COMMA ID dec22
    (58) dec22 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 187
    SEMIC           reduce using rule 129 (empty -> .)

    dec22                          shift and go to state 188
    empty                          shift and go to state 189

state 114

    (55) dimensionsfixed -> LBRACKET CTEI . RBRACKET dimensionsfixed

    RBRACKET        shift and go to state 190


state 115

    (30) data -> DATA LCURLY asignmany RCURLY .

    IF              reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    TINT            reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    TBOOL           reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    TFLOAT          reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    MIN             reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 30 (data -> DATA LCURLY asignmany RCURLY .)


state 116

    (31) asignmany -> asign asignmany .

    RCURLY          reduce using rule 31 (asignmany -> asign asignmany .)


state 117

    (92) expresion9 -> termino expresion9i .

    GREATERTHAN     reduce using rule 92 (expresion9 -> termino expresion9i .)
    LESSTHAN        reduce using rule 92 (expresion9 -> termino expresion9i .)
    GREATEREQUAL    reduce using rule 92 (expresion9 -> termino expresion9i .)
    LESSEQUAL       reduce using rule 92 (expresion9 -> termino expresion9i .)
    SHR             reduce using rule 92 (expresion9 -> termino expresion9i .)
    SHL             reduce using rule 92 (expresion9 -> termino expresion9i .)
    EQ              reduce using rule 92 (expresion9 -> termino expresion9i .)
    DIF             reduce using rule 92 (expresion9 -> termino expresion9i .)
    ANDB            reduce using rule 92 (expresion9 -> termino expresion9i .)
    XOR             reduce using rule 92 (expresion9 -> termino expresion9i .)
    ORB             reduce using rule 92 (expresion9 -> termino expresion9i .)
    AND             reduce using rule 92 (expresion9 -> termino expresion9i .)
    OR              reduce using rule 92 (expresion9 -> termino expresion9i .)
    RPAREN          reduce using rule 92 (expresion9 -> termino expresion9i .)
    SEMIC           reduce using rule 92 (expresion9 -> termino expresion9i .)
    COMMA           reduce using rule 92 (expresion9 -> termino expresion9i .)
    LCURLY          reduce using rule 92 (expresion9 -> termino expresion9i .)
    RBRACKET        reduce using rule 92 (expresion9 -> termino expresion9i .)


state 118

    (93) expresion9i -> PLUS . expresion9
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 191
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 119

    (94) expresion9i -> MINUS . expresion9
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 192
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 120

    (95) expresion9i -> empty .

    GREATERTHAN     reduce using rule 95 (expresion9i -> empty .)
    LESSTHAN        reduce using rule 95 (expresion9i -> empty .)
    GREATEREQUAL    reduce using rule 95 (expresion9i -> empty .)
    LESSEQUAL       reduce using rule 95 (expresion9i -> empty .)
    SHR             reduce using rule 95 (expresion9i -> empty .)
    SHL             reduce using rule 95 (expresion9i -> empty .)
    EQ              reduce using rule 95 (expresion9i -> empty .)
    DIF             reduce using rule 95 (expresion9i -> empty .)
    ANDB            reduce using rule 95 (expresion9i -> empty .)
    XOR             reduce using rule 95 (expresion9i -> empty .)
    ORB             reduce using rule 95 (expresion9i -> empty .)
    AND             reduce using rule 95 (expresion9i -> empty .)
    OR              reduce using rule 95 (expresion9i -> empty .)
    SEMIC           reduce using rule 95 (expresion9i -> empty .)
    COMMA           reduce using rule 95 (expresion9i -> empty .)
    LCURLY          reduce using rule 95 (expresion9i -> empty .)
    RPAREN          reduce using rule 95 (expresion9i -> empty .)
    RBRACKET        reduce using rule 95 (expresion9i -> empty .)


state 121

    (112) valor -> int .

    EXP             reduce using rule 112 (valor -> int .)
    STAR            reduce using rule 112 (valor -> int .)
    SLASH           reduce using rule 112 (valor -> int .)
    MOD             reduce using rule 112 (valor -> int .)
    PLUS            reduce using rule 112 (valor -> int .)
    MINUS           reduce using rule 112 (valor -> int .)
    GREATERTHAN     reduce using rule 112 (valor -> int .)
    LESSTHAN        reduce using rule 112 (valor -> int .)
    GREATEREQUAL    reduce using rule 112 (valor -> int .)
    LESSEQUAL       reduce using rule 112 (valor -> int .)
    SHR             reduce using rule 112 (valor -> int .)
    SHL             reduce using rule 112 (valor -> int .)
    EQ              reduce using rule 112 (valor -> int .)
    DIF             reduce using rule 112 (valor -> int .)
    ANDB            reduce using rule 112 (valor -> int .)
    XOR             reduce using rule 112 (valor -> int .)
    ORB             reduce using rule 112 (valor -> int .)
    AND             reduce using rule 112 (valor -> int .)
    OR              reduce using rule 112 (valor -> int .)
    SEMIC           reduce using rule 112 (valor -> int .)
    COMMA           reduce using rule 112 (valor -> int .)
    LCURLY          reduce using rule 112 (valor -> int .)
    RPAREN          reduce using rule 112 (valor -> int .)
    RBRACKET        reduce using rule 112 (valor -> int .)


state 122

    (120) bool -> CTEBOOL .

    EXP             reduce using rule 120 (bool -> CTEBOOL .)
    STAR            reduce using rule 120 (bool -> CTEBOOL .)
    SLASH           reduce using rule 120 (bool -> CTEBOOL .)
    MOD             reduce using rule 120 (bool -> CTEBOOL .)
    PLUS            reduce using rule 120 (bool -> CTEBOOL .)
    MINUS           reduce using rule 120 (bool -> CTEBOOL .)
    GREATERTHAN     reduce using rule 120 (bool -> CTEBOOL .)
    LESSTHAN        reduce using rule 120 (bool -> CTEBOOL .)
    GREATEREQUAL    reduce using rule 120 (bool -> CTEBOOL .)
    LESSEQUAL       reduce using rule 120 (bool -> CTEBOOL .)
    SHR             reduce using rule 120 (bool -> CTEBOOL .)
    SHL             reduce using rule 120 (bool -> CTEBOOL .)
    EQ              reduce using rule 120 (bool -> CTEBOOL .)
    DIF             reduce using rule 120 (bool -> CTEBOOL .)
    ANDB            reduce using rule 120 (bool -> CTEBOOL .)
    XOR             reduce using rule 120 (bool -> CTEBOOL .)
    ORB             reduce using rule 120 (bool -> CTEBOOL .)
    AND             reduce using rule 120 (bool -> CTEBOOL .)
    OR              reduce using rule 120 (bool -> CTEBOOL .)
    SEMIC           reduce using rule 120 (bool -> CTEBOOL .)
    COMMA           reduce using rule 120 (bool -> CTEBOOL .)
    LCURLY          reduce using rule 120 (bool -> CTEBOOL .)
    RPAREN          reduce using rule 120 (bool -> CTEBOOL .)
    RBRACKET        reduce using rule 120 (bool -> CTEBOOL .)


state 123

    (113) valor -> float .

    EXP             reduce using rule 113 (valor -> float .)
    STAR            reduce using rule 113 (valor -> float .)
    SLASH           reduce using rule 113 (valor -> float .)
    MOD             reduce using rule 113 (valor -> float .)
    PLUS            reduce using rule 113 (valor -> float .)
    MINUS           reduce using rule 113 (valor -> float .)
    GREATERTHAN     reduce using rule 113 (valor -> float .)
    LESSTHAN        reduce using rule 113 (valor -> float .)
    GREATEREQUAL    reduce using rule 113 (valor -> float .)
    LESSEQUAL       reduce using rule 113 (valor -> float .)
    SHR             reduce using rule 113 (valor -> float .)
    SHL             reduce using rule 113 (valor -> float .)
    EQ              reduce using rule 113 (valor -> float .)
    DIF             reduce using rule 113 (valor -> float .)
    ANDB            reduce using rule 113 (valor -> float .)
    XOR             reduce using rule 113 (valor -> float .)
    ORB             reduce using rule 113 (valor -> float .)
    AND             reduce using rule 113 (valor -> float .)
    OR              reduce using rule 113 (valor -> float .)
    SEMIC           reduce using rule 113 (valor -> float .)
    COMMA           reduce using rule 113 (valor -> float .)
    LCURLY          reduce using rule 113 (valor -> float .)
    RPAREN          reduce using rule 113 (valor -> float .)
    RBRACKET        reduce using rule 113 (valor -> float .)


state 124

    (114) valor -> bool .

    EXP             reduce using rule 114 (valor -> bool .)
    STAR            reduce using rule 114 (valor -> bool .)
    SLASH           reduce using rule 114 (valor -> bool .)
    MOD             reduce using rule 114 (valor -> bool .)
    PLUS            reduce using rule 114 (valor -> bool .)
    MINUS           reduce using rule 114 (valor -> bool .)
    GREATERTHAN     reduce using rule 114 (valor -> bool .)
    LESSTHAN        reduce using rule 114 (valor -> bool .)
    GREATEREQUAL    reduce using rule 114 (valor -> bool .)
    LESSEQUAL       reduce using rule 114 (valor -> bool .)
    SHR             reduce using rule 114 (valor -> bool .)
    SHL             reduce using rule 114 (valor -> bool .)
    EQ              reduce using rule 114 (valor -> bool .)
    DIF             reduce using rule 114 (valor -> bool .)
    ANDB            reduce using rule 114 (valor -> bool .)
    XOR             reduce using rule 114 (valor -> bool .)
    ORB             reduce using rule 114 (valor -> bool .)
    AND             reduce using rule 114 (valor -> bool .)
    OR              reduce using rule 114 (valor -> bool .)
    SEMIC           reduce using rule 114 (valor -> bool .)
    COMMA           reduce using rule 114 (valor -> bool .)
    LCURLY          reduce using rule 114 (valor -> bool .)
    RPAREN          reduce using rule 114 (valor -> bool .)
    RBRACKET        reduce using rule 114 (valor -> bool .)


state 125

    (105) exponencial -> exponencial2 valor .

    EXP             reduce using rule 105 (exponencial -> exponencial2 valor .)
    STAR            reduce using rule 105 (exponencial -> exponencial2 valor .)
    SLASH           reduce using rule 105 (exponencial -> exponencial2 valor .)
    MOD             reduce using rule 105 (exponencial -> exponencial2 valor .)
    PLUS            reduce using rule 105 (exponencial -> exponencial2 valor .)
    MINUS           reduce using rule 105 (exponencial -> exponencial2 valor .)
    GREATERTHAN     reduce using rule 105 (exponencial -> exponencial2 valor .)
    LESSTHAN        reduce using rule 105 (exponencial -> exponencial2 valor .)
    GREATEREQUAL    reduce using rule 105 (exponencial -> exponencial2 valor .)
    LESSEQUAL       reduce using rule 105 (exponencial -> exponencial2 valor .)
    SHR             reduce using rule 105 (exponencial -> exponencial2 valor .)
    SHL             reduce using rule 105 (exponencial -> exponencial2 valor .)
    EQ              reduce using rule 105 (exponencial -> exponencial2 valor .)
    DIF             reduce using rule 105 (exponencial -> exponencial2 valor .)
    ANDB            reduce using rule 105 (exponencial -> exponencial2 valor .)
    XOR             reduce using rule 105 (exponencial -> exponencial2 valor .)
    ORB             reduce using rule 105 (exponencial -> exponencial2 valor .)
    AND             reduce using rule 105 (exponencial -> exponencial2 valor .)
    OR              reduce using rule 105 (exponencial -> exponencial2 valor .)
    COMMA           reduce using rule 105 (exponencial -> exponencial2 valor .)
    RPAREN          reduce using rule 105 (exponencial -> exponencial2 valor .)
    SEMIC           reduce using rule 105 (exponencial -> exponencial2 valor .)
    LCURLY          reduce using rule 105 (exponencial -> exponencial2 valor .)
    RBRACKET        reduce using rule 105 (exponencial -> exponencial2 valor .)


state 126

    (119) float -> CTEF .

    EXP             reduce using rule 119 (float -> CTEF .)
    STAR            reduce using rule 119 (float -> CTEF .)
    SLASH           reduce using rule 119 (float -> CTEF .)
    MOD             reduce using rule 119 (float -> CTEF .)
    PLUS            reduce using rule 119 (float -> CTEF .)
    MINUS           reduce using rule 119 (float -> CTEF .)
    GREATERTHAN     reduce using rule 119 (float -> CTEF .)
    LESSTHAN        reduce using rule 119 (float -> CTEF .)
    GREATEREQUAL    reduce using rule 119 (float -> CTEF .)
    LESSEQUAL       reduce using rule 119 (float -> CTEF .)
    SHR             reduce using rule 119 (float -> CTEF .)
    SHL             reduce using rule 119 (float -> CTEF .)
    EQ              reduce using rule 119 (float -> CTEF .)
    DIF             reduce using rule 119 (float -> CTEF .)
    ANDB            reduce using rule 119 (float -> CTEF .)
    XOR             reduce using rule 119 (float -> CTEF .)
    ORB             reduce using rule 119 (float -> CTEF .)
    AND             reduce using rule 119 (float -> CTEF .)
    OR              reduce using rule 119 (float -> CTEF .)
    SEMIC           reduce using rule 119 (float -> CTEF .)
    COMMA           reduce using rule 119 (float -> CTEF .)
    LCURLY          reduce using rule 119 (float -> CTEF .)
    RPAREN          reduce using rule 119 (float -> CTEF .)
    RBRACKET        reduce using rule 119 (float -> CTEF .)


state 127

    (115) int -> CTEI .

    EXP             reduce using rule 115 (int -> CTEI .)
    STAR            reduce using rule 115 (int -> CTEI .)
    SLASH           reduce using rule 115 (int -> CTEI .)
    MOD             reduce using rule 115 (int -> CTEI .)
    PLUS            reduce using rule 115 (int -> CTEI .)
    MINUS           reduce using rule 115 (int -> CTEI .)
    GREATERTHAN     reduce using rule 115 (int -> CTEI .)
    LESSTHAN        reduce using rule 115 (int -> CTEI .)
    GREATEREQUAL    reduce using rule 115 (int -> CTEI .)
    LESSEQUAL       reduce using rule 115 (int -> CTEI .)
    SHR             reduce using rule 115 (int -> CTEI .)
    SHL             reduce using rule 115 (int -> CTEI .)
    EQ              reduce using rule 115 (int -> CTEI .)
    DIF             reduce using rule 115 (int -> CTEI .)
    ANDB            reduce using rule 115 (int -> CTEI .)
    XOR             reduce using rule 115 (int -> CTEI .)
    ORB             reduce using rule 115 (int -> CTEI .)
    AND             reduce using rule 115 (int -> CTEI .)
    OR              reduce using rule 115 (int -> CTEI .)
    SEMIC           reduce using rule 115 (int -> CTEI .)
    COMMA           reduce using rule 115 (int -> CTEI .)
    LCURLY          reduce using rule 115 (int -> CTEI .)
    RPAREN          reduce using rule 115 (int -> CTEI .)
    RBRACKET        reduce using rule 115 (int -> CTEI .)


state 128

    (111) valor -> id .

    EXP             reduce using rule 111 (valor -> id .)
    STAR            reduce using rule 111 (valor -> id .)
    SLASH           reduce using rule 111 (valor -> id .)
    MOD             reduce using rule 111 (valor -> id .)
    PLUS            reduce using rule 111 (valor -> id .)
    MINUS           reduce using rule 111 (valor -> id .)
    GREATERTHAN     reduce using rule 111 (valor -> id .)
    LESSTHAN        reduce using rule 111 (valor -> id .)
    GREATEREQUAL    reduce using rule 111 (valor -> id .)
    LESSEQUAL       reduce using rule 111 (valor -> id .)
    SHR             reduce using rule 111 (valor -> id .)
    SHL             reduce using rule 111 (valor -> id .)
    EQ              reduce using rule 111 (valor -> id .)
    DIF             reduce using rule 111 (valor -> id .)
    ANDB            reduce using rule 111 (valor -> id .)
    XOR             reduce using rule 111 (valor -> id .)
    ORB             reduce using rule 111 (valor -> id .)
    AND             reduce using rule 111 (valor -> id .)
    OR              reduce using rule 111 (valor -> id .)
    SEMIC           reduce using rule 111 (valor -> id .)
    COMMA           reduce using rule 111 (valor -> id .)
    LCURLY          reduce using rule 111 (valor -> id .)
    RPAREN          reduce using rule 111 (valor -> id .)
    RBRACKET        reduce using rule 111 (valor -> id .)


state 129

    (97) termino2 -> STAR . termino
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 72
    termino                        shift and go to state 193
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 130

    (96) termino -> factor termino2 .

    PLUS            reduce using rule 96 (termino -> factor termino2 .)
    MINUS           reduce using rule 96 (termino -> factor termino2 .)
    GREATERTHAN     reduce using rule 96 (termino -> factor termino2 .)
    LESSTHAN        reduce using rule 96 (termino -> factor termino2 .)
    GREATEREQUAL    reduce using rule 96 (termino -> factor termino2 .)
    LESSEQUAL       reduce using rule 96 (termino -> factor termino2 .)
    SHR             reduce using rule 96 (termino -> factor termino2 .)
    SHL             reduce using rule 96 (termino -> factor termino2 .)
    EQ              reduce using rule 96 (termino -> factor termino2 .)
    DIF             reduce using rule 96 (termino -> factor termino2 .)
    ANDB            reduce using rule 96 (termino -> factor termino2 .)
    XOR             reduce using rule 96 (termino -> factor termino2 .)
    ORB             reduce using rule 96 (termino -> factor termino2 .)
    AND             reduce using rule 96 (termino -> factor termino2 .)
    OR              reduce using rule 96 (termino -> factor termino2 .)
    COMMA           reduce using rule 96 (termino -> factor termino2 .)
    RPAREN          reduce using rule 96 (termino -> factor termino2 .)
    SEMIC           reduce using rule 96 (termino -> factor termino2 .)
    LCURLY          reduce using rule 96 (termino -> factor termino2 .)
    RBRACKET        reduce using rule 96 (termino -> factor termino2 .)


state 131

    (98) termino2 -> SLASH . termino
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 72
    termino                        shift and go to state 194
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 132

    (100) termino2 -> empty .

    PLUS            reduce using rule 100 (termino2 -> empty .)
    MINUS           reduce using rule 100 (termino2 -> empty .)
    GREATERTHAN     reduce using rule 100 (termino2 -> empty .)
    LESSTHAN        reduce using rule 100 (termino2 -> empty .)
    GREATEREQUAL    reduce using rule 100 (termino2 -> empty .)
    LESSEQUAL       reduce using rule 100 (termino2 -> empty .)
    SHR             reduce using rule 100 (termino2 -> empty .)
    SHL             reduce using rule 100 (termino2 -> empty .)
    EQ              reduce using rule 100 (termino2 -> empty .)
    DIF             reduce using rule 100 (termino2 -> empty .)
    ANDB            reduce using rule 100 (termino2 -> empty .)
    XOR             reduce using rule 100 (termino2 -> empty .)
    ORB             reduce using rule 100 (termino2 -> empty .)
    AND             reduce using rule 100 (termino2 -> empty .)
    OR              reduce using rule 100 (termino2 -> empty .)
    SEMIC           reduce using rule 100 (termino2 -> empty .)
    COMMA           reduce using rule 100 (termino2 -> empty .)
    LCURLY          reduce using rule 100 (termino2 -> empty .)
    RPAREN          reduce using rule 100 (termino2 -> empty .)
    RBRACKET        reduce using rule 100 (termino2 -> empty .)


state 133

    (99) termino2 -> MOD . termino
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 72
    termino                        shift and go to state 195
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 134

    (103) factor2 -> empty .

    STAR            reduce using rule 103 (factor2 -> empty .)
    SLASH           reduce using rule 103 (factor2 -> empty .)
    MOD             reduce using rule 103 (factor2 -> empty .)
    PLUS            reduce using rule 103 (factor2 -> empty .)
    MINUS           reduce using rule 103 (factor2 -> empty .)
    GREATERTHAN     reduce using rule 103 (factor2 -> empty .)
    LESSTHAN        reduce using rule 103 (factor2 -> empty .)
    GREATEREQUAL    reduce using rule 103 (factor2 -> empty .)
    LESSEQUAL       reduce using rule 103 (factor2 -> empty .)
    SHR             reduce using rule 103 (factor2 -> empty .)
    SHL             reduce using rule 103 (factor2 -> empty .)
    EQ              reduce using rule 103 (factor2 -> empty .)
    DIF             reduce using rule 103 (factor2 -> empty .)
    ANDB            reduce using rule 103 (factor2 -> empty .)
    XOR             reduce using rule 103 (factor2 -> empty .)
    ORB             reduce using rule 103 (factor2 -> empty .)
    AND             reduce using rule 103 (factor2 -> empty .)
    OR              reduce using rule 103 (factor2 -> empty .)
    SEMIC           reduce using rule 103 (factor2 -> empty .)
    COMMA           reduce using rule 103 (factor2 -> empty .)
    LCURLY          reduce using rule 103 (factor2 -> empty .)
    RPAREN          reduce using rule 103 (factor2 -> empty .)
    RBRACKET        reduce using rule 103 (factor2 -> empty .)


state 135

    (102) factor2 -> EXP . factor
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    factor                         shift and go to state 196
    exponencial2                   shift and go to state 72
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 136

    (101) factor -> exponencial factor2 .

    STAR            reduce using rule 101 (factor -> exponencial factor2 .)
    SLASH           reduce using rule 101 (factor -> exponencial factor2 .)
    MOD             reduce using rule 101 (factor -> exponencial factor2 .)
    PLUS            reduce using rule 101 (factor -> exponencial factor2 .)
    MINUS           reduce using rule 101 (factor -> exponencial factor2 .)
    GREATERTHAN     reduce using rule 101 (factor -> exponencial factor2 .)
    LESSTHAN        reduce using rule 101 (factor -> exponencial factor2 .)
    GREATEREQUAL    reduce using rule 101 (factor -> exponencial factor2 .)
    LESSEQUAL       reduce using rule 101 (factor -> exponencial factor2 .)
    SHR             reduce using rule 101 (factor -> exponencial factor2 .)
    SHL             reduce using rule 101 (factor -> exponencial factor2 .)
    EQ              reduce using rule 101 (factor -> exponencial factor2 .)
    DIF             reduce using rule 101 (factor -> exponencial factor2 .)
    ANDB            reduce using rule 101 (factor -> exponencial factor2 .)
    XOR             reduce using rule 101 (factor -> exponencial factor2 .)
    ORB             reduce using rule 101 (factor -> exponencial factor2 .)
    AND             reduce using rule 101 (factor -> exponencial factor2 .)
    OR              reduce using rule 101 (factor -> exponencial factor2 .)
    SEMIC           reduce using rule 101 (factor -> exponencial factor2 .)
    COMMA           reduce using rule 101 (factor -> exponencial factor2 .)
    LCURLY          reduce using rule 101 (factor -> exponencial factor2 .)
    RPAREN          reduce using rule 101 (factor -> exponencial factor2 .)
    RBRACKET        reduce using rule 101 (factor -> exponencial factor2 .)


state 137

    (67) expresion2i -> AND . expresion2
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 197
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83

state 138

    (66) expresion2 -> expresion3 expresion2i .

    OR              reduce using rule 66 (expresion2 -> expresion3 expresion2i .)
    SEMIC           reduce using rule 66 (expresion2 -> expresion3 expresion2i .)
    COMMA           reduce using rule 66 (expresion2 -> expresion3 expresion2i .)
    LCURLY          reduce using rule 66 (expresion2 -> expresion3 expresion2i .)
    RPAREN          reduce using rule 66 (expresion2 -> expresion3 expresion2i .)
    RBRACKET        reduce using rule 66 (expresion2 -> expresion3 expresion2i .)


state 139

    (68) expresion2i -> empty .

    OR              reduce using rule 68 (expresion2i -> empty .)
    SEMIC           reduce using rule 68 (expresion2i -> empty .)
    COMMA           reduce using rule 68 (expresion2i -> empty .)
    LCURLY          reduce using rule 68 (expresion2i -> empty .)
    RPAREN          reduce using rule 68 (expresion2i -> empty .)
    RBRACKET        reduce using rule 68 (expresion2i -> empty .)


state 140

    (63) expresion -> expresion2 expresioni .

    COMMA           reduce using rule 63 (expresion -> expresion2 expresioni .)
    SEMIC           reduce using rule 63 (expresion -> expresion2 expresioni .)
    RPAREN          reduce using rule 63 (expresion -> expresion2 expresioni .)
    LCURLY          reduce using rule 63 (expresion -> expresion2 expresioni .)
    RBRACKET        reduce using rule 63 (expresion -> expresion2 expresioni .)


state 141

    (64) expresioni -> OR . expresion
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 198

state 142

    (65) expresioni -> empty .

    SEMIC           reduce using rule 65 (expresioni -> empty .)
    COMMA           reduce using rule 65 (expresioni -> empty .)
    LCURLY          reduce using rule 65 (expresioni -> empty .)
    RPAREN          reduce using rule 65 (expresioni -> empty .)
    RBRACKET        reduce using rule 65 (expresioni -> empty .)


state 143

    (73) expresion4i -> XOR . expresion4
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 199
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    expresion9                     shift and go to state 82
    empty                          shift and go to state 75
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74

state 144

    (74) expresion4i -> empty .

    ORB             reduce using rule 74 (expresion4i -> empty .)
    AND             reduce using rule 74 (expresion4i -> empty .)
    OR              reduce using rule 74 (expresion4i -> empty .)
    SEMIC           reduce using rule 74 (expresion4i -> empty .)
    COMMA           reduce using rule 74 (expresion4i -> empty .)
    LCURLY          reduce using rule 74 (expresion4i -> empty .)
    RPAREN          reduce using rule 74 (expresion4i -> empty .)
    RBRACKET        reduce using rule 74 (expresion4i -> empty .)


state 145

    (72) expresion4 -> expresion5 expresion4i .

    ORB             reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    AND             reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    OR              reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    SEMIC           reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    RBRACKET        reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    COMMA           reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    LCURLY          reduce using rule 72 (expresion4 -> expresion5 expresion4i .)
    RPAREN          reduce using rule 72 (expresion4 -> expresion5 expresion4i .)


state 146

    (69) expresion3 -> expresion4 expresion3i .

    AND             reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    OR              reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    COMMA           reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    SEMIC           reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    LCURLY          reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    RPAREN          reduce using rule 69 (expresion3 -> expresion4 expresion3i .)
    RBRACKET        reduce using rule 69 (expresion3 -> expresion4 expresion3i .)


state 147

    (70) expresion3i -> ORB . expresion3
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 200
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    factor                         shift and go to state 73

state 148

    (71) expresion3i -> empty .

    AND             reduce using rule 71 (expresion3i -> empty .)
    OR              reduce using rule 71 (expresion3i -> empty .)
    SEMIC           reduce using rule 71 (expresion3i -> empty .)
    COMMA           reduce using rule 71 (expresion3i -> empty .)
    LCURLY          reduce using rule 71 (expresion3i -> empty .)
    RPAREN          reduce using rule 71 (expresion3i -> empty .)
    RBRACKET        reduce using rule 71 (expresion3i -> empty .)


state 149

    (78) expresion6 -> expresion7 expresion6i .

    ANDB            reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    XOR             reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    ORB             reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    AND             reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    OR              reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    RBRACKET        reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    SEMIC           reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    COMMA           reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    LCURLY          reduce using rule 78 (expresion6 -> expresion7 expresion6i .)
    RPAREN          reduce using rule 78 (expresion6 -> expresion7 expresion6i .)


state 150

    (80) expresion6i -> DIF . expresion6
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion6                     shift and go to state 201
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    expresion7                     shift and go to state 80
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 151

    (79) expresion6i -> EQ . expresion6
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion6                     shift and go to state 202
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    expresion7                     shift and go to state 80
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 152

    (81) expresion6i -> empty .

    ANDB            reduce using rule 81 (expresion6i -> empty .)
    XOR             reduce using rule 81 (expresion6i -> empty .)
    ORB             reduce using rule 81 (expresion6i -> empty .)
    AND             reduce using rule 81 (expresion6i -> empty .)
    OR              reduce using rule 81 (expresion6i -> empty .)
    SEMIC           reduce using rule 81 (expresion6i -> empty .)
    COMMA           reduce using rule 81 (expresion6i -> empty .)
    LCURLY          reduce using rule 81 (expresion6i -> empty .)
    RPAREN          reduce using rule 81 (expresion6i -> empty .)
    RBRACKET        reduce using rule 81 (expresion6i -> empty .)


state 153

    (75) expresion5 -> expresion6 expresion5i .

    XOR             reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    ORB             reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    AND             reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    OR              reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    COMMA           reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    SEMIC           reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    RPAREN          reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    LCURLY          reduce using rule 75 (expresion5 -> expresion6 expresion5i .)
    RBRACKET        reduce using rule 75 (expresion5 -> expresion6 expresion5i .)


state 154

    (76) expresion5i -> ANDB . expresion5
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion5                     shift and go to state 203
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    expresion9                     shift and go to state 82
    empty                          shift and go to state 75
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74

state 155

    (77) expresion5i -> empty .

    XOR             reduce using rule 77 (expresion5i -> empty .)
    ORB             reduce using rule 77 (expresion5i -> empty .)
    AND             reduce using rule 77 (expresion5i -> empty .)
    OR              reduce using rule 77 (expresion5i -> empty .)
    SEMIC           reduce using rule 77 (expresion5i -> empty .)
    COMMA           reduce using rule 77 (expresion5i -> empty .)
    LCURLY          reduce using rule 77 (expresion5i -> empty .)
    RPAREN          reduce using rule 77 (expresion5i -> empty .)
    RBRACKET        reduce using rule 77 (expresion5i -> empty .)


state 156

    (89) expresion8i -> GREATEREQUAL . expresion8
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 204
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 157

    (86) expresion8 -> expresion9 expresion8i .

    SHR             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    SHL             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    EQ              reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    DIF             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    ANDB            reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    XOR             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    ORB             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    AND             reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    OR              reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    SEMIC           reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    COMMA           reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    LCURLY          reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    RPAREN          reduce using rule 86 (expresion8 -> expresion9 expresion8i .)
    RBRACKET        reduce using rule 86 (expresion8 -> expresion9 expresion8i .)


state 158

    (88) expresion8i -> LESSTHAN . expresion8
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 205
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 159

    (87) expresion8i -> GREATERTHAN . expresion8
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 206
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 160

    (90) expresion8i -> LESSEQUAL . expresion8
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 207
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 161

    (91) expresion8i -> empty .

    SHR             reduce using rule 91 (expresion8i -> empty .)
    SHL             reduce using rule 91 (expresion8i -> empty .)
    EQ              reduce using rule 91 (expresion8i -> empty .)
    DIF             reduce using rule 91 (expresion8i -> empty .)
    ANDB            reduce using rule 91 (expresion8i -> empty .)
    XOR             reduce using rule 91 (expresion8i -> empty .)
    ORB             reduce using rule 91 (expresion8i -> empty .)
    AND             reduce using rule 91 (expresion8i -> empty .)
    OR              reduce using rule 91 (expresion8i -> empty .)
    SEMIC           reduce using rule 91 (expresion8i -> empty .)
    COMMA           reduce using rule 91 (expresion8i -> empty .)
    LCURLY          reduce using rule 91 (expresion8i -> empty .)
    RPAREN          reduce using rule 91 (expresion8i -> empty .)
    RBRACKET        reduce using rule 91 (expresion8i -> empty .)


state 162

    (83) expresion7i -> SHR . expresion7
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion7                     shift and go to state 208
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 163

    (82) expresion7 -> expresion8 expresion7i .

    EQ              reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    DIF             reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    ANDB            reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    XOR             reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    ORB             reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    AND             reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    OR              reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    SEMIC           reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    COMMA           reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    LCURLY          reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    RPAREN          reduce using rule 82 (expresion7 -> expresion8 expresion7i .)
    RBRACKET        reduce using rule 82 (expresion7 -> expresion8 expresion7i .)


state 164

    (84) expresion7i -> SHL . expresion7
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    expresion7                     shift and go to state 209
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    exponencial2                   shift and go to state 72
    termino                        shift and go to state 69
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75

state 165

    (85) expresion7i -> empty .

    EQ              reduce using rule 85 (expresion7i -> empty .)
    DIF             reduce using rule 85 (expresion7i -> empty .)
    ANDB            reduce using rule 85 (expresion7i -> empty .)
    XOR             reduce using rule 85 (expresion7i -> empty .)
    ORB             reduce using rule 85 (expresion7i -> empty .)
    AND             reduce using rule 85 (expresion7i -> empty .)
    OR              reduce using rule 85 (expresion7i -> empty .)
    SEMIC           reduce using rule 85 (expresion7i -> empty .)
    COMMA           reduce using rule 85 (expresion7i -> empty .)
    LCURLY          reduce using rule 85 (expresion7i -> empty .)
    RPAREN          reduce using rule 85 (expresion7i -> empty .)
    RBRACKET        reduce using rule 85 (expresion7i -> empty .)


state 166

    (104) exponencial -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 210


state 167

    (62) return -> RETURN expresion SEMIC .

    IF              reduce using rule 62 (return -> RETURN expresion SEMIC .)
    PRINT           reduce using rule 62 (return -> RETURN expresion SEMIC .)
    FOR             reduce using rule 62 (return -> RETURN expresion SEMIC .)
    RETURN          reduce using rule 62 (return -> RETURN expresion SEMIC .)
    BUILD           reduce using rule 62 (return -> RETURN expresion SEMIC .)
    CONDITION       reduce using rule 62 (return -> RETURN expresion SEMIC .)
    ID              reduce using rule 62 (return -> RETURN expresion SEMIC .)
    TINT            reduce using rule 62 (return -> RETURN expresion SEMIC .)
    TBOOL           reduce using rule 62 (return -> RETURN expresion SEMIC .)
    TFLOAT          reduce using rule 62 (return -> RETURN expresion SEMIC .)
    RCURLY          reduce using rule 62 (return -> RETURN expresion SEMIC .)
    WHERE           reduce using rule 62 (return -> RETURN expresion SEMIC .)


state 168

    (17) optimize -> MIN LCURLY statement . where RCURLY
    (20) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 107

    where                          shift and go to state 211

state 169

    (45) write -> PRINT expresion write2 . SEMIC

    SEMIC           shift and go to state 212


state 170

    (46) write2 -> COMMA . expresion write2
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 213

state 171

    (47) write2 -> empty .

    SEMIC           reduce using rule 47 (write2 -> empty .)


state 172

    (33) asign -> id asign_signo expresiones . SEMIC

    SEMIC           shift and go to state 214


state 173

    (34) expresiones -> expresion . expresiones2
    (35) expresiones2 -> . COMMA expresion expresiones2
    (36) expresiones2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 215
    SEMIC           reduce using rule 129 (empty -> .)

    expresiones2                   shift and go to state 216
    empty                          shift and go to state 217

state 174

    (53) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 218


state 175

    (121) llamarfuncion -> LPAREN llamarfuncion3 . RPAREN

    RPAREN          shift and go to state 219


state 176

    (123) llamarfuncion3 -> empty .
    (110) exponencial2 -> empty .

    RPAREN          reduce using rule 123 (llamarfuncion3 -> empty .)
    ID              reduce using rule 110 (exponencial2 -> empty .)
    CTEI            reduce using rule 110 (exponencial2 -> empty .)
    CTEF            reduce using rule 110 (exponencial2 -> empty .)
    CTEBOOL         reduce using rule 110 (exponencial2 -> empty .)


state 177

    (122) llamarfuncion3 -> expresion . llamarfuncion33
    (124) llamarfuncion33 -> . COMMA expresion llamarfuncion33
    (125) llamarfuncion33 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 129 (empty -> .)

    llamarfuncion33                shift and go to state 220
    empty                          shift and go to state 222

state 178

    (1) program -> functions MODEL LCURLY vars data model bloque2 RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model bloque2 RCURLY .)


state 179

    (48) ciclo -> FOR ID IN . DOT ID bloque

    DOT             shift and go to state 223


state 180

    (19) build -> BUILD expresion SEMIC .

    IF              reduce using rule 19 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 19 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 19 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 19 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 19 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 19 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 19 (build -> BUILD expresion SEMIC .)
    TINT            reduce using rule 19 (build -> BUILD expresion SEMIC .)
    TBOOL           reduce using rule 19 (build -> BUILD expresion SEMIC .)
    TFLOAT          reduce using rule 19 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 19 (build -> BUILD expresion SEMIC .)
    WHERE           reduce using rule 19 (build -> BUILD expresion SEMIC .)


state 181

    (20) where -> WHERE LCURLY . bloque2 RCURLY
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (129) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 101
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    bloque2                        shift and go to state 224
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 182

    (59) bloque -> LCURLY . bloque2 RCURLY
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (129) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 101
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    bloque2                        shift and go to state 225
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 183

    (42) condition -> IF expresion bloque . condition1
    (43) condition1 -> . ELSE bloque
    (44) condition1 -> . empty
    (129) empty -> .

    ELSE            shift and go to state 226
    IF              reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    BUILD           reduce using rule 129 (empty -> .)
    CONDITION       reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    TINT            reduce using rule 129 (empty -> .)
    TBOOL           reduce using rule 129 (empty -> .)
    TFLOAT          reduce using rule 129 (empty -> .)
    RCURLY          reduce using rule 129 (empty -> .)
    WHERE           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 228
    condition1                     shift and go to state 227

state 184

    (18) optimize -> MAX LCURLY statement . where RCURLY
    (20) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 107

    where                          shift and go to state 229

state 185

    (21) wherecondition -> CONDITION expresion SEMIC .

    WHERE           reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    IF              reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    TINT            reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    TBOOL           reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    TFLOAT          reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 21 (wherecondition -> CONDITION expresion SEMIC .)


state 186

    (4) function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars . data bloque2 RCURLY
    (30) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 20

    data                           shift and go to state 230

state 187

    (57) dec22 -> COMMA . ID dec22

    ID              shift and go to state 231


state 188

    (51) declaration -> typedeclaration POINTS ID dec22 . SEMIC

    SEMIC           shift and go to state 232


state 189

    (58) dec22 -> empty .

    SEMIC           reduce using rule 58 (dec22 -> empty .)


state 190

    (55) dimensionsfixed -> LBRACKET CTEI RBRACKET . dimensionsfixed
    (55) dimensionsfixed -> . LBRACKET CTEI RBRACKET dimensionsfixed
    (56) dimensionsfixed -> . empty
    (129) empty -> .

    LBRACKET        shift and go to state 64
    POINTS          reduce using rule 129 (empty -> .)

    dimensionsfixed                shift and go to state 233
    empty                          shift and go to state 65

state 191

    (93) expresion9i -> PLUS expresion9 .

    GREATERTHAN     reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    LESSTHAN        reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    GREATEREQUAL    reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    LESSEQUAL       reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    SHR             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    SHL             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    EQ              reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    DIF             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    ANDB            reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    XOR             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    ORB             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    AND             reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    OR              reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    SEMIC           reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    COMMA           reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    LCURLY          reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    RPAREN          reduce using rule 93 (expresion9i -> PLUS expresion9 .)
    RBRACKET        reduce using rule 93 (expresion9i -> PLUS expresion9 .)


state 192

    (94) expresion9i -> MINUS expresion9 .

    GREATERTHAN     reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    LESSTHAN        reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    GREATEREQUAL    reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    LESSEQUAL       reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    SHR             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    SHL             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    EQ              reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    DIF             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    ANDB            reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    XOR             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    ORB             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    AND             reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    OR              reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    SEMIC           reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    COMMA           reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    LCURLY          reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    RPAREN          reduce using rule 94 (expresion9i -> MINUS expresion9 .)
    RBRACKET        reduce using rule 94 (expresion9i -> MINUS expresion9 .)


state 193

    (97) termino2 -> STAR termino .

    PLUS            reduce using rule 97 (termino2 -> STAR termino .)
    MINUS           reduce using rule 97 (termino2 -> STAR termino .)
    GREATERTHAN     reduce using rule 97 (termino2 -> STAR termino .)
    LESSTHAN        reduce using rule 97 (termino2 -> STAR termino .)
    GREATEREQUAL    reduce using rule 97 (termino2 -> STAR termino .)
    LESSEQUAL       reduce using rule 97 (termino2 -> STAR termino .)
    SHR             reduce using rule 97 (termino2 -> STAR termino .)
    SHL             reduce using rule 97 (termino2 -> STAR termino .)
    EQ              reduce using rule 97 (termino2 -> STAR termino .)
    DIF             reduce using rule 97 (termino2 -> STAR termino .)
    ANDB            reduce using rule 97 (termino2 -> STAR termino .)
    XOR             reduce using rule 97 (termino2 -> STAR termino .)
    ORB             reduce using rule 97 (termino2 -> STAR termino .)
    AND             reduce using rule 97 (termino2 -> STAR termino .)
    OR              reduce using rule 97 (termino2 -> STAR termino .)
    SEMIC           reduce using rule 97 (termino2 -> STAR termino .)
    COMMA           reduce using rule 97 (termino2 -> STAR termino .)
    LCURLY          reduce using rule 97 (termino2 -> STAR termino .)
    RPAREN          reduce using rule 97 (termino2 -> STAR termino .)
    RBRACKET        reduce using rule 97 (termino2 -> STAR termino .)


state 194

    (98) termino2 -> SLASH termino .

    PLUS            reduce using rule 98 (termino2 -> SLASH termino .)
    MINUS           reduce using rule 98 (termino2 -> SLASH termino .)
    GREATERTHAN     reduce using rule 98 (termino2 -> SLASH termino .)
    LESSTHAN        reduce using rule 98 (termino2 -> SLASH termino .)
    GREATEREQUAL    reduce using rule 98 (termino2 -> SLASH termino .)
    LESSEQUAL       reduce using rule 98 (termino2 -> SLASH termino .)
    SHR             reduce using rule 98 (termino2 -> SLASH termino .)
    SHL             reduce using rule 98 (termino2 -> SLASH termino .)
    EQ              reduce using rule 98 (termino2 -> SLASH termino .)
    DIF             reduce using rule 98 (termino2 -> SLASH termino .)
    ANDB            reduce using rule 98 (termino2 -> SLASH termino .)
    XOR             reduce using rule 98 (termino2 -> SLASH termino .)
    ORB             reduce using rule 98 (termino2 -> SLASH termino .)
    AND             reduce using rule 98 (termino2 -> SLASH termino .)
    OR              reduce using rule 98 (termino2 -> SLASH termino .)
    SEMIC           reduce using rule 98 (termino2 -> SLASH termino .)
    COMMA           reduce using rule 98 (termino2 -> SLASH termino .)
    LCURLY          reduce using rule 98 (termino2 -> SLASH termino .)
    RPAREN          reduce using rule 98 (termino2 -> SLASH termino .)
    RBRACKET        reduce using rule 98 (termino2 -> SLASH termino .)


state 195

    (99) termino2 -> MOD termino .

    PLUS            reduce using rule 99 (termino2 -> MOD termino .)
    MINUS           reduce using rule 99 (termino2 -> MOD termino .)
    GREATERTHAN     reduce using rule 99 (termino2 -> MOD termino .)
    LESSTHAN        reduce using rule 99 (termino2 -> MOD termino .)
    GREATEREQUAL    reduce using rule 99 (termino2 -> MOD termino .)
    LESSEQUAL       reduce using rule 99 (termino2 -> MOD termino .)
    SHR             reduce using rule 99 (termino2 -> MOD termino .)
    SHL             reduce using rule 99 (termino2 -> MOD termino .)
    EQ              reduce using rule 99 (termino2 -> MOD termino .)
    DIF             reduce using rule 99 (termino2 -> MOD termino .)
    ANDB            reduce using rule 99 (termino2 -> MOD termino .)
    XOR             reduce using rule 99 (termino2 -> MOD termino .)
    ORB             reduce using rule 99 (termino2 -> MOD termino .)
    AND             reduce using rule 99 (termino2 -> MOD termino .)
    OR              reduce using rule 99 (termino2 -> MOD termino .)
    SEMIC           reduce using rule 99 (termino2 -> MOD termino .)
    COMMA           reduce using rule 99 (termino2 -> MOD termino .)
    LCURLY          reduce using rule 99 (termino2 -> MOD termino .)
    RPAREN          reduce using rule 99 (termino2 -> MOD termino .)
    RBRACKET        reduce using rule 99 (termino2 -> MOD termino .)


state 196

    (102) factor2 -> EXP factor .

    STAR            reduce using rule 102 (factor2 -> EXP factor .)
    SLASH           reduce using rule 102 (factor2 -> EXP factor .)
    MOD             reduce using rule 102 (factor2 -> EXP factor .)
    PLUS            reduce using rule 102 (factor2 -> EXP factor .)
    MINUS           reduce using rule 102 (factor2 -> EXP factor .)
    GREATERTHAN     reduce using rule 102 (factor2 -> EXP factor .)
    LESSTHAN        reduce using rule 102 (factor2 -> EXP factor .)
    GREATEREQUAL    reduce using rule 102 (factor2 -> EXP factor .)
    LESSEQUAL       reduce using rule 102 (factor2 -> EXP factor .)
    SHR             reduce using rule 102 (factor2 -> EXP factor .)
    SHL             reduce using rule 102 (factor2 -> EXP factor .)
    EQ              reduce using rule 102 (factor2 -> EXP factor .)
    DIF             reduce using rule 102 (factor2 -> EXP factor .)
    ANDB            reduce using rule 102 (factor2 -> EXP factor .)
    XOR             reduce using rule 102 (factor2 -> EXP factor .)
    ORB             reduce using rule 102 (factor2 -> EXP factor .)
    AND             reduce using rule 102 (factor2 -> EXP factor .)
    OR              reduce using rule 102 (factor2 -> EXP factor .)
    SEMIC           reduce using rule 102 (factor2 -> EXP factor .)
    COMMA           reduce using rule 102 (factor2 -> EXP factor .)
    LCURLY          reduce using rule 102 (factor2 -> EXP factor .)
    RPAREN          reduce using rule 102 (factor2 -> EXP factor .)
    RBRACKET        reduce using rule 102 (factor2 -> EXP factor .)


state 197

    (67) expresion2i -> AND expresion2 .

    OR              reduce using rule 67 (expresion2i -> AND expresion2 .)
    SEMIC           reduce using rule 67 (expresion2i -> AND expresion2 .)
    COMMA           reduce using rule 67 (expresion2i -> AND expresion2 .)
    LCURLY          reduce using rule 67 (expresion2i -> AND expresion2 .)
    RPAREN          reduce using rule 67 (expresion2i -> AND expresion2 .)
    RBRACKET        reduce using rule 67 (expresion2i -> AND expresion2 .)


state 198

    (64) expresioni -> OR expresion .

    SEMIC           reduce using rule 64 (expresioni -> OR expresion .)
    COMMA           reduce using rule 64 (expresioni -> OR expresion .)
    LCURLY          reduce using rule 64 (expresioni -> OR expresion .)
    RPAREN          reduce using rule 64 (expresioni -> OR expresion .)
    RBRACKET        reduce using rule 64 (expresioni -> OR expresion .)


state 199

    (73) expresion4i -> XOR expresion4 .

    ORB             reduce using rule 73 (expresion4i -> XOR expresion4 .)
    AND             reduce using rule 73 (expresion4i -> XOR expresion4 .)
    OR              reduce using rule 73 (expresion4i -> XOR expresion4 .)
    SEMIC           reduce using rule 73 (expresion4i -> XOR expresion4 .)
    COMMA           reduce using rule 73 (expresion4i -> XOR expresion4 .)
    LCURLY          reduce using rule 73 (expresion4i -> XOR expresion4 .)
    RPAREN          reduce using rule 73 (expresion4i -> XOR expresion4 .)
    RBRACKET        reduce using rule 73 (expresion4i -> XOR expresion4 .)


state 200

    (70) expresion3i -> ORB expresion3 .

    AND             reduce using rule 70 (expresion3i -> ORB expresion3 .)
    OR              reduce using rule 70 (expresion3i -> ORB expresion3 .)
    SEMIC           reduce using rule 70 (expresion3i -> ORB expresion3 .)
    COMMA           reduce using rule 70 (expresion3i -> ORB expresion3 .)
    LCURLY          reduce using rule 70 (expresion3i -> ORB expresion3 .)
    RPAREN          reduce using rule 70 (expresion3i -> ORB expresion3 .)
    RBRACKET        reduce using rule 70 (expresion3i -> ORB expresion3 .)


state 201

    (80) expresion6i -> DIF expresion6 .

    ANDB            reduce using rule 80 (expresion6i -> DIF expresion6 .)
    XOR             reduce using rule 80 (expresion6i -> DIF expresion6 .)
    ORB             reduce using rule 80 (expresion6i -> DIF expresion6 .)
    AND             reduce using rule 80 (expresion6i -> DIF expresion6 .)
    OR              reduce using rule 80 (expresion6i -> DIF expresion6 .)
    SEMIC           reduce using rule 80 (expresion6i -> DIF expresion6 .)
    COMMA           reduce using rule 80 (expresion6i -> DIF expresion6 .)
    LCURLY          reduce using rule 80 (expresion6i -> DIF expresion6 .)
    RPAREN          reduce using rule 80 (expresion6i -> DIF expresion6 .)
    RBRACKET        reduce using rule 80 (expresion6i -> DIF expresion6 .)


state 202

    (79) expresion6i -> EQ expresion6 .

    ANDB            reduce using rule 79 (expresion6i -> EQ expresion6 .)
    XOR             reduce using rule 79 (expresion6i -> EQ expresion6 .)
    ORB             reduce using rule 79 (expresion6i -> EQ expresion6 .)
    AND             reduce using rule 79 (expresion6i -> EQ expresion6 .)
    OR              reduce using rule 79 (expresion6i -> EQ expresion6 .)
    SEMIC           reduce using rule 79 (expresion6i -> EQ expresion6 .)
    COMMA           reduce using rule 79 (expresion6i -> EQ expresion6 .)
    LCURLY          reduce using rule 79 (expresion6i -> EQ expresion6 .)
    RPAREN          reduce using rule 79 (expresion6i -> EQ expresion6 .)
    RBRACKET        reduce using rule 79 (expresion6i -> EQ expresion6 .)


state 203

    (76) expresion5i -> ANDB expresion5 .

    XOR             reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    ORB             reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    AND             reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    OR              reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    SEMIC           reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    COMMA           reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    LCURLY          reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    RPAREN          reduce using rule 76 (expresion5i -> ANDB expresion5 .)
    RBRACKET        reduce using rule 76 (expresion5i -> ANDB expresion5 .)


state 204

    (89) expresion8i -> GREATEREQUAL expresion8 .

    SHR             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    SHL             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    EQ              reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    DIF             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    ANDB            reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    XOR             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    ORB             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    AND             reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    OR              reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    SEMIC           reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    COMMA           reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    LCURLY          reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    RPAREN          reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)
    RBRACKET        reduce using rule 89 (expresion8i -> GREATEREQUAL expresion8 .)


state 205

    (88) expresion8i -> LESSTHAN expresion8 .

    SHR             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    SHL             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    EQ              reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    DIF             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    ANDB            reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    XOR             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    ORB             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    AND             reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    OR              reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    SEMIC           reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    COMMA           reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    LCURLY          reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    RPAREN          reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)
    RBRACKET        reduce using rule 88 (expresion8i -> LESSTHAN expresion8 .)


state 206

    (87) expresion8i -> GREATERTHAN expresion8 .

    SHR             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    SHL             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    EQ              reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    DIF             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    ANDB            reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    XOR             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    ORB             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    AND             reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    OR              reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    SEMIC           reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    COMMA           reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    LCURLY          reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    RPAREN          reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)
    RBRACKET        reduce using rule 87 (expresion8i -> GREATERTHAN expresion8 .)


state 207

    (90) expresion8i -> LESSEQUAL expresion8 .

    SHR             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    SHL             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    EQ              reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    DIF             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    ANDB            reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    XOR             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    ORB             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    AND             reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    OR              reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    SEMIC           reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    COMMA           reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    LCURLY          reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    RPAREN          reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)
    RBRACKET        reduce using rule 90 (expresion8i -> LESSEQUAL expresion8 .)


state 208

    (83) expresion7i -> SHR expresion7 .

    EQ              reduce using rule 83 (expresion7i -> SHR expresion7 .)
    DIF             reduce using rule 83 (expresion7i -> SHR expresion7 .)
    ANDB            reduce using rule 83 (expresion7i -> SHR expresion7 .)
    XOR             reduce using rule 83 (expresion7i -> SHR expresion7 .)
    ORB             reduce using rule 83 (expresion7i -> SHR expresion7 .)
    AND             reduce using rule 83 (expresion7i -> SHR expresion7 .)
    OR              reduce using rule 83 (expresion7i -> SHR expresion7 .)
    SEMIC           reduce using rule 83 (expresion7i -> SHR expresion7 .)
    COMMA           reduce using rule 83 (expresion7i -> SHR expresion7 .)
    LCURLY          reduce using rule 83 (expresion7i -> SHR expresion7 .)
    RPAREN          reduce using rule 83 (expresion7i -> SHR expresion7 .)
    RBRACKET        reduce using rule 83 (expresion7i -> SHR expresion7 .)


state 209

    (84) expresion7i -> SHL expresion7 .

    EQ              reduce using rule 84 (expresion7i -> SHL expresion7 .)
    DIF             reduce using rule 84 (expresion7i -> SHL expresion7 .)
    ANDB            reduce using rule 84 (expresion7i -> SHL expresion7 .)
    XOR             reduce using rule 84 (expresion7i -> SHL expresion7 .)
    ORB             reduce using rule 84 (expresion7i -> SHL expresion7 .)
    AND             reduce using rule 84 (expresion7i -> SHL expresion7 .)
    OR              reduce using rule 84 (expresion7i -> SHL expresion7 .)
    SEMIC           reduce using rule 84 (expresion7i -> SHL expresion7 .)
    COMMA           reduce using rule 84 (expresion7i -> SHL expresion7 .)
    LCURLY          reduce using rule 84 (expresion7i -> SHL expresion7 .)
    RPAREN          reduce using rule 84 (expresion7i -> SHL expresion7 .)
    RBRACKET        reduce using rule 84 (expresion7i -> SHL expresion7 .)


state 210

    (104) exponencial -> LPAREN expresion RPAREN .

    EXP             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    STAR            reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    SHR             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    SHL             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    DIF             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    ANDB            reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    ORB             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    AND             reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    OR              reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    LCURLY          reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 104 (exponencial -> LPAREN expresion RPAREN .)


state 211

    (17) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 234


state 212

    (45) write -> PRINT expresion write2 SEMIC .

    IF              reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    PRINT           reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    FOR             reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    RETURN          reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    BUILD           reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    CONDITION       reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    ID              reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    TINT            reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    TBOOL           reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    TFLOAT          reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    RCURLY          reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)
    WHERE           reduce using rule 45 (write -> PRINT expresion write2 SEMIC .)


state 213

    (46) write2 -> COMMA expresion . write2
    (46) write2 -> . COMMA expresion write2
    (47) write2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 170
    SEMIC           reduce using rule 129 (empty -> .)

    write2                         shift and go to state 235
    empty                          shift and go to state 171

state 214

    (33) asign -> id asign_signo expresiones SEMIC .

    IF              reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    PRINT           reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    FOR             reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    RETURN          reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    BUILD           reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    CONDITION       reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    ID              reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    TINT            reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    TBOOL           reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    TFLOAT          reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    RCURLY          reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)
    WHERE           reduce using rule 33 (asign -> id asign_signo expresiones SEMIC .)


state 215

    (35) expresiones2 -> COMMA . expresion expresiones2
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    expresion4                     shift and go to state 79
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 236

state 216

    (34) expresiones -> expresion expresiones2 .

    SEMIC           reduce using rule 34 (expresiones -> expresion expresiones2 .)


state 217

    (36) expresiones2 -> empty .

    SEMIC           reduce using rule 36 (expresiones2 -> empty .)


state 218

    (53) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (53) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (54) dimensions -> . empty
    (129) empty -> .

    LBRACKET        shift and go to state 98
    ASEQ            reduce using rule 129 (empty -> .)
    PLUSEQ          reduce using rule 129 (empty -> .)
    MINEQ           reduce using rule 129 (empty -> .)
    MULTEQ          reduce using rule 129 (empty -> .)
    DIVEQ           reduce using rule 129 (empty -> .)
    EXP             reduce using rule 129 (empty -> .)
    STAR            reduce using rule 129 (empty -> .)
    SLASH           reduce using rule 129 (empty -> .)
    MOD             reduce using rule 129 (empty -> .)
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)
    COMMA           reduce using rule 129 (empty -> .)
    LCURLY          reduce using rule 129 (empty -> .)
    RPAREN          reduce using rule 129 (empty -> .)
    RBRACKET        reduce using rule 129 (empty -> .)

    dimensions                     shift and go to state 237
    empty                          shift and go to state 100

state 219

    (121) llamarfuncion -> LPAREN llamarfuncion3 RPAREN .

    ASEQ            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUSEQ          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINEQ           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MULTEQ          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIVEQ           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EXP             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    STAR            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SLASH           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MOD             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUS            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINUS           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATERTHAN     reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSTHAN        reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATEREQUAL    reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSEQUAL       reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHR             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHL             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EQ              reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIF             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ANDB            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    XOR             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ORB             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    AND             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    OR              reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SEMIC           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    COMMA           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LCURLY          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RPAREN          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RBRACKET        reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)


state 220

    (122) llamarfuncion3 -> expresion llamarfuncion33 .

    RPAREN          reduce using rule 122 (llamarfuncion3 -> expresion llamarfuncion33 .)


state 221

    (124) llamarfuncion33 -> COMMA . expresion llamarfuncion33
    (63) expresion -> . expresion2 expresioni
    (66) expresion2 -> . expresion3 expresion2i
    (69) expresion3 -> . expresion4 expresion3i
    (72) expresion4 -> . expresion5 expresion4i
    (75) expresion5 -> . expresion6 expresion5i
    (78) expresion6 -> . expresion7 expresion6i
    (82) expresion7 -> . expresion8 expresion7i
    (86) expresion8 -> . expresion9 expresion8i
    (92) expresion9 -> . termino expresion9i
    (96) termino -> . factor termino2
    (101) factor -> . exponencial factor2
    (104) exponencial -> . LPAREN expresion RPAREN
    (105) exponencial -> . exponencial2 valor
    (106) exponencial2 -> . NOT
    (107) exponencial2 -> . MM
    (108) exponencial2 -> . PP
    (109) exponencial2 -> . NEW
    (110) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 84
    NOT             shift and go to state 87
    MM              shift and go to state 86
    PP              shift and go to state 71
    NEW             shift and go to state 70
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    CTEBOOL         reduce using rule 129 (empty -> .)

    termino                        shift and go to state 69
    exponencial2                   shift and go to state 72
    factor                         shift and go to state 73
    exponencial                    shift and go to state 74
    empty                          shift and go to state 75
    expresion3                     shift and go to state 76
    expresion2                     shift and go to state 77
    expresion5                     shift and go to state 78
    expresion4                     shift and go to state 79
    expresion7                     shift and go to state 80
    expresion6                     shift and go to state 81
    expresion9                     shift and go to state 82
    expresion8                     shift and go to state 83
    expresion                      shift and go to state 238

state 222

    (125) llamarfuncion33 -> empty .

    RPAREN          reduce using rule 125 (llamarfuncion33 -> empty .)


state 223

    (48) ciclo -> FOR ID IN DOT . ID bloque

    ID              shift and go to state 239


state 224

    (20) where -> WHERE LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 240


state 225

    (59) bloque -> LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 241


state 226

    (43) condition1 -> ELSE . bloque
    (59) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 182

    bloque                         shift and go to state 242

state 227

    (42) condition -> IF expresion bloque condition1 .

    WHERE           reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    IF              reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    PRINT           reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    FOR             reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    RETURN          reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    BUILD           reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    CONDITION       reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    ID              reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    TINT            reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    TBOOL           reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    TFLOAT          reduce using rule 42 (condition -> IF expresion bloque condition1 .)
    RCURLY          reduce using rule 42 (condition -> IF expresion bloque condition1 .)


state 228

    (44) condition1 -> empty .

    IF              reduce using rule 44 (condition1 -> empty .)
    PRINT           reduce using rule 44 (condition1 -> empty .)
    FOR             reduce using rule 44 (condition1 -> empty .)
    RETURN          reduce using rule 44 (condition1 -> empty .)
    BUILD           reduce using rule 44 (condition1 -> empty .)
    CONDITION       reduce using rule 44 (condition1 -> empty .)
    ID              reduce using rule 44 (condition1 -> empty .)
    TINT            reduce using rule 44 (condition1 -> empty .)
    TBOOL           reduce using rule 44 (condition1 -> empty .)
    TFLOAT          reduce using rule 44 (condition1 -> empty .)
    RCURLY          reduce using rule 44 (condition1 -> empty .)
    WHERE           reduce using rule 44 (condition1 -> empty .)


state 229

    (18) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 243


state 230

    (4) function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data . bloque2 RCURLY
    (60) bloque2 -> . statement bloque2
    (61) bloque2 -> . empty
    (22) statement -> . declaration
    (23) statement -> . asign
    (24) statement -> . condition
    (25) statement -> . write
    (26) statement -> . ciclo
    (27) statement -> . return
    (28) statement -> . build
    (29) statement -> . wherecondition
    (129) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (33) asign -> . id asign_signo expresiones SEMIC
    (42) condition -> . IF expresion bloque condition1
    (45) write -> . PRINT expresion write2 SEMIC
    (48) ciclo -> . FOR ID IN DOT ID bloque
    (62) return -> . RETURN expresion SEMIC
    (19) build -> . BUILD expresion SEMIC
    (21) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensionsfixed
    (116) id -> . ID llamarfuncion
    (117) id -> . ID dimensions
    (118) id -> . ID
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 34
    FOR             shift and go to state 44
    RETURN          shift and go to state 32
    BUILD           shift and go to state 45
    CONDITION       shift and go to state 53
    ID              shift and go to state 37
    TINT            shift and go to state 9
    TBOOL           shift and go to state 10
    TFLOAT          shift and go to state 8

    id                             shift and go to state 35
    ciclo                          shift and go to state 36
    write                          shift and go to state 38
    build                          shift and go to state 39
    statement                      shift and go to state 40
    type                           shift and go to state 29
    empty                          shift and go to state 101
    return                         shift and go to state 43
    typedeclaration                shift and go to state 26
    declaration                    shift and go to state 46
    condition                      shift and go to state 48
    bloque2                        shift and go to state 244
    asign                          shift and go to state 52
    wherecondition                 shift and go to state 54

state 231

    (57) dec22 -> COMMA ID . dec22
    (57) dec22 -> . COMMA ID dec22
    (58) dec22 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 187
    SEMIC           reduce using rule 129 (empty -> .)

    dec22                          shift and go to state 245
    empty                          shift and go to state 189

state 232

    (51) declaration -> typedeclaration POINTS ID dec22 SEMIC .

    TINT            reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TBOOL           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TFLOAT          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RCURLY          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    WHERE           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    IF              reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    PRINT           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    FOR             reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RETURN          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    BUILD           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    CONDITION       reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    ID              reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)


state 233

    (55) dimensionsfixed -> LBRACKET CTEI RBRACKET dimensionsfixed .

    POINTS          reduce using rule 55 (dimensionsfixed -> LBRACKET CTEI RBRACKET dimensionsfixed .)


state 234

    (17) optimize -> MIN LCURLY statement where RCURLY .

    WHERE           reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    ID              reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    TINT            reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 17 (optimize -> MIN LCURLY statement where RCURLY .)


state 235

    (46) write2 -> COMMA expresion write2 .

    SEMIC           reduce using rule 46 (write2 -> COMMA expresion write2 .)


state 236

    (35) expresiones2 -> COMMA expresion . expresiones2
    (35) expresiones2 -> . COMMA expresion expresiones2
    (36) expresiones2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 215
    SEMIC           reduce using rule 129 (empty -> .)

    expresiones2                   shift and go to state 246
    empty                          shift and go to state 217

state 237

    (53) dimensions -> LBRACKET expresion RBRACKET dimensions .

    ASEQ            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUSEQ          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINEQ           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MULTEQ          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIVEQ           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EXP             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    STAR            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SLASH           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MOD             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUS            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINUS           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATERTHAN     reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSTHAN        reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATEREQUAL    reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSEQUAL       reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHR             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHL             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EQ              reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIF             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ANDB            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    XOR             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ORB             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    AND             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    OR              reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SEMIC           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    COMMA           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LCURLY          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RPAREN          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RBRACKET        reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 238

    (124) llamarfuncion33 -> COMMA expresion . llamarfuncion33
    (124) llamarfuncion33 -> . COMMA expresion llamarfuncion33
    (125) llamarfuncion33 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 221
    RPAREN          reduce using rule 129 (empty -> .)

    llamarfuncion33                shift and go to state 247
    empty                          shift and go to state 222

state 239

    (48) ciclo -> FOR ID IN DOT ID . bloque
    (59) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 182

    bloque                         shift and go to state 248

state 240

    (20) where -> WHERE LCURLY bloque2 RCURLY .

    RCURLY          reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    IF              reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    ID              reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 20 (where -> WHERE LCURLY bloque2 RCURLY .)


state 241

    (59) bloque -> LCURLY bloque2 RCURLY .

    ELSE            reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    IF              reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    ID              reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)
    WHERE           reduce using rule 59 (bloque -> LCURLY bloque2 RCURLY .)


state 242

    (43) condition1 -> ELSE bloque .

    IF              reduce using rule 43 (condition1 -> ELSE bloque .)
    PRINT           reduce using rule 43 (condition1 -> ELSE bloque .)
    FOR             reduce using rule 43 (condition1 -> ELSE bloque .)
    RETURN          reduce using rule 43 (condition1 -> ELSE bloque .)
    BUILD           reduce using rule 43 (condition1 -> ELSE bloque .)
    CONDITION       reduce using rule 43 (condition1 -> ELSE bloque .)
    ID              reduce using rule 43 (condition1 -> ELSE bloque .)
    TINT            reduce using rule 43 (condition1 -> ELSE bloque .)
    TBOOL           reduce using rule 43 (condition1 -> ELSE bloque .)
    TFLOAT          reduce using rule 43 (condition1 -> ELSE bloque .)
    RCURLY          reduce using rule 43 (condition1 -> ELSE bloque .)
    WHERE           reduce using rule 43 (condition1 -> ELSE bloque .)


state 243

    (18) optimize -> MAX LCURLY statement where RCURLY .

    WHERE           reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    ID              reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    TINT            reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 18 (optimize -> MAX LCURLY statement where RCURLY .)


state 244

    (4) function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 . RCURLY

    RCURLY          shift and go to state 249


state 245

    (57) dec22 -> COMMA ID dec22 .

    SEMIC           reduce using rule 57 (dec22 -> COMMA ID dec22 .)


state 246

    (35) expresiones2 -> COMMA expresion expresiones2 .

    SEMIC           reduce using rule 35 (expresiones2 -> COMMA expresion expresiones2 .)


state 247

    (124) llamarfuncion33 -> COMMA expresion llamarfuncion33 .

    RPAREN          reduce using rule 124 (llamarfuncion33 -> COMMA expresion llamarfuncion33 .)


state 248

    (48) ciclo -> FOR ID IN DOT ID bloque .

    IF              reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    PRINT           reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    FOR             reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    RETURN          reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    BUILD           reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    CONDITION       reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    ID              reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    TINT            reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    TBOOL           reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    TFLOAT          reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    RCURLY          reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)
    WHERE           reduce using rule 48 (ciclo -> FOR ID IN DOT ID bloque .)


state 249

    (4) function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY .

    FUNC            reduce using rule 4 (function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY .)
    MODEL           reduce using rule 4 (function -> FUNC type ID LPAREN lparameters RPAREN LCURLY vars data bloque2 RCURLY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 21 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 21 resolved as shift
WARNING: shift/reduce conflict for FOR in state 21 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 21 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 21 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for TINT in state 21 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 21 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 21 resolved as shift
WARNING: shift/reduce conflict for IF in state 40 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 40 resolved as shift
WARNING: shift/reduce conflict for FOR in state 40 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 40 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 40 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 40 resolved as shift
WARNING: shift/reduce conflict for ID in state 40 resolved as shift
WARNING: shift/reduce conflict for TINT in state 40 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 40 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 40 resolved as shift
WARNING: reduce/reduce conflict in state 37 resolved using rule (id -> ID)
WARNING: rejected rule (empty -> <empty>) in state 37
WARNING: reduce/reduce conflict in state 41 resolved using rule (model -> empty)
WARNING: rejected rule (bloque2 -> empty) in state 41
