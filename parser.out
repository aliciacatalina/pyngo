Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    SUM
    WHERE

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model statementblock RCURLY
Rule 2     functions -> function functions
Rule 3     functions -> empty
Rule 4     function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
Rule 5     lparameters -> parameter
Rule 6     lparameters -> parameter parameters
Rule 7     lparameters -> empty
Rule 8     parameters -> COMMA parameters
Rule 9     parameters -> empty
Rule 10    parameter -> vartype ID
Rule 11    vars -> varblock
Rule 12    vars -> empty
Rule 13    varblock -> VARS LCURLY lvars RCURLY
Rule 14    lvars -> listofvars lvars
Rule 15    lvars -> listofvars
Rule 16    lvars -> empty
Rule 17    listofvars -> typedeclaration POINTS listofids SEMIC
Rule 18    typedeclaration -> vartype dimensions
Rule 19    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 20    dimensions -> empty
Rule 21    listofids -> ID lid
Rule 22    lid -> COMMA listofids
Rule 23    lid -> empty
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> ID EQUALS expresiones SEMIC
Rule 28    expresiones -> expresion COMMA expresiones
Rule 29    expresiones -> expresion
Rule 30    expresion -> exp
Rule 31    expresion -> exp LESSTHAN exp
Rule 32    expresion -> exp GREATERTHAN exp
Rule 33    expresion -> exp BETWEEN exp
Rule 34    exp -> term
Rule 35    exp -> term PLUS exp
Rule 36    exp -> term MINUS exp
Rule 37    term -> factor
Rule 38    term -> factor STAR term
Rule 39    term -> factor SLASH term
Rule 40    factor -> PLUS constant
Rule 41    factor -> MINUS constant
Rule 42    factor -> constant
Rule 43    factor -> LPAREN expresion RPAREN
Rule 44    model -> optimize
Rule 45    model -> empty
Rule 46    optimize -> MIN EQUALS statement
Rule 47    optimize -> MAX EQUALS statement
Rule 48    statement -> asign
Rule 49    statement -> expresion
Rule 50    statement -> condition
Rule 51    statement -> write
Rule 52    statement -> optimize
Rule 53    statement -> for
Rule 54    statement -> return
Rule 55    vartype -> TINT
Rule 56    vartype -> TFLOAT
Rule 57    vartype -> TBOOL
Rule 58    constant -> CTEI
Rule 59    constant -> CTEF
Rule 60    constant -> CTESTRING
Rule 61    constant -> CTEBOOL
Rule 62    constant -> id
Rule 63    constant -> functioncall
Rule 64    id -> ID dimensions
Rule 65    functioncall -> ID LPAREN expresion RPAREN
Rule 66    functioncall -> ID LPAREN CTEI RPAREN
Rule 67    functioncall -> ID LPAREN CTEF RPAREN
Rule 68    for -> FOR ID IN DOT ID LCURLY statementblock RCURLY
Rule 69    condition -> IF LPAREN expresion RPAREN statementblock SEMIC
Rule 70    condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
Rule 71    write -> PRINT LPAREN write2 RPAREN SEMIC
Rule 72    write2 -> expresion
Rule 73    write2 -> CTESTRING
Rule 74    write2 -> expresion DOT write2
Rule 75    write2 -> CTESTRING DOT write2
Rule 76    return -> RETURN asign
Rule 77    statementblock -> statement statementblock
Rule 78    statementblock -> statement
Rule 79    statementblock -> empty
Rule 80    empty -> <empty>

Terminals, with rules where they appear

BETWEEN              : 33
COMMA                : 8 22 28
CTEBOOL              : 61
CTEF                 : 59 67
CTEI                 : 58 66
CTESTRING            : 60 73 75
DATA                 : 24
DOT                  : 68 74 75
ELSE                 : 70
EQUALS               : 27 46 47
FOR                  : 68
FUNC                 : 4
GREATERTHAN          : 32
ID                   : 4 10 21 27 64 65 66 67 68 68
IF                   : 69 70
IN                   : 68
LBRACKET             : 19
LCURLY               : 1 4 13 24 68
LESSTHAN             : 31
LPAREN               : 4 43 65 66 67 69 70 71
MAX                  : 47
MIN                  : 46
MINUS                : 36 41
MODEL                : 1
PLUS                 : 35 40
POINTS               : 17
PRINT                : 71
RBRACKET             : 19
RCURLY               : 1 4 13 24 68
RETURN               : 76
RPAREN               : 4 43 65 66 67 69 70 71
SEMIC                : 17 27 69 70 71
SLASH                : 39
STAR                 : 38
SUM                  : 
TBOOL                : 57
TFLOAT               : 56
TINT                 : 55
VARS                 : 13
WHERE                : 
error                : 

Nonterminals, with rules where they appear

asign                : 25 48 76
asignmany            : 24 25
condition            : 50
constant             : 40 41 42
data                 : 1 4
dimensions           : 18 19 64
empty                : 3 7 9 12 16 20 23 26 45 79
exp                  : 30 31 31 32 32 33 33 35 36
expresion            : 19 28 29 43 49 65 69 70 72 74
expresiones          : 27 28
factor               : 37 38 39
for                  : 53
function             : 2
functioncall         : 63
functions            : 1 2
id                   : 62
lid                  : 21
listofids            : 17 22
listofvars           : 14 15
lparameters          : 4
lvars                : 13 14
model                : 1
optimize             : 44 52
parameter            : 5 6
parameters           : 6 8
program              : 0
return               : 54
statement            : 46 47 77 78
statementblock       : 1 4 68 69 70 70 77
term                 : 34 35 36 38 39
typedeclaration      : 17
varblock             : 11
vars                 : 1 4
vartype              : 10 18
write                : 51
write2               : 71 74 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model statementblock RCURLY
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
    (80) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 80 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 2
    program                        shift and go to state 3
    empty                          shift and go to state 5

state 1

    (2) functions -> function . functions
    (2) functions -> . function functions
    (3) functions -> . empty
    (4) function -> . FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY
    (80) empty -> .

    FUNC            shift and go to state 4
    MODEL           reduce using rule 80 (empty -> .)

    function                       shift and go to state 1
    functions                      shift and go to state 6
    empty                          shift and go to state 5

state 2

    (1) program -> functions . MODEL LCURLY vars data model statementblock RCURLY

    MODEL           shift and go to state 7


state 3

    (0) S' -> program .



state 4

    (4) function -> FUNC . ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY

    ID              shift and go to state 8


state 5

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 6

    (2) functions -> function functions .

    MODEL           reduce using rule 2 (functions -> function functions .)


state 7

    (1) program -> functions MODEL . LCURLY vars data model statementblock RCURLY

    LCURLY          shift and go to state 9


state 8

    (4) function -> FUNC ID . LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY

    LPAREN          shift and go to state 10


state 9

    (1) program -> functions MODEL LCURLY . vars data model statementblock RCURLY
    (11) vars -> . varblock
    (12) vars -> . empty
    (13) varblock -> . VARS LCURLY lvars RCURLY
    (80) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 80 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (4) function -> FUNC ID LPAREN . lparameters RPAREN LCURLY vars data statementblock RCURLY
    (5) lparameters -> . parameter
    (6) lparameters -> . parameter parameters
    (7) lparameters -> . empty
    (10) parameter -> . vartype ID
    (80) empty -> .
    (55) vartype -> . TINT
    (56) vartype -> . TFLOAT
    (57) vartype -> . TBOOL

    RPAREN          reduce using rule 80 (empty -> .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

    lparameters                    shift and go to state 16
    vartype                        shift and go to state 19
    parameter                      shift and go to state 17
    empty                          shift and go to state 21

state 11

    (13) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 22


state 12

    (1) program -> functions MODEL LCURLY vars . data model statementblock RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 23

    data                           shift and go to state 24

state 13

    (11) vars -> varblock .

    DATA            reduce using rule 11 (vars -> varblock .)


state 14

    (12) vars -> empty .

    DATA            reduce using rule 12 (vars -> empty .)


state 15

    (56) vartype -> TFLOAT .

    ID              reduce using rule 56 (vartype -> TFLOAT .)
    LBRACKET        reduce using rule 56 (vartype -> TFLOAT .)
    POINTS          reduce using rule 56 (vartype -> TFLOAT .)


state 16

    (4) function -> FUNC ID LPAREN lparameters . RPAREN LCURLY vars data statementblock RCURLY

    RPAREN          shift and go to state 25


state 17

    (5) lparameters -> parameter .
    (6) lparameters -> parameter . parameters
    (8) parameters -> . COMMA parameters
    (9) parameters -> . empty
    (80) empty -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 5 (lparameters -> parameter .)
    RPAREN          reduce using rule 5 (lparameters -> parameter .)
    COMMA           shift and go to state 26

  ! RPAREN          [ reduce using rule 80 (empty -> .) ]

    empty                          shift and go to state 27
    parameters                     shift and go to state 28

state 18

    (55) vartype -> TINT .

    ID              reduce using rule 55 (vartype -> TINT .)
    LBRACKET        reduce using rule 55 (vartype -> TINT .)
    POINTS          reduce using rule 55 (vartype -> TINT .)


state 19

    (10) parameter -> vartype . ID

    ID              shift and go to state 29


state 20

    (57) vartype -> TBOOL .

    ID              reduce using rule 57 (vartype -> TBOOL .)
    LBRACKET        reduce using rule 57 (vartype -> TBOOL .)
    POINTS          reduce using rule 57 (vartype -> TBOOL .)


state 21

    (7) lparameters -> empty .

    RPAREN          reduce using rule 7 (lparameters -> empty .)


state 22

    (13) varblock -> VARS LCURLY . lvars RCURLY
    (14) lvars -> . listofvars lvars
    (15) lvars -> . listofvars
    (16) lvars -> . empty
    (17) listofvars -> . typedeclaration POINTS listofids SEMIC
    (80) empty -> .
    (18) typedeclaration -> . vartype dimensions
    (55) vartype -> . TINT
    (56) vartype -> . TFLOAT
    (57) vartype -> . TBOOL

    RCURLY          reduce using rule 80 (empty -> .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

    listofvars                     shift and go to state 31
    typedeclaration                shift and go to state 30
    lvars                          shift and go to state 32
    vartype                        shift and go to state 33
    empty                          shift and go to state 34

state 23

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 35


state 24

    (1) program -> functions MODEL LCURLY vars data . model statementblock RCURLY
    (44) model -> . optimize
    (45) model -> . empty
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (80) empty -> .

  ! shift/reduce conflict for MIN resolved as shift
  ! shift/reduce conflict for MAX resolved as shift
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    ID              reduce using rule 80 (empty -> .)
    IF              reduce using rule 80 (empty -> .)
    PRINT           reduce using rule 80 (empty -> .)
    FOR             reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    PLUS            reduce using rule 80 (empty -> .)
    MINUS           reduce using rule 80 (empty -> .)
    LPAREN          reduce using rule 80 (empty -> .)
    CTEI            reduce using rule 80 (empty -> .)
    CTEF            reduce using rule 80 (empty -> .)
    CTESTRING       reduce using rule 80 (empty -> .)
    CTEBOOL         reduce using rule 80 (empty -> .)
    RCURLY          reduce using rule 80 (empty -> .)

  ! MIN             [ reduce using rule 80 (empty -> .) ]
  ! MAX             [ reduce using rule 80 (empty -> .) ]

    model                          shift and go to state 39
    optimize                       shift and go to state 38
    empty                          shift and go to state 40

state 25

    (4) function -> FUNC ID LPAREN lparameters RPAREN . LCURLY vars data statementblock RCURLY

    LCURLY          shift and go to state 41


state 26

    (8) parameters -> COMMA . parameters
    (8) parameters -> . COMMA parameters
    (9) parameters -> . empty
    (80) empty -> .

    COMMA           shift and go to state 26
    RPAREN          reduce using rule 80 (empty -> .)

    empty                          shift and go to state 27
    parameters                     shift and go to state 42

state 27

    (9) parameters -> empty .

    RPAREN          reduce using rule 9 (parameters -> empty .)


state 28

    (6) lparameters -> parameter parameters .

    RPAREN          reduce using rule 6 (lparameters -> parameter parameters .)


state 29

    (10) parameter -> vartype ID .

    COMMA           reduce using rule 10 (parameter -> vartype ID .)
    RPAREN          reduce using rule 10 (parameter -> vartype ID .)


state 30

    (17) listofvars -> typedeclaration . POINTS listofids SEMIC

    POINTS          shift and go to state 43


state 31

    (14) lvars -> listofvars . lvars
    (15) lvars -> listofvars .
    (14) lvars -> . listofvars lvars
    (15) lvars -> . listofvars
    (16) lvars -> . empty
    (17) listofvars -> . typedeclaration POINTS listofids SEMIC
    (80) empty -> .
    (18) typedeclaration -> . vartype dimensions
    (55) vartype -> . TINT
    (56) vartype -> . TFLOAT
    (57) vartype -> . TBOOL

  ! reduce/reduce conflict for RCURLY resolved using rule 15 (lvars -> listofvars .)
    RCURLY          reduce using rule 15 (lvars -> listofvars .)
    TINT            shift and go to state 18
    TFLOAT          shift and go to state 15
    TBOOL           shift and go to state 20

  ! RCURLY          [ reduce using rule 80 (empty -> .) ]

    listofvars                     shift and go to state 31
    typedeclaration                shift and go to state 30
    lvars                          shift and go to state 44
    vartype                        shift and go to state 33
    empty                          shift and go to state 34

state 32

    (13) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 45


state 33

    (18) typedeclaration -> vartype . dimensions
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (80) empty -> .

    LBRACKET        shift and go to state 47
    POINTS          reduce using rule 80 (empty -> .)

    dimensions                     shift and go to state 46
    empty                          shift and go to state 48

state 34

    (16) lvars -> empty .

    RCURLY          reduce using rule 16 (lvars -> empty .)


state 35

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . ID EQUALS expresiones SEMIC
    (80) empty -> .

    ID              shift and go to state 51
    RCURLY          reduce using rule 80 (empty -> .)

    asignmany                      shift and go to state 49
    empty                          shift and go to state 52
    asign                          shift and go to state 50

state 36

    (47) optimize -> MAX . EQUALS statement

    EQUALS          shift and go to state 53


state 37

    (46) optimize -> MIN . EQUALS statement

    EQUALS          shift and go to state 54


state 38

    (44) model -> optimize .

    ID              reduce using rule 44 (model -> optimize .)
    IF              reduce using rule 44 (model -> optimize .)
    PRINT           reduce using rule 44 (model -> optimize .)
    MIN             reduce using rule 44 (model -> optimize .)
    MAX             reduce using rule 44 (model -> optimize .)
    FOR             reduce using rule 44 (model -> optimize .)
    RETURN          reduce using rule 44 (model -> optimize .)
    PLUS            reduce using rule 44 (model -> optimize .)
    MINUS           reduce using rule 44 (model -> optimize .)
    LPAREN          reduce using rule 44 (model -> optimize .)
    CTEI            reduce using rule 44 (model -> optimize .)
    CTEF            reduce using rule 44 (model -> optimize .)
    CTESTRING       reduce using rule 44 (model -> optimize .)
    CTEBOOL         reduce using rule 44 (model -> optimize .)
    RCURLY          reduce using rule 44 (model -> optimize .)


state 39

    (1) program -> functions MODEL LCURLY vars data model . statementblock RCURLY
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 80 (empty -> .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    constant                       shift and go to state 66
    id                             shift and go to state 59
    for                            shift and go to state 58
    write                          shift and go to state 61
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    empty                          shift and go to state 67
    expresion                      shift and go to state 68
    return                         shift and go to state 69
    optimize                       shift and go to state 72
    condition                      shift and go to state 73
    statementblock                 shift and go to state 75
    term                           shift and go to state 76
    asign                          shift and go to state 77
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79

state 40

    (45) model -> empty .

    ID              reduce using rule 45 (model -> empty .)
    IF              reduce using rule 45 (model -> empty .)
    PRINT           reduce using rule 45 (model -> empty .)
    MIN             reduce using rule 45 (model -> empty .)
    MAX             reduce using rule 45 (model -> empty .)
    FOR             reduce using rule 45 (model -> empty .)
    RETURN          reduce using rule 45 (model -> empty .)
    PLUS            reduce using rule 45 (model -> empty .)
    MINUS           reduce using rule 45 (model -> empty .)
    LPAREN          reduce using rule 45 (model -> empty .)
    CTEI            reduce using rule 45 (model -> empty .)
    CTEF            reduce using rule 45 (model -> empty .)
    CTESTRING       reduce using rule 45 (model -> empty .)
    CTEBOOL         reduce using rule 45 (model -> empty .)
    RCURLY          reduce using rule 45 (model -> empty .)


state 41

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY . vars data statementblock RCURLY
    (11) vars -> . varblock
    (12) vars -> . empty
    (13) varblock -> . VARS LCURLY lvars RCURLY
    (80) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 80 (empty -> .)

    vars                           shift and go to state 83
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 42

    (8) parameters -> COMMA parameters .

    RPAREN          reduce using rule 8 (parameters -> COMMA parameters .)


state 43

    (17) listofvars -> typedeclaration POINTS . listofids SEMIC
    (21) listofids -> . ID lid

    ID              shift and go to state 85

    listofids                      shift and go to state 84

state 44

    (14) lvars -> listofvars lvars .

    RCURLY          reduce using rule 14 (lvars -> listofvars lvars .)


state 45

    (13) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 13 (varblock -> VARS LCURLY lvars RCURLY .)


state 46

    (18) typedeclaration -> vartype dimensions .

    POINTS          reduce using rule 18 (typedeclaration -> vartype dimensions .)


state 47

    (19) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 87
    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 48

    (20) dimensions -> empty .

    STAR            reduce using rule 20 (dimensions -> empty .)
    SLASH           reduce using rule 20 (dimensions -> empty .)
    PLUS            reduce using rule 20 (dimensions -> empty .)
    MINUS           reduce using rule 20 (dimensions -> empty .)
    LESSTHAN        reduce using rule 20 (dimensions -> empty .)
    GREATERTHAN     reduce using rule 20 (dimensions -> empty .)
    BETWEEN         reduce using rule 20 (dimensions -> empty .)
    ID              reduce using rule 20 (dimensions -> empty .)
    IF              reduce using rule 20 (dimensions -> empty .)
    PRINT           reduce using rule 20 (dimensions -> empty .)
    MIN             reduce using rule 20 (dimensions -> empty .)
    MAX             reduce using rule 20 (dimensions -> empty .)
    FOR             reduce using rule 20 (dimensions -> empty .)
    RETURN          reduce using rule 20 (dimensions -> empty .)
    LPAREN          reduce using rule 20 (dimensions -> empty .)
    CTEI            reduce using rule 20 (dimensions -> empty .)
    CTEF            reduce using rule 20 (dimensions -> empty .)
    CTESTRING       reduce using rule 20 (dimensions -> empty .)
    CTEBOOL         reduce using rule 20 (dimensions -> empty .)
    RCURLY          reduce using rule 20 (dimensions -> empty .)
    SEMIC           reduce using rule 20 (dimensions -> empty .)
    ELSE            reduce using rule 20 (dimensions -> empty .)
    RBRACKET        reduce using rule 20 (dimensions -> empty .)
    RPAREN          reduce using rule 20 (dimensions -> empty .)
    COMMA           reduce using rule 20 (dimensions -> empty .)
    DOT             reduce using rule 20 (dimensions -> empty .)
    POINTS          reduce using rule 20 (dimensions -> empty .)


state 49

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 88


state 50

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . ID EQUALS expresiones SEMIC
    (80) empty -> .

    ID              shift and go to state 51
    RCURLY          reduce using rule 80 (empty -> .)

    asignmany                      shift and go to state 89
    empty                          shift and go to state 52
    asign                          shift and go to state 50

state 51

    (27) asign -> ID . EQUALS expresiones SEMIC

    EQUALS          shift and go to state 90


state 52

    (26) asignmany -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)


state 53

    (47) optimize -> MAX EQUALS . statement
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    expresion                      shift and go to state 68
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    statement                      shift and go to state 91
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 54

    (46) optimize -> MIN EQUALS . statement
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    expresion                      shift and go to state 68
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    statement                      shift and go to state 92
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 55

    (76) return -> RETURN . asign
    (27) asign -> . ID EQUALS expresiones SEMIC

    ID              shift and go to state 51

    asign                          shift and go to state 93

state 56

    (71) write -> PRINT . LPAREN write2 RPAREN SEMIC

    LPAREN          shift and go to state 94


state 57

    (41) factor -> MINUS . constant
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    functioncall                   shift and go to state 65
    constant                       shift and go to state 95
    id                             shift and go to state 59

state 58

    (53) statement -> for .

    ID              reduce using rule 53 (statement -> for .)
    IF              reduce using rule 53 (statement -> for .)
    PRINT           reduce using rule 53 (statement -> for .)
    MIN             reduce using rule 53 (statement -> for .)
    MAX             reduce using rule 53 (statement -> for .)
    FOR             reduce using rule 53 (statement -> for .)
    RETURN          reduce using rule 53 (statement -> for .)
    PLUS            reduce using rule 53 (statement -> for .)
    MINUS           reduce using rule 53 (statement -> for .)
    LPAREN          reduce using rule 53 (statement -> for .)
    CTEI            reduce using rule 53 (statement -> for .)
    CTEF            reduce using rule 53 (statement -> for .)
    CTESTRING       reduce using rule 53 (statement -> for .)
    CTEBOOL         reduce using rule 53 (statement -> for .)
    SEMIC           reduce using rule 53 (statement -> for .)
    ELSE            reduce using rule 53 (statement -> for .)
    RCURLY          reduce using rule 53 (statement -> for .)


state 59

    (62) constant -> id .

    STAR            reduce using rule 62 (constant -> id .)
    SLASH           reduce using rule 62 (constant -> id .)
    PLUS            reduce using rule 62 (constant -> id .)
    MINUS           reduce using rule 62 (constant -> id .)
    LESSTHAN        reduce using rule 62 (constant -> id .)
    GREATERTHAN     reduce using rule 62 (constant -> id .)
    BETWEEN         reduce using rule 62 (constant -> id .)
    ID              reduce using rule 62 (constant -> id .)
    IF              reduce using rule 62 (constant -> id .)
    PRINT           reduce using rule 62 (constant -> id .)
    MIN             reduce using rule 62 (constant -> id .)
    MAX             reduce using rule 62 (constant -> id .)
    FOR             reduce using rule 62 (constant -> id .)
    RETURN          reduce using rule 62 (constant -> id .)
    LPAREN          reduce using rule 62 (constant -> id .)
    CTEI            reduce using rule 62 (constant -> id .)
    CTEF            reduce using rule 62 (constant -> id .)
    CTESTRING       reduce using rule 62 (constant -> id .)
    CTEBOOL         reduce using rule 62 (constant -> id .)
    RCURLY          reduce using rule 62 (constant -> id .)
    SEMIC           reduce using rule 62 (constant -> id .)
    ELSE            reduce using rule 62 (constant -> id .)
    COMMA           reduce using rule 62 (constant -> id .)
    RPAREN          reduce using rule 62 (constant -> id .)
    RBRACKET        reduce using rule 62 (constant -> id .)
    DOT             reduce using rule 62 (constant -> id .)


state 60

    (27) asign -> ID . EQUALS expresiones SEMIC
    (64) id -> ID . dimensions
    (65) functioncall -> ID . LPAREN expresion RPAREN
    (66) functioncall -> ID . LPAREN CTEI RPAREN
    (67) functioncall -> ID . LPAREN CTEF RPAREN
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (80) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUALS          shift and go to state 90
    LPAREN          shift and go to state 97
    LBRACKET        shift and go to state 47
    STAR            reduce using rule 80 (empty -> .)
    SLASH           reduce using rule 80 (empty -> .)
    PLUS            reduce using rule 80 (empty -> .)
    MINUS           reduce using rule 80 (empty -> .)
    LESSTHAN        reduce using rule 80 (empty -> .)
    GREATERTHAN     reduce using rule 80 (empty -> .)
    BETWEEN         reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    IF              reduce using rule 80 (empty -> .)
    PRINT           reduce using rule 80 (empty -> .)
    MIN             reduce using rule 80 (empty -> .)
    MAX             reduce using rule 80 (empty -> .)
    FOR             reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    CTEI            reduce using rule 80 (empty -> .)
    CTEF            reduce using rule 80 (empty -> .)
    CTESTRING       reduce using rule 80 (empty -> .)
    CTEBOOL         reduce using rule 80 (empty -> .)
    RCURLY          reduce using rule 80 (empty -> .)
    SEMIC           reduce using rule 80 (empty -> .)
    ELSE            reduce using rule 80 (empty -> .)

  ! LPAREN          [ reduce using rule 80 (empty -> .) ]

    dimensions                     shift and go to state 96
    empty                          shift and go to state 48

state 61

    (51) statement -> write .

    ID              reduce using rule 51 (statement -> write .)
    IF              reduce using rule 51 (statement -> write .)
    PRINT           reduce using rule 51 (statement -> write .)
    MIN             reduce using rule 51 (statement -> write .)
    MAX             reduce using rule 51 (statement -> write .)
    FOR             reduce using rule 51 (statement -> write .)
    RETURN          reduce using rule 51 (statement -> write .)
    PLUS            reduce using rule 51 (statement -> write .)
    MINUS           reduce using rule 51 (statement -> write .)
    LPAREN          reduce using rule 51 (statement -> write .)
    CTEI            reduce using rule 51 (statement -> write .)
    CTEF            reduce using rule 51 (statement -> write .)
    CTESTRING       reduce using rule 51 (statement -> write .)
    CTEBOOL         reduce using rule 51 (statement -> write .)
    SEMIC           reduce using rule 51 (statement -> write .)
    ELSE            reduce using rule 51 (statement -> write .)
    RCURLY          reduce using rule 51 (statement -> write .)


state 62

    (40) factor -> PLUS . constant
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    functioncall                   shift and go to state 65
    constant                       shift and go to state 98
    id                             shift and go to state 59

state 63

    (77) statementblock -> statement . statementblock
    (78) statementblock -> statement .
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

  ! reduce/reduce conflict for RCURLY resolved using rule 78 (statementblock -> statement .)
  ! reduce/reduce conflict for SEMIC resolved using rule 78 (statementblock -> statement .)
  ! reduce/reduce conflict for ELSE resolved using rule 78 (statementblock -> statement .)
    RCURLY          reduce using rule 78 (statementblock -> statement .)
    SEMIC           reduce using rule 78 (statementblock -> statement .)
    ELSE            reduce using rule 78 (statementblock -> statement .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

  ! RCURLY          [ reduce using rule 80 (empty -> .) ]
  ! SEMIC           [ reduce using rule 80 (empty -> .) ]
  ! ELSE            [ reduce using rule 80 (empty -> .) ]

    statementblock                 shift and go to state 99
    expresion                      shift and go to state 68
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    empty                          shift and go to state 67
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 64

    (37) term -> factor .
    (38) term -> factor . STAR term
    (39) term -> factor . SLASH term

    PLUS            reduce using rule 37 (term -> factor .)
    MINUS           reduce using rule 37 (term -> factor .)
    LESSTHAN        reduce using rule 37 (term -> factor .)
    GREATERTHAN     reduce using rule 37 (term -> factor .)
    BETWEEN         reduce using rule 37 (term -> factor .)
    ID              reduce using rule 37 (term -> factor .)
    IF              reduce using rule 37 (term -> factor .)
    PRINT           reduce using rule 37 (term -> factor .)
    MIN             reduce using rule 37 (term -> factor .)
    MAX             reduce using rule 37 (term -> factor .)
    FOR             reduce using rule 37 (term -> factor .)
    RETURN          reduce using rule 37 (term -> factor .)
    LPAREN          reduce using rule 37 (term -> factor .)
    CTEI            reduce using rule 37 (term -> factor .)
    CTEF            reduce using rule 37 (term -> factor .)
    CTESTRING       reduce using rule 37 (term -> factor .)
    CTEBOOL         reduce using rule 37 (term -> factor .)
    RCURLY          reduce using rule 37 (term -> factor .)
    RBRACKET        reduce using rule 37 (term -> factor .)
    SEMIC           reduce using rule 37 (term -> factor .)
    ELSE            reduce using rule 37 (term -> factor .)
    RPAREN          reduce using rule 37 (term -> factor .)
    COMMA           reduce using rule 37 (term -> factor .)
    DOT             reduce using rule 37 (term -> factor .)
    STAR            shift and go to state 100
    SLASH           shift and go to state 101


state 65

    (63) constant -> functioncall .

    STAR            reduce using rule 63 (constant -> functioncall .)
    SLASH           reduce using rule 63 (constant -> functioncall .)
    PLUS            reduce using rule 63 (constant -> functioncall .)
    MINUS           reduce using rule 63 (constant -> functioncall .)
    LESSTHAN        reduce using rule 63 (constant -> functioncall .)
    GREATERTHAN     reduce using rule 63 (constant -> functioncall .)
    BETWEEN         reduce using rule 63 (constant -> functioncall .)
    ID              reduce using rule 63 (constant -> functioncall .)
    IF              reduce using rule 63 (constant -> functioncall .)
    PRINT           reduce using rule 63 (constant -> functioncall .)
    MIN             reduce using rule 63 (constant -> functioncall .)
    MAX             reduce using rule 63 (constant -> functioncall .)
    FOR             reduce using rule 63 (constant -> functioncall .)
    RETURN          reduce using rule 63 (constant -> functioncall .)
    LPAREN          reduce using rule 63 (constant -> functioncall .)
    CTEI            reduce using rule 63 (constant -> functioncall .)
    CTEF            reduce using rule 63 (constant -> functioncall .)
    CTESTRING       reduce using rule 63 (constant -> functioncall .)
    CTEBOOL         reduce using rule 63 (constant -> functioncall .)
    RCURLY          reduce using rule 63 (constant -> functioncall .)
    SEMIC           reduce using rule 63 (constant -> functioncall .)
    ELSE            reduce using rule 63 (constant -> functioncall .)
    COMMA           reduce using rule 63 (constant -> functioncall .)
    RPAREN          reduce using rule 63 (constant -> functioncall .)
    RBRACKET        reduce using rule 63 (constant -> functioncall .)
    DOT             reduce using rule 63 (constant -> functioncall .)


state 66

    (42) factor -> constant .

    STAR            reduce using rule 42 (factor -> constant .)
    SLASH           reduce using rule 42 (factor -> constant .)
    PLUS            reduce using rule 42 (factor -> constant .)
    MINUS           reduce using rule 42 (factor -> constant .)
    LESSTHAN        reduce using rule 42 (factor -> constant .)
    GREATERTHAN     reduce using rule 42 (factor -> constant .)
    BETWEEN         reduce using rule 42 (factor -> constant .)
    ID              reduce using rule 42 (factor -> constant .)
    IF              reduce using rule 42 (factor -> constant .)
    PRINT           reduce using rule 42 (factor -> constant .)
    MIN             reduce using rule 42 (factor -> constant .)
    MAX             reduce using rule 42 (factor -> constant .)
    FOR             reduce using rule 42 (factor -> constant .)
    RETURN          reduce using rule 42 (factor -> constant .)
    LPAREN          reduce using rule 42 (factor -> constant .)
    CTEI            reduce using rule 42 (factor -> constant .)
    CTEF            reduce using rule 42 (factor -> constant .)
    CTESTRING       reduce using rule 42 (factor -> constant .)
    CTEBOOL         reduce using rule 42 (factor -> constant .)
    RCURLY          reduce using rule 42 (factor -> constant .)
    SEMIC           reduce using rule 42 (factor -> constant .)
    ELSE            reduce using rule 42 (factor -> constant .)
    RBRACKET        reduce using rule 42 (factor -> constant .)
    RPAREN          reduce using rule 42 (factor -> constant .)
    COMMA           reduce using rule 42 (factor -> constant .)
    DOT             reduce using rule 42 (factor -> constant .)


state 67

    (79) statementblock -> empty .

    RCURLY          reduce using rule 79 (statementblock -> empty .)
    SEMIC           reduce using rule 79 (statementblock -> empty .)
    ELSE            reduce using rule 79 (statementblock -> empty .)


state 68

    (49) statement -> expresion .

    ID              reduce using rule 49 (statement -> expresion .)
    IF              reduce using rule 49 (statement -> expresion .)
    PRINT           reduce using rule 49 (statement -> expresion .)
    MIN             reduce using rule 49 (statement -> expresion .)
    MAX             reduce using rule 49 (statement -> expresion .)
    FOR             reduce using rule 49 (statement -> expresion .)
    RETURN          reduce using rule 49 (statement -> expresion .)
    PLUS            reduce using rule 49 (statement -> expresion .)
    MINUS           reduce using rule 49 (statement -> expresion .)
    LPAREN          reduce using rule 49 (statement -> expresion .)
    CTEI            reduce using rule 49 (statement -> expresion .)
    CTEF            reduce using rule 49 (statement -> expresion .)
    CTESTRING       reduce using rule 49 (statement -> expresion .)
    CTEBOOL         reduce using rule 49 (statement -> expresion .)
    SEMIC           reduce using rule 49 (statement -> expresion .)
    ELSE            reduce using rule 49 (statement -> expresion .)
    RCURLY          reduce using rule 49 (statement -> expresion .)


state 69

    (54) statement -> return .

    ID              reduce using rule 54 (statement -> return .)
    IF              reduce using rule 54 (statement -> return .)
    PRINT           reduce using rule 54 (statement -> return .)
    MIN             reduce using rule 54 (statement -> return .)
    MAX             reduce using rule 54 (statement -> return .)
    FOR             reduce using rule 54 (statement -> return .)
    RETURN          reduce using rule 54 (statement -> return .)
    PLUS            reduce using rule 54 (statement -> return .)
    MINUS           reduce using rule 54 (statement -> return .)
    LPAREN          reduce using rule 54 (statement -> return .)
    CTEI            reduce using rule 54 (statement -> return .)
    CTEF            reduce using rule 54 (statement -> return .)
    CTESTRING       reduce using rule 54 (statement -> return .)
    CTEBOOL         reduce using rule 54 (statement -> return .)
    SEMIC           reduce using rule 54 (statement -> return .)
    ELSE            reduce using rule 54 (statement -> return .)
    RCURLY          reduce using rule 54 (statement -> return .)


state 70

    (68) for -> FOR . ID IN DOT ID LCURLY statementblock RCURLY

    ID              shift and go to state 102


state 71

    (43) factor -> LPAREN . expresion RPAREN
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 103
    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 72

    (52) statement -> optimize .

    ID              reduce using rule 52 (statement -> optimize .)
    IF              reduce using rule 52 (statement -> optimize .)
    PRINT           reduce using rule 52 (statement -> optimize .)
    MIN             reduce using rule 52 (statement -> optimize .)
    MAX             reduce using rule 52 (statement -> optimize .)
    FOR             reduce using rule 52 (statement -> optimize .)
    RETURN          reduce using rule 52 (statement -> optimize .)
    PLUS            reduce using rule 52 (statement -> optimize .)
    MINUS           reduce using rule 52 (statement -> optimize .)
    LPAREN          reduce using rule 52 (statement -> optimize .)
    CTEI            reduce using rule 52 (statement -> optimize .)
    CTEF            reduce using rule 52 (statement -> optimize .)
    CTESTRING       reduce using rule 52 (statement -> optimize .)
    CTEBOOL         reduce using rule 52 (statement -> optimize .)
    SEMIC           reduce using rule 52 (statement -> optimize .)
    ELSE            reduce using rule 52 (statement -> optimize .)
    RCURLY          reduce using rule 52 (statement -> optimize .)


state 73

    (50) statement -> condition .

    ID              reduce using rule 50 (statement -> condition .)
    IF              reduce using rule 50 (statement -> condition .)
    PRINT           reduce using rule 50 (statement -> condition .)
    MIN             reduce using rule 50 (statement -> condition .)
    MAX             reduce using rule 50 (statement -> condition .)
    FOR             reduce using rule 50 (statement -> condition .)
    RETURN          reduce using rule 50 (statement -> condition .)
    PLUS            reduce using rule 50 (statement -> condition .)
    MINUS           reduce using rule 50 (statement -> condition .)
    LPAREN          reduce using rule 50 (statement -> condition .)
    CTEI            reduce using rule 50 (statement -> condition .)
    CTEF            reduce using rule 50 (statement -> condition .)
    CTESTRING       reduce using rule 50 (statement -> condition .)
    CTEBOOL         reduce using rule 50 (statement -> condition .)
    SEMIC           reduce using rule 50 (statement -> condition .)
    ELSE            reduce using rule 50 (statement -> condition .)
    RCURLY          reduce using rule 50 (statement -> condition .)


state 74

    (69) condition -> IF . LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> IF . LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC

    LPAREN          shift and go to state 104


state 75

    (1) program -> functions MODEL LCURLY vars data model statementblock . RCURLY

    RCURLY          shift and go to state 105


state 76

    (34) exp -> term .
    (35) exp -> term . PLUS exp
    (36) exp -> term . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LESSTHAN        reduce using rule 34 (exp -> term .)
    GREATERTHAN     reduce using rule 34 (exp -> term .)
    BETWEEN         reduce using rule 34 (exp -> term .)
    ID              reduce using rule 34 (exp -> term .)
    IF              reduce using rule 34 (exp -> term .)
    PRINT           reduce using rule 34 (exp -> term .)
    MIN             reduce using rule 34 (exp -> term .)
    MAX             reduce using rule 34 (exp -> term .)
    FOR             reduce using rule 34 (exp -> term .)
    RETURN          reduce using rule 34 (exp -> term .)
    LPAREN          reduce using rule 34 (exp -> term .)
    CTEI            reduce using rule 34 (exp -> term .)
    CTEF            reduce using rule 34 (exp -> term .)
    CTESTRING       reduce using rule 34 (exp -> term .)
    CTEBOOL         reduce using rule 34 (exp -> term .)
    RCURLY          reduce using rule 34 (exp -> term .)
    SEMIC           reduce using rule 34 (exp -> term .)
    ELSE            reduce using rule 34 (exp -> term .)
    RPAREN          reduce using rule 34 (exp -> term .)
    RBRACKET        reduce using rule 34 (exp -> term .)
    COMMA           reduce using rule 34 (exp -> term .)
    DOT             reduce using rule 34 (exp -> term .)
    PLUS            shift and go to state 106
    MINUS           shift and go to state 107

  ! PLUS            [ reduce using rule 34 (exp -> term .) ]
  ! MINUS           [ reduce using rule 34 (exp -> term .) ]


state 77

    (48) statement -> asign .

    ID              reduce using rule 48 (statement -> asign .)
    IF              reduce using rule 48 (statement -> asign .)
    PRINT           reduce using rule 48 (statement -> asign .)
    MIN             reduce using rule 48 (statement -> asign .)
    MAX             reduce using rule 48 (statement -> asign .)
    FOR             reduce using rule 48 (statement -> asign .)
    RETURN          reduce using rule 48 (statement -> asign .)
    PLUS            reduce using rule 48 (statement -> asign .)
    MINUS           reduce using rule 48 (statement -> asign .)
    LPAREN          reduce using rule 48 (statement -> asign .)
    CTEI            reduce using rule 48 (statement -> asign .)
    CTEF            reduce using rule 48 (statement -> asign .)
    CTESTRING       reduce using rule 48 (statement -> asign .)
    CTEBOOL         reduce using rule 48 (statement -> asign .)
    SEMIC           reduce using rule 48 (statement -> asign .)
    ELSE            reduce using rule 48 (statement -> asign .)
    RCURLY          reduce using rule 48 (statement -> asign .)


state 78

    (59) constant -> CTEF .

    STAR            reduce using rule 59 (constant -> CTEF .)
    SLASH           reduce using rule 59 (constant -> CTEF .)
    PLUS            reduce using rule 59 (constant -> CTEF .)
    MINUS           reduce using rule 59 (constant -> CTEF .)
    LESSTHAN        reduce using rule 59 (constant -> CTEF .)
    GREATERTHAN     reduce using rule 59 (constant -> CTEF .)
    BETWEEN         reduce using rule 59 (constant -> CTEF .)
    ID              reduce using rule 59 (constant -> CTEF .)
    IF              reduce using rule 59 (constant -> CTEF .)
    PRINT           reduce using rule 59 (constant -> CTEF .)
    MIN             reduce using rule 59 (constant -> CTEF .)
    MAX             reduce using rule 59 (constant -> CTEF .)
    FOR             reduce using rule 59 (constant -> CTEF .)
    RETURN          reduce using rule 59 (constant -> CTEF .)
    LPAREN          reduce using rule 59 (constant -> CTEF .)
    CTEI            reduce using rule 59 (constant -> CTEF .)
    CTEF            reduce using rule 59 (constant -> CTEF .)
    CTESTRING       reduce using rule 59 (constant -> CTEF .)
    CTEBOOL         reduce using rule 59 (constant -> CTEF .)
    RCURLY          reduce using rule 59 (constant -> CTEF .)
    SEMIC           reduce using rule 59 (constant -> CTEF .)
    ELSE            reduce using rule 59 (constant -> CTEF .)
    COMMA           reduce using rule 59 (constant -> CTEF .)
    RPAREN          reduce using rule 59 (constant -> CTEF .)
    RBRACKET        reduce using rule 59 (constant -> CTEF .)
    DOT             reduce using rule 59 (constant -> CTEF .)


state 79

    (30) expresion -> exp .
    (31) expresion -> exp . LESSTHAN exp
    (32) expresion -> exp . GREATERTHAN exp
    (33) expresion -> exp . BETWEEN exp

    RPAREN          reduce using rule 30 (expresion -> exp .)
    COMMA           reduce using rule 30 (expresion -> exp .)
    SEMIC           reduce using rule 30 (expresion -> exp .)
    RBRACKET        reduce using rule 30 (expresion -> exp .)
    ID              reduce using rule 30 (expresion -> exp .)
    IF              reduce using rule 30 (expresion -> exp .)
    PRINT           reduce using rule 30 (expresion -> exp .)
    MIN             reduce using rule 30 (expresion -> exp .)
    MAX             reduce using rule 30 (expresion -> exp .)
    FOR             reduce using rule 30 (expresion -> exp .)
    RETURN          reduce using rule 30 (expresion -> exp .)
    PLUS            reduce using rule 30 (expresion -> exp .)
    MINUS           reduce using rule 30 (expresion -> exp .)
    LPAREN          reduce using rule 30 (expresion -> exp .)
    CTEI            reduce using rule 30 (expresion -> exp .)
    CTEF            reduce using rule 30 (expresion -> exp .)
    CTESTRING       reduce using rule 30 (expresion -> exp .)
    CTEBOOL         reduce using rule 30 (expresion -> exp .)
    RCURLY          reduce using rule 30 (expresion -> exp .)
    ELSE            reduce using rule 30 (expresion -> exp .)
    DOT             reduce using rule 30 (expresion -> exp .)
    LESSTHAN        shift and go to state 108
    GREATERTHAN     shift and go to state 109
    BETWEEN         shift and go to state 110


state 80

    (61) constant -> CTEBOOL .

    STAR            reduce using rule 61 (constant -> CTEBOOL .)
    SLASH           reduce using rule 61 (constant -> CTEBOOL .)
    PLUS            reduce using rule 61 (constant -> CTEBOOL .)
    MINUS           reduce using rule 61 (constant -> CTEBOOL .)
    LESSTHAN        reduce using rule 61 (constant -> CTEBOOL .)
    GREATERTHAN     reduce using rule 61 (constant -> CTEBOOL .)
    BETWEEN         reduce using rule 61 (constant -> CTEBOOL .)
    ID              reduce using rule 61 (constant -> CTEBOOL .)
    IF              reduce using rule 61 (constant -> CTEBOOL .)
    PRINT           reduce using rule 61 (constant -> CTEBOOL .)
    MIN             reduce using rule 61 (constant -> CTEBOOL .)
    MAX             reduce using rule 61 (constant -> CTEBOOL .)
    FOR             reduce using rule 61 (constant -> CTEBOOL .)
    RETURN          reduce using rule 61 (constant -> CTEBOOL .)
    LPAREN          reduce using rule 61 (constant -> CTEBOOL .)
    CTEI            reduce using rule 61 (constant -> CTEBOOL .)
    CTEF            reduce using rule 61 (constant -> CTEBOOL .)
    CTESTRING       reduce using rule 61 (constant -> CTEBOOL .)
    CTEBOOL         reduce using rule 61 (constant -> CTEBOOL .)
    RCURLY          reduce using rule 61 (constant -> CTEBOOL .)
    SEMIC           reduce using rule 61 (constant -> CTEBOOL .)
    ELSE            reduce using rule 61 (constant -> CTEBOOL .)
    COMMA           reduce using rule 61 (constant -> CTEBOOL .)
    RPAREN          reduce using rule 61 (constant -> CTEBOOL .)
    RBRACKET        reduce using rule 61 (constant -> CTEBOOL .)
    DOT             reduce using rule 61 (constant -> CTEBOOL .)


state 81

    (58) constant -> CTEI .

    STAR            reduce using rule 58 (constant -> CTEI .)
    SLASH           reduce using rule 58 (constant -> CTEI .)
    PLUS            reduce using rule 58 (constant -> CTEI .)
    MINUS           reduce using rule 58 (constant -> CTEI .)
    LESSTHAN        reduce using rule 58 (constant -> CTEI .)
    GREATERTHAN     reduce using rule 58 (constant -> CTEI .)
    BETWEEN         reduce using rule 58 (constant -> CTEI .)
    ID              reduce using rule 58 (constant -> CTEI .)
    IF              reduce using rule 58 (constant -> CTEI .)
    PRINT           reduce using rule 58 (constant -> CTEI .)
    MIN             reduce using rule 58 (constant -> CTEI .)
    MAX             reduce using rule 58 (constant -> CTEI .)
    FOR             reduce using rule 58 (constant -> CTEI .)
    RETURN          reduce using rule 58 (constant -> CTEI .)
    LPAREN          reduce using rule 58 (constant -> CTEI .)
    CTEI            reduce using rule 58 (constant -> CTEI .)
    CTEF            reduce using rule 58 (constant -> CTEI .)
    CTESTRING       reduce using rule 58 (constant -> CTEI .)
    CTEBOOL         reduce using rule 58 (constant -> CTEI .)
    RCURLY          reduce using rule 58 (constant -> CTEI .)
    SEMIC           reduce using rule 58 (constant -> CTEI .)
    ELSE            reduce using rule 58 (constant -> CTEI .)
    COMMA           reduce using rule 58 (constant -> CTEI .)
    RPAREN          reduce using rule 58 (constant -> CTEI .)
    RBRACKET        reduce using rule 58 (constant -> CTEI .)
    DOT             reduce using rule 58 (constant -> CTEI .)


state 82

    (60) constant -> CTESTRING .

    STAR            reduce using rule 60 (constant -> CTESTRING .)
    SLASH           reduce using rule 60 (constant -> CTESTRING .)
    PLUS            reduce using rule 60 (constant -> CTESTRING .)
    MINUS           reduce using rule 60 (constant -> CTESTRING .)
    LESSTHAN        reduce using rule 60 (constant -> CTESTRING .)
    GREATERTHAN     reduce using rule 60 (constant -> CTESTRING .)
    BETWEEN         reduce using rule 60 (constant -> CTESTRING .)
    ID              reduce using rule 60 (constant -> CTESTRING .)
    IF              reduce using rule 60 (constant -> CTESTRING .)
    PRINT           reduce using rule 60 (constant -> CTESTRING .)
    MIN             reduce using rule 60 (constant -> CTESTRING .)
    MAX             reduce using rule 60 (constant -> CTESTRING .)
    FOR             reduce using rule 60 (constant -> CTESTRING .)
    RETURN          reduce using rule 60 (constant -> CTESTRING .)
    LPAREN          reduce using rule 60 (constant -> CTESTRING .)
    CTEI            reduce using rule 60 (constant -> CTESTRING .)
    CTEF            reduce using rule 60 (constant -> CTESTRING .)
    CTESTRING       reduce using rule 60 (constant -> CTESTRING .)
    CTEBOOL         reduce using rule 60 (constant -> CTESTRING .)
    RCURLY          reduce using rule 60 (constant -> CTESTRING .)
    SEMIC           reduce using rule 60 (constant -> CTESTRING .)
    ELSE            reduce using rule 60 (constant -> CTESTRING .)
    COMMA           reduce using rule 60 (constant -> CTESTRING .)
    RPAREN          reduce using rule 60 (constant -> CTESTRING .)
    RBRACKET        reduce using rule 60 (constant -> CTESTRING .)
    DOT             reduce using rule 60 (constant -> CTESTRING .)


state 83

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars . data statementblock RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 23

    data                           shift and go to state 111

state 84

    (17) listofvars -> typedeclaration POINTS listofids . SEMIC

    SEMIC           shift and go to state 112


state 85

    (21) listofids -> ID . lid
    (22) lid -> . COMMA listofids
    (23) lid -> . empty
    (80) empty -> .

    COMMA           shift and go to state 115
    SEMIC           reduce using rule 80 (empty -> .)

    lid                            shift and go to state 113
    empty                          shift and go to state 114

state 86

    (64) id -> ID . dimensions
    (65) functioncall -> ID . LPAREN expresion RPAREN
    (66) functioncall -> ID . LPAREN CTEI RPAREN
    (67) functioncall -> ID . LPAREN CTEF RPAREN
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (80) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 97
    LBRACKET        shift and go to state 47
    STAR            reduce using rule 80 (empty -> .)
    SLASH           reduce using rule 80 (empty -> .)
    PLUS            reduce using rule 80 (empty -> .)
    MINUS           reduce using rule 80 (empty -> .)
    LESSTHAN        reduce using rule 80 (empty -> .)
    GREATERTHAN     reduce using rule 80 (empty -> .)
    BETWEEN         reduce using rule 80 (empty -> .)
    RBRACKET        reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    IF              reduce using rule 80 (empty -> .)
    PRINT           reduce using rule 80 (empty -> .)
    MIN             reduce using rule 80 (empty -> .)
    MAX             reduce using rule 80 (empty -> .)
    FOR             reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    CTEI            reduce using rule 80 (empty -> .)
    CTEF            reduce using rule 80 (empty -> .)
    CTESTRING       reduce using rule 80 (empty -> .)
    CTEBOOL         reduce using rule 80 (empty -> .)
    RCURLY          reduce using rule 80 (empty -> .)
    SEMIC           reduce using rule 80 (empty -> .)
    ELSE            reduce using rule 80 (empty -> .)
    RPAREN          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    DOT             reduce using rule 80 (empty -> .)

  ! LPAREN          [ reduce using rule 80 (empty -> .) ]

    dimensions                     shift and go to state 96
    empty                          shift and go to state 48

state 87

    (19) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 116


state 88

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PLUS            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MINUS           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    LPAREN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEI            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEF            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTESTRING       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEBOOL         reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 89

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 90

    (27) asign -> ID EQUALS . expresiones SEMIC
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 118
    expresiones                    shift and go to state 117
    constant                       shift and go to state 66
    term                           shift and go to state 76
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 91

    (47) optimize -> MAX EQUALS statement .

    ID              reduce using rule 47 (optimize -> MAX EQUALS statement .)
    IF              reduce using rule 47 (optimize -> MAX EQUALS statement .)
    PRINT           reduce using rule 47 (optimize -> MAX EQUALS statement .)
    MIN             reduce using rule 47 (optimize -> MAX EQUALS statement .)
    MAX             reduce using rule 47 (optimize -> MAX EQUALS statement .)
    FOR             reduce using rule 47 (optimize -> MAX EQUALS statement .)
    RETURN          reduce using rule 47 (optimize -> MAX EQUALS statement .)
    PLUS            reduce using rule 47 (optimize -> MAX EQUALS statement .)
    MINUS           reduce using rule 47 (optimize -> MAX EQUALS statement .)
    LPAREN          reduce using rule 47 (optimize -> MAX EQUALS statement .)
    CTEI            reduce using rule 47 (optimize -> MAX EQUALS statement .)
    CTEF            reduce using rule 47 (optimize -> MAX EQUALS statement .)
    CTESTRING       reduce using rule 47 (optimize -> MAX EQUALS statement .)
    CTEBOOL         reduce using rule 47 (optimize -> MAX EQUALS statement .)
    RCURLY          reduce using rule 47 (optimize -> MAX EQUALS statement .)
    SEMIC           reduce using rule 47 (optimize -> MAX EQUALS statement .)
    ELSE            reduce using rule 47 (optimize -> MAX EQUALS statement .)


state 92

    (46) optimize -> MIN EQUALS statement .

    ID              reduce using rule 46 (optimize -> MIN EQUALS statement .)
    IF              reduce using rule 46 (optimize -> MIN EQUALS statement .)
    PRINT           reduce using rule 46 (optimize -> MIN EQUALS statement .)
    MIN             reduce using rule 46 (optimize -> MIN EQUALS statement .)
    MAX             reduce using rule 46 (optimize -> MIN EQUALS statement .)
    FOR             reduce using rule 46 (optimize -> MIN EQUALS statement .)
    RETURN          reduce using rule 46 (optimize -> MIN EQUALS statement .)
    PLUS            reduce using rule 46 (optimize -> MIN EQUALS statement .)
    MINUS           reduce using rule 46 (optimize -> MIN EQUALS statement .)
    LPAREN          reduce using rule 46 (optimize -> MIN EQUALS statement .)
    CTEI            reduce using rule 46 (optimize -> MIN EQUALS statement .)
    CTEF            reduce using rule 46 (optimize -> MIN EQUALS statement .)
    CTESTRING       reduce using rule 46 (optimize -> MIN EQUALS statement .)
    CTEBOOL         reduce using rule 46 (optimize -> MIN EQUALS statement .)
    RCURLY          reduce using rule 46 (optimize -> MIN EQUALS statement .)
    SEMIC           reduce using rule 46 (optimize -> MIN EQUALS statement .)
    ELSE            reduce using rule 46 (optimize -> MIN EQUALS statement .)


state 93

    (76) return -> RETURN asign .

    ID              reduce using rule 76 (return -> RETURN asign .)
    IF              reduce using rule 76 (return -> RETURN asign .)
    PRINT           reduce using rule 76 (return -> RETURN asign .)
    MIN             reduce using rule 76 (return -> RETURN asign .)
    MAX             reduce using rule 76 (return -> RETURN asign .)
    FOR             reduce using rule 76 (return -> RETURN asign .)
    RETURN          reduce using rule 76 (return -> RETURN asign .)
    PLUS            reduce using rule 76 (return -> RETURN asign .)
    MINUS           reduce using rule 76 (return -> RETURN asign .)
    LPAREN          reduce using rule 76 (return -> RETURN asign .)
    CTEI            reduce using rule 76 (return -> RETURN asign .)
    CTEF            reduce using rule 76 (return -> RETURN asign .)
    CTESTRING       reduce using rule 76 (return -> RETURN asign .)
    CTEBOOL         reduce using rule 76 (return -> RETURN asign .)
    SEMIC           reduce using rule 76 (return -> RETURN asign .)
    ELSE            reduce using rule 76 (return -> RETURN asign .)
    RCURLY          reduce using rule 76 (return -> RETURN asign .)


state 94

    (71) write -> PRINT LPAREN . write2 RPAREN SEMIC
    (72) write2 -> . expresion
    (73) write2 -> . CTESTRING
    (74) write2 -> . expresion DOT write2
    (75) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 119
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 120
    term                           shift and go to state 76
    constant                       shift and go to state 66
    write2                         shift and go to state 121
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 95

    (41) factor -> MINUS constant .

    STAR            reduce using rule 41 (factor -> MINUS constant .)
    SLASH           reduce using rule 41 (factor -> MINUS constant .)
    PLUS            reduce using rule 41 (factor -> MINUS constant .)
    MINUS           reduce using rule 41 (factor -> MINUS constant .)
    LESSTHAN        reduce using rule 41 (factor -> MINUS constant .)
    GREATERTHAN     reduce using rule 41 (factor -> MINUS constant .)
    BETWEEN         reduce using rule 41 (factor -> MINUS constant .)
    ID              reduce using rule 41 (factor -> MINUS constant .)
    IF              reduce using rule 41 (factor -> MINUS constant .)
    PRINT           reduce using rule 41 (factor -> MINUS constant .)
    MIN             reduce using rule 41 (factor -> MINUS constant .)
    MAX             reduce using rule 41 (factor -> MINUS constant .)
    FOR             reduce using rule 41 (factor -> MINUS constant .)
    RETURN          reduce using rule 41 (factor -> MINUS constant .)
    LPAREN          reduce using rule 41 (factor -> MINUS constant .)
    CTEI            reduce using rule 41 (factor -> MINUS constant .)
    CTEF            reduce using rule 41 (factor -> MINUS constant .)
    CTESTRING       reduce using rule 41 (factor -> MINUS constant .)
    CTEBOOL         reduce using rule 41 (factor -> MINUS constant .)
    RCURLY          reduce using rule 41 (factor -> MINUS constant .)
    SEMIC           reduce using rule 41 (factor -> MINUS constant .)
    ELSE            reduce using rule 41 (factor -> MINUS constant .)
    RBRACKET        reduce using rule 41 (factor -> MINUS constant .)
    RPAREN          reduce using rule 41 (factor -> MINUS constant .)
    COMMA           reduce using rule 41 (factor -> MINUS constant .)
    DOT             reduce using rule 41 (factor -> MINUS constant .)


state 96

    (64) id -> ID dimensions .

    STAR            reduce using rule 64 (id -> ID dimensions .)
    SLASH           reduce using rule 64 (id -> ID dimensions .)
    PLUS            reduce using rule 64 (id -> ID dimensions .)
    MINUS           reduce using rule 64 (id -> ID dimensions .)
    LESSTHAN        reduce using rule 64 (id -> ID dimensions .)
    GREATERTHAN     reduce using rule 64 (id -> ID dimensions .)
    BETWEEN         reduce using rule 64 (id -> ID dimensions .)
    ID              reduce using rule 64 (id -> ID dimensions .)
    IF              reduce using rule 64 (id -> ID dimensions .)
    PRINT           reduce using rule 64 (id -> ID dimensions .)
    MIN             reduce using rule 64 (id -> ID dimensions .)
    MAX             reduce using rule 64 (id -> ID dimensions .)
    FOR             reduce using rule 64 (id -> ID dimensions .)
    RETURN          reduce using rule 64 (id -> ID dimensions .)
    LPAREN          reduce using rule 64 (id -> ID dimensions .)
    CTEI            reduce using rule 64 (id -> ID dimensions .)
    CTEF            reduce using rule 64 (id -> ID dimensions .)
    CTESTRING       reduce using rule 64 (id -> ID dimensions .)
    CTEBOOL         reduce using rule 64 (id -> ID dimensions .)
    RCURLY          reduce using rule 64 (id -> ID dimensions .)
    SEMIC           reduce using rule 64 (id -> ID dimensions .)
    ELSE            reduce using rule 64 (id -> ID dimensions .)
    RPAREN          reduce using rule 64 (id -> ID dimensions .)
    RBRACKET        reduce using rule 64 (id -> ID dimensions .)
    COMMA           reduce using rule 64 (id -> ID dimensions .)
    DOT             reduce using rule 64 (id -> ID dimensions .)


state 97

    (65) functioncall -> ID LPAREN . expresion RPAREN
    (66) functioncall -> ID LPAREN . CTEI RPAREN
    (67) functioncall -> ID LPAREN . CTEF RPAREN
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 124
    CTEF            shift and go to state 122
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 123
    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 98

    (40) factor -> PLUS constant .

    STAR            reduce using rule 40 (factor -> PLUS constant .)
    SLASH           reduce using rule 40 (factor -> PLUS constant .)
    PLUS            reduce using rule 40 (factor -> PLUS constant .)
    MINUS           reduce using rule 40 (factor -> PLUS constant .)
    LESSTHAN        reduce using rule 40 (factor -> PLUS constant .)
    GREATERTHAN     reduce using rule 40 (factor -> PLUS constant .)
    BETWEEN         reduce using rule 40 (factor -> PLUS constant .)
    ID              reduce using rule 40 (factor -> PLUS constant .)
    IF              reduce using rule 40 (factor -> PLUS constant .)
    PRINT           reduce using rule 40 (factor -> PLUS constant .)
    MIN             reduce using rule 40 (factor -> PLUS constant .)
    MAX             reduce using rule 40 (factor -> PLUS constant .)
    FOR             reduce using rule 40 (factor -> PLUS constant .)
    RETURN          reduce using rule 40 (factor -> PLUS constant .)
    LPAREN          reduce using rule 40 (factor -> PLUS constant .)
    CTEI            reduce using rule 40 (factor -> PLUS constant .)
    CTEF            reduce using rule 40 (factor -> PLUS constant .)
    CTESTRING       reduce using rule 40 (factor -> PLUS constant .)
    CTEBOOL         reduce using rule 40 (factor -> PLUS constant .)
    RCURLY          reduce using rule 40 (factor -> PLUS constant .)
    SEMIC           reduce using rule 40 (factor -> PLUS constant .)
    ELSE            reduce using rule 40 (factor -> PLUS constant .)
    RBRACKET        reduce using rule 40 (factor -> PLUS constant .)
    RPAREN          reduce using rule 40 (factor -> PLUS constant .)
    COMMA           reduce using rule 40 (factor -> PLUS constant .)
    DOT             reduce using rule 40 (factor -> PLUS constant .)


state 99

    (77) statementblock -> statement statementblock .

    RCURLY          reduce using rule 77 (statementblock -> statement statementblock .)
    SEMIC           reduce using rule 77 (statementblock -> statement statementblock .)
    ELSE            reduce using rule 77 (statementblock -> statement statementblock .)


state 100

    (38) term -> factor STAR . term
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 125
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 101

    (39) term -> factor SLASH . term
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 126
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 102

    (68) for -> FOR ID . IN DOT ID LCURLY statementblock RCURLY

    IN              shift and go to state 127


state 103

    (43) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 128


state 104

    (69) condition -> IF LPAREN . expresion RPAREN statementblock SEMIC
    (70) condition -> IF LPAREN . expresion RPAREN statementblock ELSE statementblock SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 129
    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 105

    (1) program -> functions MODEL LCURLY vars data model statementblock RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model statementblock RCURLY .)


state 106

    (35) exp -> term PLUS . exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 130
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 107

    (36) exp -> term MINUS . exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 131
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 108

    (31) expresion -> exp LESSTHAN . exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 132
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 109

    (32) expresion -> exp GREATERTHAN . exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 133
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 110

    (33) expresion -> exp BETWEEN . exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    term                           shift and go to state 76
    constant                       shift and go to state 66
    functioncall                   shift and go to state 65
    exp                            shift and go to state 134
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 111

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data . statementblock RCURLY
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 80 (empty -> .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    constant                       shift and go to state 66
    id                             shift and go to state 59
    for                            shift and go to state 58
    write                          shift and go to state 61
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    empty                          shift and go to state 67
    expresion                      shift and go to state 68
    return                         shift and go to state 69
    optimize                       shift and go to state 72
    condition                      shift and go to state 73
    statementblock                 shift and go to state 135
    term                           shift and go to state 76
    asign                          shift and go to state 77
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79

state 112

    (17) listofvars -> typedeclaration POINTS listofids SEMIC .

    TINT            reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    TFLOAT          reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    TBOOL           reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)
    RCURLY          reduce using rule 17 (listofvars -> typedeclaration POINTS listofids SEMIC .)


state 113

    (21) listofids -> ID lid .

    SEMIC           reduce using rule 21 (listofids -> ID lid .)


state 114

    (23) lid -> empty .

    SEMIC           reduce using rule 23 (lid -> empty .)


state 115

    (22) lid -> COMMA . listofids
    (21) listofids -> . ID lid

    ID              shift and go to state 85

    listofids                      shift and go to state 136

state 116

    (19) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (19) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (20) dimensions -> . empty
    (80) empty -> .

    LBRACKET        shift and go to state 47
    POINTS          reduce using rule 80 (empty -> .)
    STAR            reduce using rule 80 (empty -> .)
    SLASH           reduce using rule 80 (empty -> .)
    PLUS            reduce using rule 80 (empty -> .)
    MINUS           reduce using rule 80 (empty -> .)
    LESSTHAN        reduce using rule 80 (empty -> .)
    GREATERTHAN     reduce using rule 80 (empty -> .)
    BETWEEN         reduce using rule 80 (empty -> .)
    ID              reduce using rule 80 (empty -> .)
    IF              reduce using rule 80 (empty -> .)
    PRINT           reduce using rule 80 (empty -> .)
    MIN             reduce using rule 80 (empty -> .)
    MAX             reduce using rule 80 (empty -> .)
    FOR             reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    LPAREN          reduce using rule 80 (empty -> .)
    CTEI            reduce using rule 80 (empty -> .)
    CTEF            reduce using rule 80 (empty -> .)
    CTESTRING       reduce using rule 80 (empty -> .)
    CTEBOOL         reduce using rule 80 (empty -> .)
    RCURLY          reduce using rule 80 (empty -> .)
    SEMIC           reduce using rule 80 (empty -> .)
    ELSE            reduce using rule 80 (empty -> .)
    RBRACKET        reduce using rule 80 (empty -> .)
    RPAREN          reduce using rule 80 (empty -> .)
    COMMA           reduce using rule 80 (empty -> .)
    DOT             reduce using rule 80 (empty -> .)

    dimensions                     shift and go to state 137
    empty                          shift and go to state 48

state 117

    (27) asign -> ID EQUALS expresiones . SEMIC

    SEMIC           shift and go to state 138


state 118

    (28) expresiones -> expresion . COMMA expresiones
    (29) expresiones -> expresion .

    COMMA           shift and go to state 139
    SEMIC           reduce using rule 29 (expresiones -> expresion .)


state 119

    (73) write2 -> CTESTRING .
    (75) write2 -> CTESTRING . DOT write2
    (60) constant -> CTESTRING .

  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (constant -> CTESTRING .)
    DOT             shift and go to state 140
    STAR            reduce using rule 60 (constant -> CTESTRING .)
    SLASH           reduce using rule 60 (constant -> CTESTRING .)
    PLUS            reduce using rule 60 (constant -> CTESTRING .)
    MINUS           reduce using rule 60 (constant -> CTESTRING .)
    LESSTHAN        reduce using rule 60 (constant -> CTESTRING .)
    GREATERTHAN     reduce using rule 60 (constant -> CTESTRING .)
    BETWEEN         reduce using rule 60 (constant -> CTESTRING .)
    RPAREN          reduce using rule 60 (constant -> CTESTRING .)

  ! RPAREN          [ reduce using rule 73 (write2 -> CTESTRING .) ]
  ! DOT             [ reduce using rule 60 (constant -> CTESTRING .) ]


state 120

    (72) write2 -> expresion .
    (74) write2 -> expresion . DOT write2

    RPAREN          reduce using rule 72 (write2 -> expresion .)
    DOT             shift and go to state 141


state 121

    (71) write -> PRINT LPAREN write2 . RPAREN SEMIC

    RPAREN          shift and go to state 142


state 122

    (67) functioncall -> ID LPAREN CTEF . RPAREN
    (59) constant -> CTEF .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 143
    STAR            reduce using rule 59 (constant -> CTEF .)
    SLASH           reduce using rule 59 (constant -> CTEF .)
    PLUS            reduce using rule 59 (constant -> CTEF .)
    MINUS           reduce using rule 59 (constant -> CTEF .)
    LESSTHAN        reduce using rule 59 (constant -> CTEF .)
    GREATERTHAN     reduce using rule 59 (constant -> CTEF .)
    BETWEEN         reduce using rule 59 (constant -> CTEF .)

  ! RPAREN          [ reduce using rule 59 (constant -> CTEF .) ]


state 123

    (65) functioncall -> ID LPAREN expresion . RPAREN

    RPAREN          shift and go to state 144


state 124

    (66) functioncall -> ID LPAREN CTEI . RPAREN
    (58) constant -> CTEI .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 145
    STAR            reduce using rule 58 (constant -> CTEI .)
    SLASH           reduce using rule 58 (constant -> CTEI .)
    PLUS            reduce using rule 58 (constant -> CTEI .)
    MINUS           reduce using rule 58 (constant -> CTEI .)
    LESSTHAN        reduce using rule 58 (constant -> CTEI .)
    GREATERTHAN     reduce using rule 58 (constant -> CTEI .)
    BETWEEN         reduce using rule 58 (constant -> CTEI .)

  ! RPAREN          [ reduce using rule 58 (constant -> CTEI .) ]


state 125

    (38) term -> factor STAR term .

    PLUS            reduce using rule 38 (term -> factor STAR term .)
    MINUS           reduce using rule 38 (term -> factor STAR term .)
    LESSTHAN        reduce using rule 38 (term -> factor STAR term .)
    GREATERTHAN     reduce using rule 38 (term -> factor STAR term .)
    BETWEEN         reduce using rule 38 (term -> factor STAR term .)
    ID              reduce using rule 38 (term -> factor STAR term .)
    IF              reduce using rule 38 (term -> factor STAR term .)
    PRINT           reduce using rule 38 (term -> factor STAR term .)
    MIN             reduce using rule 38 (term -> factor STAR term .)
    MAX             reduce using rule 38 (term -> factor STAR term .)
    FOR             reduce using rule 38 (term -> factor STAR term .)
    RETURN          reduce using rule 38 (term -> factor STAR term .)
    LPAREN          reduce using rule 38 (term -> factor STAR term .)
    CTEI            reduce using rule 38 (term -> factor STAR term .)
    CTEF            reduce using rule 38 (term -> factor STAR term .)
    CTESTRING       reduce using rule 38 (term -> factor STAR term .)
    CTEBOOL         reduce using rule 38 (term -> factor STAR term .)
    RCURLY          reduce using rule 38 (term -> factor STAR term .)
    RBRACKET        reduce using rule 38 (term -> factor STAR term .)
    SEMIC           reduce using rule 38 (term -> factor STAR term .)
    ELSE            reduce using rule 38 (term -> factor STAR term .)
    RPAREN          reduce using rule 38 (term -> factor STAR term .)
    COMMA           reduce using rule 38 (term -> factor STAR term .)
    DOT             reduce using rule 38 (term -> factor STAR term .)


state 126

    (39) term -> factor SLASH term .

    PLUS            reduce using rule 39 (term -> factor SLASH term .)
    MINUS           reduce using rule 39 (term -> factor SLASH term .)
    LESSTHAN        reduce using rule 39 (term -> factor SLASH term .)
    GREATERTHAN     reduce using rule 39 (term -> factor SLASH term .)
    BETWEEN         reduce using rule 39 (term -> factor SLASH term .)
    ID              reduce using rule 39 (term -> factor SLASH term .)
    IF              reduce using rule 39 (term -> factor SLASH term .)
    PRINT           reduce using rule 39 (term -> factor SLASH term .)
    MIN             reduce using rule 39 (term -> factor SLASH term .)
    MAX             reduce using rule 39 (term -> factor SLASH term .)
    FOR             reduce using rule 39 (term -> factor SLASH term .)
    RETURN          reduce using rule 39 (term -> factor SLASH term .)
    LPAREN          reduce using rule 39 (term -> factor SLASH term .)
    CTEI            reduce using rule 39 (term -> factor SLASH term .)
    CTEF            reduce using rule 39 (term -> factor SLASH term .)
    CTESTRING       reduce using rule 39 (term -> factor SLASH term .)
    CTEBOOL         reduce using rule 39 (term -> factor SLASH term .)
    RCURLY          reduce using rule 39 (term -> factor SLASH term .)
    RBRACKET        reduce using rule 39 (term -> factor SLASH term .)
    SEMIC           reduce using rule 39 (term -> factor SLASH term .)
    ELSE            reduce using rule 39 (term -> factor SLASH term .)
    RPAREN          reduce using rule 39 (term -> factor SLASH term .)
    COMMA           reduce using rule 39 (term -> factor SLASH term .)
    DOT             reduce using rule 39 (term -> factor SLASH term .)


state 127

    (68) for -> FOR ID IN . DOT ID LCURLY statementblock RCURLY

    DOT             shift and go to state 146


state 128

    (43) factor -> LPAREN expresion RPAREN .

    STAR            reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    MIN             reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    MAX             reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    CTESTRING       reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    CTEBOOL         reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 43 (factor -> LPAREN expresion RPAREN .)
    DOT             reduce using rule 43 (factor -> LPAREN expresion RPAREN .)


state 129

    (69) condition -> IF LPAREN expresion . RPAREN statementblock SEMIC
    (70) condition -> IF LPAREN expresion . RPAREN statementblock ELSE statementblock SEMIC

    RPAREN          shift and go to state 147


state 130

    (35) exp -> term PLUS exp .

    LESSTHAN        reduce using rule 35 (exp -> term PLUS exp .)
    GREATERTHAN     reduce using rule 35 (exp -> term PLUS exp .)
    BETWEEN         reduce using rule 35 (exp -> term PLUS exp .)
    ID              reduce using rule 35 (exp -> term PLUS exp .)
    IF              reduce using rule 35 (exp -> term PLUS exp .)
    PRINT           reduce using rule 35 (exp -> term PLUS exp .)
    MIN             reduce using rule 35 (exp -> term PLUS exp .)
    MAX             reduce using rule 35 (exp -> term PLUS exp .)
    FOR             reduce using rule 35 (exp -> term PLUS exp .)
    RETURN          reduce using rule 35 (exp -> term PLUS exp .)
    PLUS            reduce using rule 35 (exp -> term PLUS exp .)
    MINUS           reduce using rule 35 (exp -> term PLUS exp .)
    LPAREN          reduce using rule 35 (exp -> term PLUS exp .)
    CTEI            reduce using rule 35 (exp -> term PLUS exp .)
    CTEF            reduce using rule 35 (exp -> term PLUS exp .)
    CTESTRING       reduce using rule 35 (exp -> term PLUS exp .)
    CTEBOOL         reduce using rule 35 (exp -> term PLUS exp .)
    RCURLY          reduce using rule 35 (exp -> term PLUS exp .)
    SEMIC           reduce using rule 35 (exp -> term PLUS exp .)
    ELSE            reduce using rule 35 (exp -> term PLUS exp .)
    RPAREN          reduce using rule 35 (exp -> term PLUS exp .)
    RBRACKET        reduce using rule 35 (exp -> term PLUS exp .)
    COMMA           reduce using rule 35 (exp -> term PLUS exp .)
    DOT             reduce using rule 35 (exp -> term PLUS exp .)


state 131

    (36) exp -> term MINUS exp .

    LESSTHAN        reduce using rule 36 (exp -> term MINUS exp .)
    GREATERTHAN     reduce using rule 36 (exp -> term MINUS exp .)
    BETWEEN         reduce using rule 36 (exp -> term MINUS exp .)
    ID              reduce using rule 36 (exp -> term MINUS exp .)
    IF              reduce using rule 36 (exp -> term MINUS exp .)
    PRINT           reduce using rule 36 (exp -> term MINUS exp .)
    MIN             reduce using rule 36 (exp -> term MINUS exp .)
    MAX             reduce using rule 36 (exp -> term MINUS exp .)
    FOR             reduce using rule 36 (exp -> term MINUS exp .)
    RETURN          reduce using rule 36 (exp -> term MINUS exp .)
    PLUS            reduce using rule 36 (exp -> term MINUS exp .)
    MINUS           reduce using rule 36 (exp -> term MINUS exp .)
    LPAREN          reduce using rule 36 (exp -> term MINUS exp .)
    CTEI            reduce using rule 36 (exp -> term MINUS exp .)
    CTEF            reduce using rule 36 (exp -> term MINUS exp .)
    CTESTRING       reduce using rule 36 (exp -> term MINUS exp .)
    CTEBOOL         reduce using rule 36 (exp -> term MINUS exp .)
    RCURLY          reduce using rule 36 (exp -> term MINUS exp .)
    SEMIC           reduce using rule 36 (exp -> term MINUS exp .)
    ELSE            reduce using rule 36 (exp -> term MINUS exp .)
    RPAREN          reduce using rule 36 (exp -> term MINUS exp .)
    RBRACKET        reduce using rule 36 (exp -> term MINUS exp .)
    COMMA           reduce using rule 36 (exp -> term MINUS exp .)
    DOT             reduce using rule 36 (exp -> term MINUS exp .)


state 132

    (31) expresion -> exp LESSTHAN exp .

    RPAREN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    COMMA           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    SEMIC           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RBRACKET        reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    ID              reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    IF              reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    PRINT           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MIN             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MAX             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    FOR             reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RETURN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    PLUS            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    MINUS           reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    LPAREN          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEI            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEF            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTESTRING       reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    CTEBOOL         reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    RCURLY          reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    ELSE            reduce using rule 31 (expresion -> exp LESSTHAN exp .)
    DOT             reduce using rule 31 (expresion -> exp LESSTHAN exp .)


state 133

    (32) expresion -> exp GREATERTHAN exp .

    RPAREN          reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    COMMA           reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    SEMIC           reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    RBRACKET        reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    ID              reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    IF              reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    PRINT           reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    MIN             reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    MAX             reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    FOR             reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    RETURN          reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    PLUS            reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    MINUS           reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    LPAREN          reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    CTEI            reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    CTEF            reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    CTESTRING       reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    CTEBOOL         reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    RCURLY          reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    ELSE            reduce using rule 32 (expresion -> exp GREATERTHAN exp .)
    DOT             reduce using rule 32 (expresion -> exp GREATERTHAN exp .)


state 134

    (33) expresion -> exp BETWEEN exp .

    RPAREN          reduce using rule 33 (expresion -> exp BETWEEN exp .)
    COMMA           reduce using rule 33 (expresion -> exp BETWEEN exp .)
    SEMIC           reduce using rule 33 (expresion -> exp BETWEEN exp .)
    RBRACKET        reduce using rule 33 (expresion -> exp BETWEEN exp .)
    ID              reduce using rule 33 (expresion -> exp BETWEEN exp .)
    IF              reduce using rule 33 (expresion -> exp BETWEEN exp .)
    PRINT           reduce using rule 33 (expresion -> exp BETWEEN exp .)
    MIN             reduce using rule 33 (expresion -> exp BETWEEN exp .)
    MAX             reduce using rule 33 (expresion -> exp BETWEEN exp .)
    FOR             reduce using rule 33 (expresion -> exp BETWEEN exp .)
    RETURN          reduce using rule 33 (expresion -> exp BETWEEN exp .)
    PLUS            reduce using rule 33 (expresion -> exp BETWEEN exp .)
    MINUS           reduce using rule 33 (expresion -> exp BETWEEN exp .)
    LPAREN          reduce using rule 33 (expresion -> exp BETWEEN exp .)
    CTEI            reduce using rule 33 (expresion -> exp BETWEEN exp .)
    CTEF            reduce using rule 33 (expresion -> exp BETWEEN exp .)
    CTESTRING       reduce using rule 33 (expresion -> exp BETWEEN exp .)
    CTEBOOL         reduce using rule 33 (expresion -> exp BETWEEN exp .)
    RCURLY          reduce using rule 33 (expresion -> exp BETWEEN exp .)
    ELSE            reduce using rule 33 (expresion -> exp BETWEEN exp .)
    DOT             reduce using rule 33 (expresion -> exp BETWEEN exp .)


state 135

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock . RCURLY

    RCURLY          shift and go to state 148


state 136

    (22) lid -> COMMA listofids .

    SEMIC           reduce using rule 22 (lid -> COMMA listofids .)


state 137

    (19) dimensions -> LBRACKET expresion RBRACKET dimensions .

    STAR            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SLASH           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUS            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINUS           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSTHAN        reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATERTHAN     reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    BETWEEN         reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ID              reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    IF              reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PRINT           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MIN             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MAX             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    FOR             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RETURN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LPAREN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEI            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEF            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTESTRING       reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEBOOL         reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RCURLY          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SEMIC           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ELSE            reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RBRACKET        reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RPAREN          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    COMMA           reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DOT             reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    POINTS          reduce using rule 19 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 138

    (27) asign -> ID EQUALS expresiones SEMIC .

    ID              reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    IF              reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    PRINT           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MIN             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MAX             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    FOR             reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    RETURN          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    PLUS            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    MINUS           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    LPAREN          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEI            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEF            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTESTRING       reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    CTEBOOL         reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    RCURLY          reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    SEMIC           reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)
    ELSE            reduce using rule 27 (asign -> ID EQUALS expresiones SEMIC .)


state 139

    (28) expresiones -> expresion COMMA . expresiones
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 118
    expresiones                    shift and go to state 149
    constant                       shift and go to state 66
    term                           shift and go to state 76
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 140

    (75) write2 -> CTESTRING DOT . write2
    (72) write2 -> . expresion
    (73) write2 -> . CTESTRING
    (74) write2 -> . expresion DOT write2
    (75) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 119
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 120
    term                           shift and go to state 76
    constant                       shift and go to state 66
    write2                         shift and go to state 150
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 141

    (74) write2 -> expresion DOT . write2
    (72) write2 -> . expresion
    (73) write2 -> . CTESTRING
    (74) write2 -> . expresion DOT write2
    (75) write2 -> . CTESTRING DOT write2
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 119
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTEBOOL         shift and go to state 80
    ID              shift and go to state 86

    expresion                      shift and go to state 120
    term                           shift and go to state 76
    constant                       shift and go to state 66
    write2                         shift and go to state 151
    functioncall                   shift and go to state 65
    exp                            shift and go to state 79
    factor                         shift and go to state 64
    id                             shift and go to state 59

state 142

    (71) write -> PRINT LPAREN write2 RPAREN . SEMIC

    SEMIC           shift and go to state 152


state 143

    (67) functioncall -> ID LPAREN CTEF RPAREN .

    STAR            reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    SLASH           reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    PLUS            reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    MINUS           reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    LESSTHAN        reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    GREATERTHAN     reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    BETWEEN         reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    RPAREN          reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    RBRACKET        reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    ID              reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    IF              reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    PRINT           reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    MIN             reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    MAX             reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    FOR             reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    RETURN          reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    LPAREN          reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEI            reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEF            reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTESTRING       reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    CTEBOOL         reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    RCURLY          reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    SEMIC           reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    ELSE            reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    COMMA           reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)
    DOT             reduce using rule 67 (functioncall -> ID LPAREN CTEF RPAREN .)


state 144

    (65) functioncall -> ID LPAREN expresion RPAREN .

    STAR            reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    SLASH           reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    PLUS            reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    MINUS           reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    ID              reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    IF              reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    PRINT           reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    MIN             reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    MAX             reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    FOR             reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    RETURN          reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEI            reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEF            reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    CTESTRING       reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    CTEBOOL         reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    ELSE            reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    COMMA           reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)
    DOT             reduce using rule 65 (functioncall -> ID LPAREN expresion RPAREN .)


state 145

    (66) functioncall -> ID LPAREN CTEI RPAREN .

    STAR            reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    SLASH           reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    PLUS            reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    MINUS           reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    LESSTHAN        reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    GREATERTHAN     reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    BETWEEN         reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    RPAREN          reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    RBRACKET        reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    ID              reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    IF              reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    PRINT           reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    MIN             reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    MAX             reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    FOR             reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    RETURN          reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    LPAREN          reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEI            reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEF            reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTESTRING       reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    CTEBOOL         reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    RCURLY          reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    SEMIC           reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    ELSE            reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    COMMA           reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)
    DOT             reduce using rule 66 (functioncall -> ID LPAREN CTEI RPAREN .)


state 146

    (68) for -> FOR ID IN DOT . ID LCURLY statementblock RCURLY

    ID              shift and go to state 153


state 147

    (69) condition -> IF LPAREN expresion RPAREN . statementblock SEMIC
    (70) condition -> IF LPAREN expresion RPAREN . statementblock ELSE statementblock SEMIC
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    SEMIC           reduce using rule 80 (empty -> .)
    ELSE            reduce using rule 80 (empty -> .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    expresion                      shift and go to state 68
    statementblock                 shift and go to state 154
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    empty                          shift and go to state 67
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 148

    (4) function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .

    FUNC            reduce using rule 4 (function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .)
    MODEL           reduce using rule 4 (function -> FUNC ID LPAREN lparameters RPAREN LCURLY vars data statementblock RCURLY .)


state 149

    (28) expresiones -> expresion COMMA expresiones .

    SEMIC           reduce using rule 28 (expresiones -> expresion COMMA expresiones .)


state 150

    (75) write2 -> CTESTRING DOT write2 .

    RPAREN          reduce using rule 75 (write2 -> CTESTRING DOT write2 .)


state 151

    (74) write2 -> expresion DOT write2 .

    RPAREN          reduce using rule 74 (write2 -> expresion DOT write2 .)


state 152

    (71) write -> PRINT LPAREN write2 RPAREN SEMIC .

    ID              reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    IF              reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    PRINT           reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MIN             reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MAX             reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    FOR             reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    RETURN          reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    PLUS            reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    MINUS           reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    LPAREN          reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEI            reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEF            reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTESTRING       reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    CTEBOOL         reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    RCURLY          reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    SEMIC           reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)
    ELSE            reduce using rule 71 (write -> PRINT LPAREN write2 RPAREN SEMIC .)


state 153

    (68) for -> FOR ID IN DOT ID . LCURLY statementblock RCURLY

    LCURLY          shift and go to state 155


state 154

    (69) condition -> IF LPAREN expresion RPAREN statementblock . SEMIC
    (70) condition -> IF LPAREN expresion RPAREN statementblock . ELSE statementblock SEMIC

    SEMIC           shift and go to state 156
    ELSE            shift and go to state 157


state 155

    (68) for -> FOR ID IN DOT ID LCURLY . statementblock RCURLY
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    RCURLY          reduce using rule 80 (empty -> .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    statementblock                 shift and go to state 158
    expresion                      shift and go to state 68
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    empty                          shift and go to state 67
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 156

    (69) condition -> IF LPAREN expresion RPAREN statementblock SEMIC .

    ID              reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    IF              reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    PRINT           reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MIN             reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MAX             reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    FOR             reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    RETURN          reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    PLUS            reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    MINUS           reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    LPAREN          reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEI            reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEF            reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTESTRING       reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    CTEBOOL         reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    SEMIC           reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    ELSE            reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)
    RCURLY          reduce using rule 69 (condition -> IF LPAREN expresion RPAREN statementblock SEMIC .)


state 157

    (70) condition -> IF LPAREN expresion RPAREN statementblock ELSE . statementblock SEMIC
    (77) statementblock -> . statement statementblock
    (78) statementblock -> . statement
    (79) statementblock -> . empty
    (48) statement -> . asign
    (49) statement -> . expresion
    (50) statement -> . condition
    (51) statement -> . write
    (52) statement -> . optimize
    (53) statement -> . for
    (54) statement -> . return
    (80) empty -> .
    (27) asign -> . ID EQUALS expresiones SEMIC
    (30) expresion -> . exp
    (31) expresion -> . exp LESSTHAN exp
    (32) expresion -> . exp GREATERTHAN exp
    (33) expresion -> . exp BETWEEN exp
    (69) condition -> . IF LPAREN expresion RPAREN statementblock SEMIC
    (70) condition -> . IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC
    (71) write -> . PRINT LPAREN write2 RPAREN SEMIC
    (46) optimize -> . MIN EQUALS statement
    (47) optimize -> . MAX EQUALS statement
    (68) for -> . FOR ID IN DOT ID LCURLY statementblock RCURLY
    (76) return -> . RETURN asign
    (34) exp -> . term
    (35) exp -> . term PLUS exp
    (36) exp -> . term MINUS exp
    (37) term -> . factor
    (38) term -> . factor STAR term
    (39) term -> . factor SLASH term
    (40) factor -> . PLUS constant
    (41) factor -> . MINUS constant
    (42) factor -> . constant
    (43) factor -> . LPAREN expresion RPAREN
    (58) constant -> . CTEI
    (59) constant -> . CTEF
    (60) constant -> . CTESTRING
    (61) constant -> . CTEBOOL
    (62) constant -> . id
    (63) constant -> . functioncall
    (64) id -> . ID dimensions
    (65) functioncall -> . ID LPAREN expresion RPAREN
    (66) functioncall -> . ID LPAREN CTEI RPAREN
    (67) functioncall -> . ID LPAREN CTEF RPAREN

    SEMIC           reduce using rule 80 (empty -> .)
    ID              shift and go to state 60
    IF              shift and go to state 74
    PRINT           shift and go to state 56
    MIN             shift and go to state 37
    MAX             shift and go to state 36
    FOR             shift and go to state 70
    RETURN          shift and go to state 55
    PLUS            shift and go to state 62
    MINUS           shift and go to state 57
    LPAREN          shift and go to state 71
    CTEI            shift and go to state 81
    CTEF            shift and go to state 78
    CTESTRING       shift and go to state 82
    CTEBOOL         shift and go to state 80

    expresion                      shift and go to state 68
    statementblock                 shift and go to state 159
    return                         shift and go to state 69
    exp                            shift and go to state 79
    for                            shift and go to state 58
    term                           shift and go to state 76
    asign                          shift and go to state 77
    write                          shift and go to state 61
    functioncall                   shift and go to state 65
    empty                          shift and go to state 67
    statement                      shift and go to state 63
    factor                         shift and go to state 64
    id                             shift and go to state 59
    constant                       shift and go to state 66
    optimize                       shift and go to state 72
    condition                      shift and go to state 73

state 158

    (68) for -> FOR ID IN DOT ID LCURLY statementblock . RCURLY

    RCURLY          shift and go to state 160


state 159

    (70) condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock . SEMIC

    SEMIC           shift and go to state 161


state 160

    (68) for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .

    ID              reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    IF              reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    PRINT           reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MIN             reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MAX             reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    FOR             reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    RETURN          reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    PLUS            reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    MINUS           reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    LPAREN          reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEI            reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEF            reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTESTRING       reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    CTEBOOL         reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    RCURLY          reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    SEMIC           reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)
    ELSE            reduce using rule 68 (for -> FOR ID IN DOT ID LCURLY statementblock RCURLY .)


state 161

    (70) condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .

    ID              reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    IF              reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    PRINT           reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MIN             reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MAX             reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    FOR             reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    RETURN          reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    PLUS            reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    MINUS           reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    LPAREN          reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEI            reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEF            reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTESTRING       reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    CTEBOOL         reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    SEMIC           reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    ELSE            reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)
    RCURLY          reduce using rule 70 (condition -> IF LPAREN expresion RPAREN statementblock ELSE statementblock SEMIC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MIN in state 24 resolved as shift
WARNING: shift/reduce conflict for MAX in state 24 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 86 resolved as shift
WARNING: shift/reduce conflict for DOT in state 119 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 122 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 124 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (lparameters -> parameter)
WARNING: rejected rule (empty -> <empty>) in state 17
WARNING: reduce/reduce conflict in state 31 resolved using rule (lvars -> listofvars)
WARNING: rejected rule (empty -> <empty>) in state 31
WARNING: reduce/reduce conflict in state 63 resolved using rule (statementblock -> statement)
WARNING: rejected rule (empty -> <empty>) in state 63
WARNING: reduce/reduce conflict in state 119 resolved using rule (constant -> CTESTRING)
WARNING: rejected rule (write2 -> CTESTRING) in state 119
WARNING: Rule (write2 -> CTESTRING) is never reduced
