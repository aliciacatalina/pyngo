Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    IN
    CTESTRING
    DOT
    SUM
    BETWEEN
    CTEBOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model bloque2 RCURLY
Rule 2     functions -> funcion functions
Rule 3     functions -> empty
Rule 4     vars -> varblock
Rule 5     vars -> empty
Rule 6     varblock -> VARS LCURLY lvars RCURLY
Rule 7     model -> optimize
Rule 8     model -> optimize where
Rule 9     model -> bloque
Rule 10    model -> empty
Rule 11    optimize -> MIN LCURLY statement where RCURLY
Rule 12    optimize -> MAX LCURLY statement where RCURLY
Rule 13    build -> BUILD expresion SEMIC
Rule 14    where -> WHERE LCURLY bloque2 RCURLY
Rule 15    wherecondition -> CONDITION expresion SEMIC
Rule 16    statement -> declaration
Rule 17    statement -> asign
Rule 18    statement -> condition
Rule 19    statement -> write
Rule 20    statement -> ciclo
Rule 21    statement -> return
Rule 22    statement -> build
Rule 23    statement -> wherecondition
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> id asign_signo expresion
Rule 28    asign -> expresion
Rule 29    asign_signo -> ASEQ
Rule 30    asign_signo -> PLUSEQ
Rule 31    asign_signo -> MINEQ
Rule 32    asign_signo -> MULTEQ
Rule 33    asign_signo -> DIVEQ
Rule 34    condition -> IF asign bloque condition1
Rule 35    condition1 -> ELSE bloque
Rule 36    condition1 -> empty
Rule 37    write -> PRINT asign write2
Rule 38    write2 -> COMMA asign write2
Rule 39    write2 -> empty
Rule 40    ciclo -> FOR asign bloque
Rule 41    ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
Rule 42    ciclo1 -> asign
Rule 43    ciclo1 -> <empty>
Rule 44    ciclo2 -> asign
Rule 45    ciclo2 -> <empty>
Rule 46    ciclo3 -> asign
Rule 47    ciclo3 -> <empty>
Rule 48    funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
Rule 49    funcion1 -> type ID funcion2
Rule 50    funcion1 -> <empty>
Rule 51    funcion2 -> COMMA type ID funcion2
Rule 52    funcion2 -> <empty>
Rule 53    funcion3 -> LPAREN type RPAREN
Rule 54    funcion3 -> <empty>
Rule 55    lvars -> declaration lvars
Rule 56    lvars -> empty
Rule 57    declaration -> type dimensions POINTS ID dec22 SEMIC
Rule 58    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 59    dimensions -> empty
Rule 60    dec22 -> COMMA ID dec22
Rule 61    dec22 -> empty
Rule 62    bloque -> LCURLY bloque2 RCURLY
Rule 63    bloque2 -> statement bloque2
Rule 64    bloque2 -> empty
Rule 65    return -> RETURN asign
Rule 66    expresion -> expresion2 expresioni SEMIC
Rule 67    expresioni -> OR expresion
Rule 68    expresioni -> empty
Rule 69    expresion2 -> expresion3 expresion2i
Rule 70    expresion2i -> AND expresion2
Rule 71    expresion2i -> empty
Rule 72    expresion3 -> expresion4 expresion3i
Rule 73    expresion3i -> ORB expresion3
Rule 74    expresion3i -> empty
Rule 75    expresion4 -> expresion5 expresion4i
Rule 76    expresion4i -> XOR expresion4
Rule 77    expresion4i -> empty
Rule 78    expresion5 -> expresion6 expresion5i
Rule 79    expresion5i -> ANDB expresion5
Rule 80    expresion5i -> empty
Rule 81    expresion6 -> expresion7 expresion6i
Rule 82    expresion6i -> EQ expresion6
Rule 83    expresion6i -> DIF expresion6
Rule 84    expresion6i -> empty
Rule 85    expresion7 -> expresion8 expresion7i
Rule 86    expresion7i -> SHR expresion7
Rule 87    expresion7i -> SHL expresion7
Rule 88    expresion7i -> empty
Rule 89    expresion8 -> expresion9 expresion8i
Rule 90    expresion8i -> GREATERTHAN expresion8
Rule 91    expresion8i -> LESSTHAN expresion8
Rule 92    expresion8i -> GREATEREQUAL expresion8
Rule 93    expresion8i -> LESSEQUAL expresion8
Rule 94    expresion8i -> empty
Rule 95    expresion9 -> termino expresion9i
Rule 96    expresion9i -> PLUS expresion9
Rule 97    expresion9i -> MINUS expresion9
Rule 98    expresion9i -> empty
Rule 99    termino -> factor termino2
Rule 100   termino2 -> STAR termino
Rule 101   termino2 -> SLASH termino
Rule 102   termino2 -> MOD termino
Rule 103   termino2 -> empty
Rule 104   factor -> exponencial factor2
Rule 105   factor2 -> EXP factor
Rule 106   factor2 -> empty
Rule 107   exponencial -> LPAREN expresion RPAREN
Rule 108   exponencial -> exponencial2 valor
Rule 109   exponencial2 -> NOT
Rule 110   exponencial2 -> MM
Rule 111   exponencial2 -> PP
Rule 112   exponencial2 -> NEW
Rule 113   exponencial2 -> empty
Rule 114   valor -> id
Rule 115   valor -> int
Rule 116   valor -> float
Rule 117   int -> CTEI
Rule 118   id -> ID llamarfuncion
Rule 119   id -> ID
Rule 120   float -> CTEF
Rule 121   llamarfuncion -> LPAREN llamarfuncion3 RPAREN
Rule 122   llamarfuncion3 -> asign llamarfuncion33
Rule 123   llamarfuncion3 -> empty
Rule 124   llamarfuncion33 -> COMMA asign llamarfuncion33
Rule 125   llamarfuncion33 -> empty
Rule 126   type -> TINT
Rule 127   type -> TBOOL
Rule 128   type -> TFLOAT
Rule 129   empty -> <empty>

Terminals, with rules where they appear

AND                  : 70
ANDB                 : 79
ASEQ                 : 29
BETWEEN              : 
BUILD                : 13
COMMA                : 38 51 60 124
CONDITION            : 15
CTEBOOL              : 
CTEF                 : 120
CTEI                 : 117
CTESTRING            : 
DATA                 : 24
DIF                  : 83
DIVEQ                : 33
DOT                  : 
ELSE                 : 35
EQ                   : 82
EXP                  : 105
FOR                  : 40 41
FUNC                 : 48
GREATEREQUAL         : 92
GREATERTHAN          : 90
ID                   : 48 49 51 57 60 118 119
IF                   : 34
IN                   : 
LBRACKET             : 58
LCURLY               : 1 6 11 12 14 24 62
LESSEQUAL            : 93
LESSTHAN             : 91
LPAREN               : 48 53 107 121
MAX                  : 12
MIN                  : 11
MINEQ                : 31
MINUS                : 97
MM                   : 110
MOD                  : 102
MODEL                : 1
MULTEQ               : 32
NEW                  : 112
NOT                  : 109
OR                   : 67
ORB                  : 73
PLUS                 : 96
PLUSEQ               : 30
POINTS               : 57
PP                   : 111
PRINT                : 37
RBRACKET             : 58
RCURLY               : 1 6 11 12 14 24 62
RETURN               : 65
RPAREN               : 48 53 107 121
SEMIC                : 13 15 41 41 57 66
SHL                  : 87
SHR                  : 86
SLASH                : 101
STAR                 : 100
SUM                  : 
TBOOL                : 127
TFLOAT               : 128
TINT                 : 126
VARS                 : 6
WHERE                : 14
XOR                  : 76
error                : 

Nonterminals, with rules where they appear

asign                : 17 25 34 37 38 40 42 44 46 65 122 124
asign_signo          : 27
asignmany            : 24 25
bloque               : 9 34 35 40 41 48
bloque2              : 1 14 62 63
build                : 22
ciclo                : 20
ciclo1               : 41
ciclo2               : 41
ciclo3               : 41
condition            : 18
condition1           : 34
data                 : 1
dec22                : 57 60
declaration          : 16 55
dimensions           : 57 58
empty                : 3 5 10 26 36 39 56 59 61 64 68 71 74 77 80 84 88 94 98 103 106 113 123 125
exponencial          : 104
exponencial2         : 108
expresion            : 13 15 27 28 58 67 107
expresion2           : 66 70
expresion2i          : 69
expresion3           : 69 73
expresion3i          : 72
expresion4           : 72 76
expresion4i          : 75
expresion5           : 75 79
expresion5i          : 78
expresion6           : 78 82 83
expresion6i          : 81
expresion7           : 81 86 87
expresion7i          : 85
expresion8           : 85 90 91 92 93
expresion8i          : 89
expresion9           : 89 96 97
expresion9i          : 95
expresioni           : 66
factor               : 99 105
factor2              : 104
float                : 116
funcion              : 2
funcion1             : 48
funcion2             : 49 51
funcion3             : 48
functions            : 1 2
id                   : 27 114
int                  : 115
llamarfuncion        : 118
llamarfuncion3       : 121
llamarfuncion33      : 122 124
lvars                : 6 55
model                : 1
optimize             : 7 8
program              : 0
return               : 21
statement            : 11 12 63
termino              : 95 100 101 102
termino2             : 99
type                 : 49 51 53 57
valor                : 108
varblock             : 4
vars                 : 1
where                : 8 11 12
wherecondition       : 23
write                : 19
write2               : 37 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model bloque2 RCURLY
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (48) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (129) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 129 (empty -> .)

    functions                      shift and go to state 1
    program                        shift and go to state 2
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 1

    (1) program -> functions . MODEL LCURLY vars data model bloque2 RCURLY

    MODEL           shift and go to state 6


state 2

    (0) S' -> program .



state 3

    (48) funcion -> FUNC . ID LPAREN funcion1 RPAREN funcion3 bloque

    ID              shift and go to state 7


state 4

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 5

    (2) functions -> funcion . functions
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (48) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (129) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 129 (empty -> .)

    functions                      shift and go to state 8
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 6

    (1) program -> functions MODEL . LCURLY vars data model bloque2 RCURLY

    LCURLY          shift and go to state 9


state 7

    (48) funcion -> FUNC ID . LPAREN funcion1 RPAREN funcion3 bloque

    LPAREN          shift and go to state 10


state 8

    (2) functions -> funcion functions .

    MODEL           reduce using rule 2 (functions -> funcion functions .)


state 9

    (1) program -> functions MODEL LCURLY . vars data model bloque2 RCURLY
    (4) vars -> . varblock
    (5) vars -> . empty
    (6) varblock -> . VARS LCURLY lvars RCURLY
    (129) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 129 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (48) funcion -> FUNC ID LPAREN . funcion1 RPAREN funcion3 bloque
    (49) funcion1 -> . type ID funcion2
    (50) funcion1 -> .
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RPAREN          reduce using rule 50 (funcion1 -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    funcion1                       shift and go to state 17
    type                           shift and go to state 19

state 11

    (6) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 20


state 12

    (1) program -> functions MODEL LCURLY vars . data model bloque2 RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 21

    data                           shift and go to state 22

state 13

    (4) vars -> varblock .

    DATA            reduce using rule 4 (vars -> varblock .)


state 14

    (5) vars -> empty .

    DATA            reduce using rule 5 (vars -> empty .)


state 15

    (126) type -> TINT .

    LBRACKET        reduce using rule 126 (type -> TINT .)
    POINTS          reduce using rule 126 (type -> TINT .)
    RPAREN          reduce using rule 126 (type -> TINT .)
    ID              reduce using rule 126 (type -> TINT .)


state 16

    (128) type -> TFLOAT .

    LBRACKET        reduce using rule 128 (type -> TFLOAT .)
    POINTS          reduce using rule 128 (type -> TFLOAT .)
    RPAREN          reduce using rule 128 (type -> TFLOAT .)
    ID              reduce using rule 128 (type -> TFLOAT .)


state 17

    (48) funcion -> FUNC ID LPAREN funcion1 . RPAREN funcion3 bloque

    RPAREN          shift and go to state 23


state 18

    (127) type -> TBOOL .

    LBRACKET        reduce using rule 127 (type -> TBOOL .)
    POINTS          reduce using rule 127 (type -> TBOOL .)
    RPAREN          reduce using rule 127 (type -> TBOOL .)
    ID              reduce using rule 127 (type -> TBOOL .)


state 19

    (49) funcion1 -> type . ID funcion2

    ID              shift and go to state 24


state 20

    (6) varblock -> VARS LCURLY . lvars RCURLY
    (55) lvars -> . declaration lvars
    (56) lvars -> . empty
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (129) empty -> .
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    lvars                          shift and go to state 25
    declaration                    shift and go to state 26
    type                           shift and go to state 27
    empty                          shift and go to state 28

state 21

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 29


state 22

    (1) program -> functions MODEL LCURLY vars data . model bloque2 RCURLY
    (7) model -> . optimize
    (8) model -> . optimize where
    (9) model -> . bloque
    (10) model -> . empty
    (11) optimize -> . MIN LCURLY statement where RCURLY
    (12) optimize -> . MAX LCURLY statement where RCURLY
    (62) bloque -> . LCURLY bloque2 RCURLY
    (129) empty -> .

    MIN             shift and go to state 30
    MAX             shift and go to state 34
    LCURLY          shift and go to state 32
    IF              reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    BUILD           reduce using rule 129 (empty -> .)
    CONDITION       reduce using rule 129 (empty -> .)
    TINT            reduce using rule 129 (empty -> .)
    TBOOL           reduce using rule 129 (empty -> .)
    TFLOAT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    LPAREN          reduce using rule 129 (empty -> .)
    NOT             reduce using rule 129 (empty -> .)
    MM              reduce using rule 129 (empty -> .)
    PP              reduce using rule 129 (empty -> .)
    NEW             reduce using rule 129 (empty -> .)
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    empty                          shift and go to state 33
    model                          shift and go to state 35
    optimize                       shift and go to state 31
    bloque                         shift and go to state 36

state 23

    (48) funcion -> FUNC ID LPAREN funcion1 RPAREN . funcion3 bloque
    (53) funcion3 -> . LPAREN type RPAREN
    (54) funcion3 -> .

    LPAREN          shift and go to state 38
    LCURLY          reduce using rule 54 (funcion3 -> .)

    funcion3                       shift and go to state 37

state 24

    (49) funcion1 -> type ID . funcion2
    (51) funcion2 -> . COMMA type ID funcion2
    (52) funcion2 -> .

    COMMA           shift and go to state 39
    RPAREN          reduce using rule 52 (funcion2 -> .)

    funcion2                       shift and go to state 40

state 25

    (6) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 41


state 26

    (55) lvars -> declaration . lvars
    (55) lvars -> . declaration lvars
    (56) lvars -> . empty
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (129) empty -> .
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    RCURLY          reduce using rule 129 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    lvars                          shift and go to state 42
    declaration                    shift and go to state 26
    type                           shift and go to state 27
    empty                          shift and go to state 28

state 27

    (57) declaration -> type . dimensions POINTS ID dec22 SEMIC
    (58) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (59) dimensions -> . empty
    (129) empty -> .

    LBRACKET        shift and go to state 44
    POINTS          reduce using rule 129 (empty -> .)

    dimensions                     shift and go to state 43
    empty                          shift and go to state 45

state 28

    (56) lvars -> empty .

    RCURLY          reduce using rule 56 (lvars -> empty .)


state 29

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (129) empty -> .
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expresion3                     shift and go to state 46
    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 55
    asignmany                      shift and go to state 56
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 67

state 30

    (11) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 69


state 31

    (7) model -> optimize .
    (8) model -> optimize . where
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    IF              reduce using rule 7 (model -> optimize .)
    PRINT           reduce using rule 7 (model -> optimize .)
    FOR             reduce using rule 7 (model -> optimize .)
    RETURN          reduce using rule 7 (model -> optimize .)
    BUILD           reduce using rule 7 (model -> optimize .)
    CONDITION       reduce using rule 7 (model -> optimize .)
    TINT            reduce using rule 7 (model -> optimize .)
    TBOOL           reduce using rule 7 (model -> optimize .)
    TFLOAT          reduce using rule 7 (model -> optimize .)
    ID              reduce using rule 7 (model -> optimize .)
    LPAREN          reduce using rule 7 (model -> optimize .)
    NOT             reduce using rule 7 (model -> optimize .)
    MM              reduce using rule 7 (model -> optimize .)
    PP              reduce using rule 7 (model -> optimize .)
    NEW             reduce using rule 7 (model -> optimize .)
    RCURLY          reduce using rule 7 (model -> optimize .)
    CTEI            reduce using rule 7 (model -> optimize .)
    CTEF            reduce using rule 7 (model -> optimize .)
    WHERE           shift and go to state 71

    where                          shift and go to state 70

state 32

    (62) bloque -> LCURLY . bloque2 RCURLY
    (63) bloque2 -> . statement bloque2
    (64) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (129) empty -> .
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 82
    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 77
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 79
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    bloque2                        shift and go to state 84
    asign                          shift and go to state 85
    wherecondition                 shift and go to state 87

state 33

    (10) model -> empty .

    IF              reduce using rule 10 (model -> empty .)
    PRINT           reduce using rule 10 (model -> empty .)
    FOR             reduce using rule 10 (model -> empty .)
    RETURN          reduce using rule 10 (model -> empty .)
    BUILD           reduce using rule 10 (model -> empty .)
    CONDITION       reduce using rule 10 (model -> empty .)
    TINT            reduce using rule 10 (model -> empty .)
    TBOOL           reduce using rule 10 (model -> empty .)
    TFLOAT          reduce using rule 10 (model -> empty .)
    ID              reduce using rule 10 (model -> empty .)
    LPAREN          reduce using rule 10 (model -> empty .)
    NOT             reduce using rule 10 (model -> empty .)
    MM              reduce using rule 10 (model -> empty .)
    PP              reduce using rule 10 (model -> empty .)
    NEW             reduce using rule 10 (model -> empty .)
    RCURLY          reduce using rule 10 (model -> empty .)
    CTEI            reduce using rule 10 (model -> empty .)
    CTEF            reduce using rule 10 (model -> empty .)


state 34

    (12) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 89


state 35

    (1) program -> functions MODEL LCURLY vars data model . bloque2 RCURLY
    (63) bloque2 -> . statement bloque2
    (64) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (129) empty -> .
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 77
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 79
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    declaration                    shift and go to state 82
    wherecondition                 shift and go to state 87
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    bloque2                        shift and go to state 90
    asign                          shift and go to state 85

state 36

    (9) model -> bloque .

    IF              reduce using rule 9 (model -> bloque .)
    PRINT           reduce using rule 9 (model -> bloque .)
    FOR             reduce using rule 9 (model -> bloque .)
    RETURN          reduce using rule 9 (model -> bloque .)
    BUILD           reduce using rule 9 (model -> bloque .)
    CONDITION       reduce using rule 9 (model -> bloque .)
    TINT            reduce using rule 9 (model -> bloque .)
    TBOOL           reduce using rule 9 (model -> bloque .)
    TFLOAT          reduce using rule 9 (model -> bloque .)
    ID              reduce using rule 9 (model -> bloque .)
    LPAREN          reduce using rule 9 (model -> bloque .)
    NOT             reduce using rule 9 (model -> bloque .)
    MM              reduce using rule 9 (model -> bloque .)
    PP              reduce using rule 9 (model -> bloque .)
    NEW             reduce using rule 9 (model -> bloque .)
    RCURLY          reduce using rule 9 (model -> bloque .)
    CTEI            reduce using rule 9 (model -> bloque .)
    CTEF            reduce using rule 9 (model -> bloque .)


state 37

    (48) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 . bloque
    (62) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 32

    bloque                         shift and go to state 91

state 38

    (53) funcion3 -> LPAREN . type RPAREN
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 92

state 39

    (51) funcion2 -> COMMA . type ID funcion2
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 93

state 40

    (49) funcion1 -> type ID funcion2 .

    RPAREN          reduce using rule 49 (funcion1 -> type ID funcion2 .)


state 41

    (6) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 6 (varblock -> VARS LCURLY lvars RCURLY .)


state 42

    (55) lvars -> declaration lvars .

    RCURLY          reduce using rule 55 (lvars -> declaration lvars .)


state 43

    (57) declaration -> type dimensions . POINTS ID dec22 SEMIC

    POINTS          shift and go to state 94


state 44

    (58) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    expresion4                     shift and go to state 59
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 96

state 45

    (59) dimensions -> empty .

    POINTS          reduce using rule 59 (dimensions -> empty .)


state 46

    (69) expresion2 -> expresion3 . expresion2i
    (70) expresion2i -> . AND expresion2
    (71) expresion2i -> . empty
    (129) empty -> .

    AND             shift and go to state 97
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    expresion2i                    shift and go to state 98
    empty                          shift and go to state 99

state 47

    (95) expresion9 -> termino . expresion9i
    (96) expresion9i -> . PLUS expresion9
    (97) expresion9i -> . MINUS expresion9
    (98) expresion9i -> . empty
    (129) empty -> .

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    expresion9i                    shift and go to state 100
    empty                          shift and go to state 103

state 48

    (112) exponencial2 -> NEW .

    ID              reduce using rule 112 (exponencial2 -> NEW .)
    CTEI            reduce using rule 112 (exponencial2 -> NEW .)
    CTEF            reduce using rule 112 (exponencial2 -> NEW .)


state 49

    (27) asign -> id . asign_signo expresion
    (29) asign_signo -> . ASEQ
    (30) asign_signo -> . PLUSEQ
    (31) asign_signo -> . MINEQ
    (32) asign_signo -> . MULTEQ
    (33) asign_signo -> . DIVEQ

    ASEQ            shift and go to state 105
    PLUSEQ          shift and go to state 104
    MINEQ           shift and go to state 106
    MULTEQ          shift and go to state 107
    DIVEQ           shift and go to state 109

    asign_signo                    shift and go to state 108

state 50

    (111) exponencial2 -> PP .

    ID              reduce using rule 111 (exponencial2 -> PP .)
    CTEI            reduce using rule 111 (exponencial2 -> PP .)
    CTEF            reduce using rule 111 (exponencial2 -> PP .)


state 51

    (108) exponencial -> exponencial2 . valor
    (114) valor -> . id
    (115) valor -> . int
    (116) valor -> . float
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (117) int -> . CTEI
    (120) float -> . CTEF

    ID              shift and go to state 64
    CTEI            shift and go to state 115
    CTEF            shift and go to state 113

    int                            shift and go to state 110
    float                          shift and go to state 111
    valor                          shift and go to state 114
    id                             shift and go to state 112

state 52

    (89) expresion8 -> expresion9 . expresion8i
    (90) expresion8i -> . GREATERTHAN expresion8
    (91) expresion8i -> . LESSTHAN expresion8
    (92) expresion8i -> . GREATEREQUAL expresion8
    (93) expresion8i -> . LESSEQUAL expresion8
    (94) expresion8i -> . empty
    (129) empty -> .

    GREATERTHAN     shift and go to state 119
    LESSTHAN        shift and go to state 118
    GREATEREQUAL    shift and go to state 116
    LESSEQUAL       shift and go to state 120
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    expresion8i                    shift and go to state 117
    empty                          shift and go to state 121

state 53

    (99) termino -> factor . termino2
    (100) termino2 -> . STAR termino
    (101) termino2 -> . SLASH termino
    (102) termino2 -> . MOD termino
    (103) termino2 -> . empty
    (129) empty -> .

    STAR            shift and go to state 122
    SLASH           shift and go to state 124
    MOD             shift and go to state 126
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    termino2                       shift and go to state 123
    empty                          shift and go to state 125

state 54

    (104) factor -> exponencial . factor2
    (105) factor2 -> . EXP factor
    (106) factor2 -> . empty
    (129) empty -> .

    EXP             shift and go to state 128
    STAR            reduce using rule 129 (empty -> .)
    SLASH           reduce using rule 129 (empty -> .)
    MOD             reduce using rule 129 (empty -> .)
    PLUS            reduce using rule 129 (empty -> .)
    MINUS           reduce using rule 129 (empty -> .)
    GREATERTHAN     reduce using rule 129 (empty -> .)
    LESSTHAN        reduce using rule 129 (empty -> .)
    GREATEREQUAL    reduce using rule 129 (empty -> .)
    LESSEQUAL       reduce using rule 129 (empty -> .)
    SHR             reduce using rule 129 (empty -> .)
    SHL             reduce using rule 129 (empty -> .)
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 127
    factor2                        shift and go to state 129

state 55

    (26) asignmany -> empty .
    (113) exponencial2 -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)
    ID              reduce using rule 113 (exponencial2 -> empty .)
    CTEI            reduce using rule 113 (exponencial2 -> empty .)
    CTEF            reduce using rule 113 (exponencial2 -> empty .)


state 56

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 130


state 57

    (66) expresion -> expresion2 . expresioni SEMIC
    (67) expresioni -> . OR expresion
    (68) expresioni -> . empty
    (129) empty -> .

    OR              shift and go to state 132
    SEMIC           reduce using rule 129 (empty -> .)

    expresioni                     shift and go to state 131
    empty                          shift and go to state 133

state 58

    (75) expresion4 -> expresion5 . expresion4i
    (76) expresion4i -> . XOR expresion4
    (77) expresion4i -> . empty
    (129) empty -> .

    XOR             shift and go to state 134
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 135
    expresion4i                    shift and go to state 136

state 59

    (72) expresion3 -> expresion4 . expresion3i
    (73) expresion3i -> . ORB expresion3
    (74) expresion3i -> . empty
    (129) empty -> .

    ORB             shift and go to state 138
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    expresion3i                    shift and go to state 137
    empty                          shift and go to state 139

state 60

    (81) expresion6 -> expresion7 . expresion6i
    (82) expresion6i -> . EQ expresion6
    (83) expresion6i -> . DIF expresion6
    (84) expresion6i -> . empty
    (129) empty -> .

    EQ              shift and go to state 142
    DIF             shift and go to state 141
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 143
    expresion6i                    shift and go to state 140

state 61

    (78) expresion5 -> expresion6 . expresion5i
    (79) expresion5i -> . ANDB expresion5
    (80) expresion5i -> . empty
    (129) empty -> .

    ANDB            shift and go to state 145
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    expresion5i                    shift and go to state 144
    empty                          shift and go to state 146

state 62

    (85) expresion7 -> expresion8 . expresion7i
    (86) expresion7i -> . SHR expresion7
    (87) expresion7i -> . SHL expresion7
    (88) expresion7i -> . empty
    (129) empty -> .

    SHR             shift and go to state 147
    SHL             shift and go to state 149
    EQ              reduce using rule 129 (empty -> .)
    DIF             reduce using rule 129 (empty -> .)
    ANDB            reduce using rule 129 (empty -> .)
    XOR             reduce using rule 129 (empty -> .)
    ORB             reduce using rule 129 (empty -> .)
    AND             reduce using rule 129 (empty -> .)
    OR              reduce using rule 129 (empty -> .)
    SEMIC           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 150
    expresion7i                    shift and go to state 148

state 63

    (107) exponencial -> LPAREN . expresion RPAREN
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 151

state 64

    (118) id -> ID . llamarfuncion
    (119) id -> ID .
    (121) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN

    ASEQ            reduce using rule 119 (id -> ID .)
    PLUSEQ          reduce using rule 119 (id -> ID .)
    MINEQ           reduce using rule 119 (id -> ID .)
    MULTEQ          reduce using rule 119 (id -> ID .)
    DIVEQ           reduce using rule 119 (id -> ID .)
    EXP             reduce using rule 119 (id -> ID .)
    STAR            reduce using rule 119 (id -> ID .)
    SLASH           reduce using rule 119 (id -> ID .)
    MOD             reduce using rule 119 (id -> ID .)
    PLUS            reduce using rule 119 (id -> ID .)
    MINUS           reduce using rule 119 (id -> ID .)
    GREATERTHAN     reduce using rule 119 (id -> ID .)
    LESSTHAN        reduce using rule 119 (id -> ID .)
    GREATEREQUAL    reduce using rule 119 (id -> ID .)
    LESSEQUAL       reduce using rule 119 (id -> ID .)
    SHR             reduce using rule 119 (id -> ID .)
    SHL             reduce using rule 119 (id -> ID .)
    EQ              reduce using rule 119 (id -> ID .)
    DIF             reduce using rule 119 (id -> ID .)
    ANDB            reduce using rule 119 (id -> ID .)
    XOR             reduce using rule 119 (id -> ID .)
    ORB             reduce using rule 119 (id -> ID .)
    AND             reduce using rule 119 (id -> ID .)
    OR              reduce using rule 119 (id -> ID .)
    SEMIC           reduce using rule 119 (id -> ID .)
    LPAREN          shift and go to state 153

    llamarfuncion                  shift and go to state 152

state 65

    (28) asign -> expresion .

    WHERE           reduce using rule 28 (asign -> expresion .)
    COMMA           reduce using rule 28 (asign -> expresion .)
    RPAREN          reduce using rule 28 (asign -> expresion .)
    IF              reduce using rule 28 (asign -> expresion .)
    PRINT           reduce using rule 28 (asign -> expresion .)
    FOR             reduce using rule 28 (asign -> expresion .)
    RETURN          reduce using rule 28 (asign -> expresion .)
    BUILD           reduce using rule 28 (asign -> expresion .)
    CONDITION       reduce using rule 28 (asign -> expresion .)
    TINT            reduce using rule 28 (asign -> expresion .)
    TBOOL           reduce using rule 28 (asign -> expresion .)
    TFLOAT          reduce using rule 28 (asign -> expresion .)
    ID              reduce using rule 28 (asign -> expresion .)
    LPAREN          reduce using rule 28 (asign -> expresion .)
    NOT             reduce using rule 28 (asign -> expresion .)
    MM              reduce using rule 28 (asign -> expresion .)
    PP              reduce using rule 28 (asign -> expresion .)
    NEW             reduce using rule 28 (asign -> expresion .)
    CTEI            reduce using rule 28 (asign -> expresion .)
    CTEF            reduce using rule 28 (asign -> expresion .)
    RCURLY          reduce using rule 28 (asign -> expresion .)
    LCURLY          reduce using rule 28 (asign -> expresion .)
    SEMIC           reduce using rule 28 (asign -> expresion .)


state 66

    (110) exponencial2 -> MM .

    ID              reduce using rule 110 (exponencial2 -> MM .)
    CTEI            reduce using rule 110 (exponencial2 -> MM .)
    CTEF            reduce using rule 110 (exponencial2 -> MM .)


state 67

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (129) empty -> .
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expresion3                     shift and go to state 46
    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 55
    asignmany                      shift and go to state 154
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 67

state 68

    (109) exponencial2 -> NOT .

    ID              reduce using rule 109 (exponencial2 -> NOT .)
    CTEI            reduce using rule 109 (exponencial2 -> NOT .)
    CTEF            reduce using rule 109 (exponencial2 -> NOT .)


state 69

    (11) optimize -> MIN LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 82
    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 155
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    asign                          shift and go to state 85
    wherecondition                 shift and go to state 87

state 70

    (8) model -> optimize where .

    IF              reduce using rule 8 (model -> optimize where .)
    PRINT           reduce using rule 8 (model -> optimize where .)
    FOR             reduce using rule 8 (model -> optimize where .)
    RETURN          reduce using rule 8 (model -> optimize where .)
    BUILD           reduce using rule 8 (model -> optimize where .)
    CONDITION       reduce using rule 8 (model -> optimize where .)
    TINT            reduce using rule 8 (model -> optimize where .)
    TBOOL           reduce using rule 8 (model -> optimize where .)
    TFLOAT          reduce using rule 8 (model -> optimize where .)
    ID              reduce using rule 8 (model -> optimize where .)
    LPAREN          reduce using rule 8 (model -> optimize where .)
    NOT             reduce using rule 8 (model -> optimize where .)
    MM              reduce using rule 8 (model -> optimize where .)
    PP              reduce using rule 8 (model -> optimize where .)
    NEW             reduce using rule 8 (model -> optimize where .)
    RCURLY          reduce using rule 8 (model -> optimize where .)
    CTEI            reduce using rule 8 (model -> optimize where .)
    CTEF            reduce using rule 8 (model -> optimize where .)


state 71

    (14) where -> WHERE . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 156


state 72

    (65) return -> RETURN . asign
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 157

state 73

    (37) write -> PRINT . asign write2
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 158

state 74

    (20) statement -> ciclo .

    IF              reduce using rule 20 (statement -> ciclo .)
    PRINT           reduce using rule 20 (statement -> ciclo .)
    FOR             reduce using rule 20 (statement -> ciclo .)
    RETURN          reduce using rule 20 (statement -> ciclo .)
    BUILD           reduce using rule 20 (statement -> ciclo .)
    CONDITION       reduce using rule 20 (statement -> ciclo .)
    TINT            reduce using rule 20 (statement -> ciclo .)
    TBOOL           reduce using rule 20 (statement -> ciclo .)
    TFLOAT          reduce using rule 20 (statement -> ciclo .)
    ID              reduce using rule 20 (statement -> ciclo .)
    LPAREN          reduce using rule 20 (statement -> ciclo .)
    NOT             reduce using rule 20 (statement -> ciclo .)
    MM              reduce using rule 20 (statement -> ciclo .)
    PP              reduce using rule 20 (statement -> ciclo .)
    NEW             reduce using rule 20 (statement -> ciclo .)
    CTEI            reduce using rule 20 (statement -> ciclo .)
    CTEF            reduce using rule 20 (statement -> ciclo .)
    RCURLY          reduce using rule 20 (statement -> ciclo .)
    WHERE           reduce using rule 20 (statement -> ciclo .)


state 75

    (19) statement -> write .

    IF              reduce using rule 19 (statement -> write .)
    PRINT           reduce using rule 19 (statement -> write .)
    FOR             reduce using rule 19 (statement -> write .)
    RETURN          reduce using rule 19 (statement -> write .)
    BUILD           reduce using rule 19 (statement -> write .)
    CONDITION       reduce using rule 19 (statement -> write .)
    TINT            reduce using rule 19 (statement -> write .)
    TBOOL           reduce using rule 19 (statement -> write .)
    TFLOAT          reduce using rule 19 (statement -> write .)
    ID              reduce using rule 19 (statement -> write .)
    LPAREN          reduce using rule 19 (statement -> write .)
    NOT             reduce using rule 19 (statement -> write .)
    MM              reduce using rule 19 (statement -> write .)
    PP              reduce using rule 19 (statement -> write .)
    NEW             reduce using rule 19 (statement -> write .)
    CTEI            reduce using rule 19 (statement -> write .)
    CTEF            reduce using rule 19 (statement -> write .)
    RCURLY          reduce using rule 19 (statement -> write .)
    WHERE           reduce using rule 19 (statement -> write .)


state 76

    (22) statement -> build .

    IF              reduce using rule 22 (statement -> build .)
    PRINT           reduce using rule 22 (statement -> build .)
    FOR             reduce using rule 22 (statement -> build .)
    RETURN          reduce using rule 22 (statement -> build .)
    BUILD           reduce using rule 22 (statement -> build .)
    CONDITION       reduce using rule 22 (statement -> build .)
    TINT            reduce using rule 22 (statement -> build .)
    TBOOL           reduce using rule 22 (statement -> build .)
    TFLOAT          reduce using rule 22 (statement -> build .)
    ID              reduce using rule 22 (statement -> build .)
    LPAREN          reduce using rule 22 (statement -> build .)
    NOT             reduce using rule 22 (statement -> build .)
    MM              reduce using rule 22 (statement -> build .)
    PP              reduce using rule 22 (statement -> build .)
    NEW             reduce using rule 22 (statement -> build .)
    CTEI            reduce using rule 22 (statement -> build .)
    CTEF            reduce using rule 22 (statement -> build .)
    RCURLY          reduce using rule 22 (statement -> build .)
    WHERE           reduce using rule 22 (statement -> build .)


state 77

    (63) bloque2 -> statement . bloque2
    (63) bloque2 -> . statement bloque2
    (64) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (129) empty -> .
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 82
    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 77
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 79
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    bloque2                        shift and go to state 159
    asign                          shift and go to state 85
    wherecondition                 shift and go to state 87

state 78

    (34) condition -> IF . asign bloque condition1
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 160

state 79

    (64) bloque2 -> empty .
    (113) exponencial2 -> empty .

    RCURLY          reduce using rule 64 (bloque2 -> empty .)
    ID              reduce using rule 113 (exponencial2 -> empty .)
    CTEI            reduce using rule 113 (exponencial2 -> empty .)
    CTEF            reduce using rule 113 (exponencial2 -> empty .)


state 80

    (21) statement -> return .

    IF              reduce using rule 21 (statement -> return .)
    PRINT           reduce using rule 21 (statement -> return .)
    FOR             reduce using rule 21 (statement -> return .)
    RETURN          reduce using rule 21 (statement -> return .)
    BUILD           reduce using rule 21 (statement -> return .)
    CONDITION       reduce using rule 21 (statement -> return .)
    TINT            reduce using rule 21 (statement -> return .)
    TBOOL           reduce using rule 21 (statement -> return .)
    TFLOAT          reduce using rule 21 (statement -> return .)
    ID              reduce using rule 21 (statement -> return .)
    LPAREN          reduce using rule 21 (statement -> return .)
    NOT             reduce using rule 21 (statement -> return .)
    MM              reduce using rule 21 (statement -> return .)
    PP              reduce using rule 21 (statement -> return .)
    NEW             reduce using rule 21 (statement -> return .)
    CTEI            reduce using rule 21 (statement -> return .)
    CTEF            reduce using rule 21 (statement -> return .)
    RCURLY          reduce using rule 21 (statement -> return .)
    WHERE           reduce using rule 21 (statement -> return .)


state 81

    (40) ciclo -> FOR . asign bloque
    (41) ciclo -> FOR . ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (42) ciclo1 -> . asign
    (43) ciclo1 -> .
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    SEMIC           reduce using rule 43 (ciclo1 -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    ciclo1                         shift and go to state 161
    expresion                      shift and go to state 65
    asign                          shift and go to state 162

state 82

    (16) statement -> declaration .

    IF              reduce using rule 16 (statement -> declaration .)
    PRINT           reduce using rule 16 (statement -> declaration .)
    FOR             reduce using rule 16 (statement -> declaration .)
    RETURN          reduce using rule 16 (statement -> declaration .)
    BUILD           reduce using rule 16 (statement -> declaration .)
    CONDITION       reduce using rule 16 (statement -> declaration .)
    TINT            reduce using rule 16 (statement -> declaration .)
    TBOOL           reduce using rule 16 (statement -> declaration .)
    TFLOAT          reduce using rule 16 (statement -> declaration .)
    ID              reduce using rule 16 (statement -> declaration .)
    LPAREN          reduce using rule 16 (statement -> declaration .)
    NOT             reduce using rule 16 (statement -> declaration .)
    MM              reduce using rule 16 (statement -> declaration .)
    PP              reduce using rule 16 (statement -> declaration .)
    NEW             reduce using rule 16 (statement -> declaration .)
    CTEI            reduce using rule 16 (statement -> declaration .)
    CTEF            reduce using rule 16 (statement -> declaration .)
    RCURLY          reduce using rule 16 (statement -> declaration .)
    WHERE           reduce using rule 16 (statement -> declaration .)


state 83

    (18) statement -> condition .

    IF              reduce using rule 18 (statement -> condition .)
    PRINT           reduce using rule 18 (statement -> condition .)
    FOR             reduce using rule 18 (statement -> condition .)
    RETURN          reduce using rule 18 (statement -> condition .)
    BUILD           reduce using rule 18 (statement -> condition .)
    CONDITION       reduce using rule 18 (statement -> condition .)
    TINT            reduce using rule 18 (statement -> condition .)
    TBOOL           reduce using rule 18 (statement -> condition .)
    TFLOAT          reduce using rule 18 (statement -> condition .)
    ID              reduce using rule 18 (statement -> condition .)
    LPAREN          reduce using rule 18 (statement -> condition .)
    NOT             reduce using rule 18 (statement -> condition .)
    MM              reduce using rule 18 (statement -> condition .)
    PP              reduce using rule 18 (statement -> condition .)
    NEW             reduce using rule 18 (statement -> condition .)
    CTEI            reduce using rule 18 (statement -> condition .)
    CTEF            reduce using rule 18 (statement -> condition .)
    RCURLY          reduce using rule 18 (statement -> condition .)
    WHERE           reduce using rule 18 (statement -> condition .)


state 84

    (62) bloque -> LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 163


state 85

    (17) statement -> asign .

    IF              reduce using rule 17 (statement -> asign .)
    PRINT           reduce using rule 17 (statement -> asign .)
    FOR             reduce using rule 17 (statement -> asign .)
    RETURN          reduce using rule 17 (statement -> asign .)
    BUILD           reduce using rule 17 (statement -> asign .)
    CONDITION       reduce using rule 17 (statement -> asign .)
    TINT            reduce using rule 17 (statement -> asign .)
    TBOOL           reduce using rule 17 (statement -> asign .)
    TFLOAT          reduce using rule 17 (statement -> asign .)
    ID              reduce using rule 17 (statement -> asign .)
    LPAREN          reduce using rule 17 (statement -> asign .)
    NOT             reduce using rule 17 (statement -> asign .)
    MM              reduce using rule 17 (statement -> asign .)
    PP              reduce using rule 17 (statement -> asign .)
    NEW             reduce using rule 17 (statement -> asign .)
    CTEI            reduce using rule 17 (statement -> asign .)
    CTEF            reduce using rule 17 (statement -> asign .)
    RCURLY          reduce using rule 17 (statement -> asign .)
    WHERE           reduce using rule 17 (statement -> asign .)


state 86

    (15) wherecondition -> CONDITION . expresion SEMIC
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 164

state 87

    (23) statement -> wherecondition .

    IF              reduce using rule 23 (statement -> wherecondition .)
    PRINT           reduce using rule 23 (statement -> wherecondition .)
    FOR             reduce using rule 23 (statement -> wherecondition .)
    RETURN          reduce using rule 23 (statement -> wherecondition .)
    BUILD           reduce using rule 23 (statement -> wherecondition .)
    CONDITION       reduce using rule 23 (statement -> wherecondition .)
    TINT            reduce using rule 23 (statement -> wherecondition .)
    TBOOL           reduce using rule 23 (statement -> wherecondition .)
    TFLOAT          reduce using rule 23 (statement -> wherecondition .)
    ID              reduce using rule 23 (statement -> wherecondition .)
    LPAREN          reduce using rule 23 (statement -> wherecondition .)
    NOT             reduce using rule 23 (statement -> wherecondition .)
    MM              reduce using rule 23 (statement -> wherecondition .)
    PP              reduce using rule 23 (statement -> wherecondition .)
    NEW             reduce using rule 23 (statement -> wherecondition .)
    CTEI            reduce using rule 23 (statement -> wherecondition .)
    CTEF            reduce using rule 23 (statement -> wherecondition .)
    RCURLY          reduce using rule 23 (statement -> wherecondition .)
    WHERE           reduce using rule 23 (statement -> wherecondition .)


state 88

    (13) build -> BUILD . expresion SEMIC
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 165

state 89

    (12) optimize -> MAX LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 82
    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 166
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    asign                          shift and go to state 85
    wherecondition                 shift and go to state 87

state 90

    (1) program -> functions MODEL LCURLY vars data model bloque2 . RCURLY

    RCURLY          shift and go to state 167


state 91

    (48) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .

    FUNC            reduce using rule 48 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)
    MODEL           reduce using rule 48 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)


state 92

    (53) funcion3 -> LPAREN type . RPAREN

    RPAREN          shift and go to state 168


state 93

    (51) funcion2 -> COMMA type . ID funcion2

    ID              shift and go to state 169


state 94

    (57) declaration -> type dimensions POINTS . ID dec22 SEMIC

    ID              shift and go to state 170


state 95

    (113) exponencial2 -> empty .

    ID              reduce using rule 113 (exponencial2 -> empty .)
    CTEI            reduce using rule 113 (exponencial2 -> empty .)
    CTEF            reduce using rule 113 (exponencial2 -> empty .)


state 96

    (58) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 171


state 97

    (70) expresion2i -> AND . expresion2
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 172
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62

state 98

    (69) expresion2 -> expresion3 expresion2i .

    OR              reduce using rule 69 (expresion2 -> expresion3 expresion2i .)
    SEMIC           reduce using rule 69 (expresion2 -> expresion3 expresion2i .)


state 99

    (71) expresion2i -> empty .

    OR              reduce using rule 71 (expresion2i -> empty .)
    SEMIC           reduce using rule 71 (expresion2i -> empty .)


state 100

    (95) expresion9 -> termino expresion9i .

    GREATERTHAN     reduce using rule 95 (expresion9 -> termino expresion9i .)
    LESSTHAN        reduce using rule 95 (expresion9 -> termino expresion9i .)
    GREATEREQUAL    reduce using rule 95 (expresion9 -> termino expresion9i .)
    LESSEQUAL       reduce using rule 95 (expresion9 -> termino expresion9i .)
    SHR             reduce using rule 95 (expresion9 -> termino expresion9i .)
    SHL             reduce using rule 95 (expresion9 -> termino expresion9i .)
    EQ              reduce using rule 95 (expresion9 -> termino expresion9i .)
    DIF             reduce using rule 95 (expresion9 -> termino expresion9i .)
    ANDB            reduce using rule 95 (expresion9 -> termino expresion9i .)
    XOR             reduce using rule 95 (expresion9 -> termino expresion9i .)
    ORB             reduce using rule 95 (expresion9 -> termino expresion9i .)
    AND             reduce using rule 95 (expresion9 -> termino expresion9i .)
    OR              reduce using rule 95 (expresion9 -> termino expresion9i .)
    SEMIC           reduce using rule 95 (expresion9 -> termino expresion9i .)


state 101

    (96) expresion9i -> PLUS . expresion9
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 173
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 102

    (97) expresion9i -> MINUS . expresion9
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 174
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 103

    (98) expresion9i -> empty .

    GREATERTHAN     reduce using rule 98 (expresion9i -> empty .)
    LESSTHAN        reduce using rule 98 (expresion9i -> empty .)
    GREATEREQUAL    reduce using rule 98 (expresion9i -> empty .)
    LESSEQUAL       reduce using rule 98 (expresion9i -> empty .)
    SHR             reduce using rule 98 (expresion9i -> empty .)
    SHL             reduce using rule 98 (expresion9i -> empty .)
    EQ              reduce using rule 98 (expresion9i -> empty .)
    DIF             reduce using rule 98 (expresion9i -> empty .)
    ANDB            reduce using rule 98 (expresion9i -> empty .)
    XOR             reduce using rule 98 (expresion9i -> empty .)
    ORB             reduce using rule 98 (expresion9i -> empty .)
    AND             reduce using rule 98 (expresion9i -> empty .)
    OR              reduce using rule 98 (expresion9i -> empty .)
    SEMIC           reduce using rule 98 (expresion9i -> empty .)


state 104

    (30) asign_signo -> PLUSEQ .

    LPAREN          reduce using rule 30 (asign_signo -> PLUSEQ .)
    NOT             reduce using rule 30 (asign_signo -> PLUSEQ .)
    MM              reduce using rule 30 (asign_signo -> PLUSEQ .)
    PP              reduce using rule 30 (asign_signo -> PLUSEQ .)
    NEW             reduce using rule 30 (asign_signo -> PLUSEQ .)
    ID              reduce using rule 30 (asign_signo -> PLUSEQ .)
    CTEI            reduce using rule 30 (asign_signo -> PLUSEQ .)
    CTEF            reduce using rule 30 (asign_signo -> PLUSEQ .)


state 105

    (29) asign_signo -> ASEQ .

    LPAREN          reduce using rule 29 (asign_signo -> ASEQ .)
    NOT             reduce using rule 29 (asign_signo -> ASEQ .)
    MM              reduce using rule 29 (asign_signo -> ASEQ .)
    PP              reduce using rule 29 (asign_signo -> ASEQ .)
    NEW             reduce using rule 29 (asign_signo -> ASEQ .)
    ID              reduce using rule 29 (asign_signo -> ASEQ .)
    CTEI            reduce using rule 29 (asign_signo -> ASEQ .)
    CTEF            reduce using rule 29 (asign_signo -> ASEQ .)


state 106

    (31) asign_signo -> MINEQ .

    LPAREN          reduce using rule 31 (asign_signo -> MINEQ .)
    NOT             reduce using rule 31 (asign_signo -> MINEQ .)
    MM              reduce using rule 31 (asign_signo -> MINEQ .)
    PP              reduce using rule 31 (asign_signo -> MINEQ .)
    NEW             reduce using rule 31 (asign_signo -> MINEQ .)
    ID              reduce using rule 31 (asign_signo -> MINEQ .)
    CTEI            reduce using rule 31 (asign_signo -> MINEQ .)
    CTEF            reduce using rule 31 (asign_signo -> MINEQ .)


state 107

    (32) asign_signo -> MULTEQ .

    LPAREN          reduce using rule 32 (asign_signo -> MULTEQ .)
    NOT             reduce using rule 32 (asign_signo -> MULTEQ .)
    MM              reduce using rule 32 (asign_signo -> MULTEQ .)
    PP              reduce using rule 32 (asign_signo -> MULTEQ .)
    NEW             reduce using rule 32 (asign_signo -> MULTEQ .)
    ID              reduce using rule 32 (asign_signo -> MULTEQ .)
    CTEI            reduce using rule 32 (asign_signo -> MULTEQ .)
    CTEF            reduce using rule 32 (asign_signo -> MULTEQ .)


state 108

    (27) asign -> id asign_signo . expresion
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 175

state 109

    (33) asign_signo -> DIVEQ .

    LPAREN          reduce using rule 33 (asign_signo -> DIVEQ .)
    NOT             reduce using rule 33 (asign_signo -> DIVEQ .)
    MM              reduce using rule 33 (asign_signo -> DIVEQ .)
    PP              reduce using rule 33 (asign_signo -> DIVEQ .)
    NEW             reduce using rule 33 (asign_signo -> DIVEQ .)
    ID              reduce using rule 33 (asign_signo -> DIVEQ .)
    CTEI            reduce using rule 33 (asign_signo -> DIVEQ .)
    CTEF            reduce using rule 33 (asign_signo -> DIVEQ .)


state 110

    (115) valor -> int .

    EXP             reduce using rule 115 (valor -> int .)
    STAR            reduce using rule 115 (valor -> int .)
    SLASH           reduce using rule 115 (valor -> int .)
    MOD             reduce using rule 115 (valor -> int .)
    PLUS            reduce using rule 115 (valor -> int .)
    MINUS           reduce using rule 115 (valor -> int .)
    GREATERTHAN     reduce using rule 115 (valor -> int .)
    LESSTHAN        reduce using rule 115 (valor -> int .)
    GREATEREQUAL    reduce using rule 115 (valor -> int .)
    LESSEQUAL       reduce using rule 115 (valor -> int .)
    SHR             reduce using rule 115 (valor -> int .)
    SHL             reduce using rule 115 (valor -> int .)
    EQ              reduce using rule 115 (valor -> int .)
    DIF             reduce using rule 115 (valor -> int .)
    ANDB            reduce using rule 115 (valor -> int .)
    XOR             reduce using rule 115 (valor -> int .)
    ORB             reduce using rule 115 (valor -> int .)
    AND             reduce using rule 115 (valor -> int .)
    OR              reduce using rule 115 (valor -> int .)
    SEMIC           reduce using rule 115 (valor -> int .)


state 111

    (116) valor -> float .

    EXP             reduce using rule 116 (valor -> float .)
    STAR            reduce using rule 116 (valor -> float .)
    SLASH           reduce using rule 116 (valor -> float .)
    MOD             reduce using rule 116 (valor -> float .)
    PLUS            reduce using rule 116 (valor -> float .)
    MINUS           reduce using rule 116 (valor -> float .)
    GREATERTHAN     reduce using rule 116 (valor -> float .)
    LESSTHAN        reduce using rule 116 (valor -> float .)
    GREATEREQUAL    reduce using rule 116 (valor -> float .)
    LESSEQUAL       reduce using rule 116 (valor -> float .)
    SHR             reduce using rule 116 (valor -> float .)
    SHL             reduce using rule 116 (valor -> float .)
    EQ              reduce using rule 116 (valor -> float .)
    DIF             reduce using rule 116 (valor -> float .)
    ANDB            reduce using rule 116 (valor -> float .)
    XOR             reduce using rule 116 (valor -> float .)
    ORB             reduce using rule 116 (valor -> float .)
    AND             reduce using rule 116 (valor -> float .)
    OR              reduce using rule 116 (valor -> float .)
    SEMIC           reduce using rule 116 (valor -> float .)


state 112

    (114) valor -> id .

    EXP             reduce using rule 114 (valor -> id .)
    STAR            reduce using rule 114 (valor -> id .)
    SLASH           reduce using rule 114 (valor -> id .)
    MOD             reduce using rule 114 (valor -> id .)
    PLUS            reduce using rule 114 (valor -> id .)
    MINUS           reduce using rule 114 (valor -> id .)
    GREATERTHAN     reduce using rule 114 (valor -> id .)
    LESSTHAN        reduce using rule 114 (valor -> id .)
    GREATEREQUAL    reduce using rule 114 (valor -> id .)
    LESSEQUAL       reduce using rule 114 (valor -> id .)
    SHR             reduce using rule 114 (valor -> id .)
    SHL             reduce using rule 114 (valor -> id .)
    EQ              reduce using rule 114 (valor -> id .)
    DIF             reduce using rule 114 (valor -> id .)
    ANDB            reduce using rule 114 (valor -> id .)
    XOR             reduce using rule 114 (valor -> id .)
    ORB             reduce using rule 114 (valor -> id .)
    AND             reduce using rule 114 (valor -> id .)
    OR              reduce using rule 114 (valor -> id .)
    SEMIC           reduce using rule 114 (valor -> id .)


state 113

    (120) float -> CTEF .

    EXP             reduce using rule 120 (float -> CTEF .)
    STAR            reduce using rule 120 (float -> CTEF .)
    SLASH           reduce using rule 120 (float -> CTEF .)
    MOD             reduce using rule 120 (float -> CTEF .)
    PLUS            reduce using rule 120 (float -> CTEF .)
    MINUS           reduce using rule 120 (float -> CTEF .)
    GREATERTHAN     reduce using rule 120 (float -> CTEF .)
    LESSTHAN        reduce using rule 120 (float -> CTEF .)
    GREATEREQUAL    reduce using rule 120 (float -> CTEF .)
    LESSEQUAL       reduce using rule 120 (float -> CTEF .)
    SHR             reduce using rule 120 (float -> CTEF .)
    SHL             reduce using rule 120 (float -> CTEF .)
    EQ              reduce using rule 120 (float -> CTEF .)
    DIF             reduce using rule 120 (float -> CTEF .)
    ANDB            reduce using rule 120 (float -> CTEF .)
    XOR             reduce using rule 120 (float -> CTEF .)
    ORB             reduce using rule 120 (float -> CTEF .)
    AND             reduce using rule 120 (float -> CTEF .)
    OR              reduce using rule 120 (float -> CTEF .)
    SEMIC           reduce using rule 120 (float -> CTEF .)


state 114

    (108) exponencial -> exponencial2 valor .

    EXP             reduce using rule 108 (exponencial -> exponencial2 valor .)
    STAR            reduce using rule 108 (exponencial -> exponencial2 valor .)
    SLASH           reduce using rule 108 (exponencial -> exponencial2 valor .)
    MOD             reduce using rule 108 (exponencial -> exponencial2 valor .)
    PLUS            reduce using rule 108 (exponencial -> exponencial2 valor .)
    MINUS           reduce using rule 108 (exponencial -> exponencial2 valor .)
    GREATERTHAN     reduce using rule 108 (exponencial -> exponencial2 valor .)
    LESSTHAN        reduce using rule 108 (exponencial -> exponencial2 valor .)
    GREATEREQUAL    reduce using rule 108 (exponencial -> exponencial2 valor .)
    LESSEQUAL       reduce using rule 108 (exponencial -> exponencial2 valor .)
    SHR             reduce using rule 108 (exponencial -> exponencial2 valor .)
    SHL             reduce using rule 108 (exponencial -> exponencial2 valor .)
    EQ              reduce using rule 108 (exponencial -> exponencial2 valor .)
    DIF             reduce using rule 108 (exponencial -> exponencial2 valor .)
    ANDB            reduce using rule 108 (exponencial -> exponencial2 valor .)
    XOR             reduce using rule 108 (exponencial -> exponencial2 valor .)
    ORB             reduce using rule 108 (exponencial -> exponencial2 valor .)
    AND             reduce using rule 108 (exponencial -> exponencial2 valor .)
    OR              reduce using rule 108 (exponencial -> exponencial2 valor .)
    SEMIC           reduce using rule 108 (exponencial -> exponencial2 valor .)


state 115

    (117) int -> CTEI .

    EXP             reduce using rule 117 (int -> CTEI .)
    STAR            reduce using rule 117 (int -> CTEI .)
    SLASH           reduce using rule 117 (int -> CTEI .)
    MOD             reduce using rule 117 (int -> CTEI .)
    PLUS            reduce using rule 117 (int -> CTEI .)
    MINUS           reduce using rule 117 (int -> CTEI .)
    GREATERTHAN     reduce using rule 117 (int -> CTEI .)
    LESSTHAN        reduce using rule 117 (int -> CTEI .)
    GREATEREQUAL    reduce using rule 117 (int -> CTEI .)
    LESSEQUAL       reduce using rule 117 (int -> CTEI .)
    SHR             reduce using rule 117 (int -> CTEI .)
    SHL             reduce using rule 117 (int -> CTEI .)
    EQ              reduce using rule 117 (int -> CTEI .)
    DIF             reduce using rule 117 (int -> CTEI .)
    ANDB            reduce using rule 117 (int -> CTEI .)
    XOR             reduce using rule 117 (int -> CTEI .)
    ORB             reduce using rule 117 (int -> CTEI .)
    AND             reduce using rule 117 (int -> CTEI .)
    OR              reduce using rule 117 (int -> CTEI .)
    SEMIC           reduce using rule 117 (int -> CTEI .)


state 116

    (92) expresion8i -> GREATEREQUAL . expresion8
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 176
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 117

    (89) expresion8 -> expresion9 expresion8i .

    SHR             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    SHL             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    EQ              reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    DIF             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    ANDB            reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    XOR             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    ORB             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    AND             reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    OR              reduce using rule 89 (expresion8 -> expresion9 expresion8i .)
    SEMIC           reduce using rule 89 (expresion8 -> expresion9 expresion8i .)


state 118

    (91) expresion8i -> LESSTHAN . expresion8
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 177
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 119

    (90) expresion8i -> GREATERTHAN . expresion8
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 178
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 120

    (93) expresion8i -> LESSEQUAL . expresion8
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 179
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 121

    (94) expresion8i -> empty .

    SHR             reduce using rule 94 (expresion8i -> empty .)
    SHL             reduce using rule 94 (expresion8i -> empty .)
    EQ              reduce using rule 94 (expresion8i -> empty .)
    DIF             reduce using rule 94 (expresion8i -> empty .)
    ANDB            reduce using rule 94 (expresion8i -> empty .)
    XOR             reduce using rule 94 (expresion8i -> empty .)
    ORB             reduce using rule 94 (expresion8i -> empty .)
    AND             reduce using rule 94 (expresion8i -> empty .)
    OR              reduce using rule 94 (expresion8i -> empty .)
    SEMIC           reduce using rule 94 (expresion8i -> empty .)


state 122

    (100) termino2 -> STAR . termino
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 51
    termino                        shift and go to state 180
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 123

    (99) termino -> factor termino2 .

    PLUS            reduce using rule 99 (termino -> factor termino2 .)
    MINUS           reduce using rule 99 (termino -> factor termino2 .)
    GREATERTHAN     reduce using rule 99 (termino -> factor termino2 .)
    LESSTHAN        reduce using rule 99 (termino -> factor termino2 .)
    GREATEREQUAL    reduce using rule 99 (termino -> factor termino2 .)
    LESSEQUAL       reduce using rule 99 (termino -> factor termino2 .)
    SHR             reduce using rule 99 (termino -> factor termino2 .)
    SHL             reduce using rule 99 (termino -> factor termino2 .)
    EQ              reduce using rule 99 (termino -> factor termino2 .)
    DIF             reduce using rule 99 (termino -> factor termino2 .)
    ANDB            reduce using rule 99 (termino -> factor termino2 .)
    XOR             reduce using rule 99 (termino -> factor termino2 .)
    ORB             reduce using rule 99 (termino -> factor termino2 .)
    AND             reduce using rule 99 (termino -> factor termino2 .)
    OR              reduce using rule 99 (termino -> factor termino2 .)
    SEMIC           reduce using rule 99 (termino -> factor termino2 .)


state 124

    (101) termino2 -> SLASH . termino
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 51
    termino                        shift and go to state 181
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 125

    (103) termino2 -> empty .

    PLUS            reduce using rule 103 (termino2 -> empty .)
    MINUS           reduce using rule 103 (termino2 -> empty .)
    GREATERTHAN     reduce using rule 103 (termino2 -> empty .)
    LESSTHAN        reduce using rule 103 (termino2 -> empty .)
    GREATEREQUAL    reduce using rule 103 (termino2 -> empty .)
    LESSEQUAL       reduce using rule 103 (termino2 -> empty .)
    SHR             reduce using rule 103 (termino2 -> empty .)
    SHL             reduce using rule 103 (termino2 -> empty .)
    EQ              reduce using rule 103 (termino2 -> empty .)
    DIF             reduce using rule 103 (termino2 -> empty .)
    ANDB            reduce using rule 103 (termino2 -> empty .)
    XOR             reduce using rule 103 (termino2 -> empty .)
    ORB             reduce using rule 103 (termino2 -> empty .)
    AND             reduce using rule 103 (termino2 -> empty .)
    OR              reduce using rule 103 (termino2 -> empty .)
    SEMIC           reduce using rule 103 (termino2 -> empty .)


state 126

    (102) termino2 -> MOD . termino
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    exponencial2                   shift and go to state 51
    termino                        shift and go to state 182
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 127

    (106) factor2 -> empty .

    STAR            reduce using rule 106 (factor2 -> empty .)
    SLASH           reduce using rule 106 (factor2 -> empty .)
    MOD             reduce using rule 106 (factor2 -> empty .)
    PLUS            reduce using rule 106 (factor2 -> empty .)
    MINUS           reduce using rule 106 (factor2 -> empty .)
    GREATERTHAN     reduce using rule 106 (factor2 -> empty .)
    LESSTHAN        reduce using rule 106 (factor2 -> empty .)
    GREATEREQUAL    reduce using rule 106 (factor2 -> empty .)
    LESSEQUAL       reduce using rule 106 (factor2 -> empty .)
    SHR             reduce using rule 106 (factor2 -> empty .)
    SHL             reduce using rule 106 (factor2 -> empty .)
    EQ              reduce using rule 106 (factor2 -> empty .)
    DIF             reduce using rule 106 (factor2 -> empty .)
    ANDB            reduce using rule 106 (factor2 -> empty .)
    XOR             reduce using rule 106 (factor2 -> empty .)
    ORB             reduce using rule 106 (factor2 -> empty .)
    AND             reduce using rule 106 (factor2 -> empty .)
    OR              reduce using rule 106 (factor2 -> empty .)
    SEMIC           reduce using rule 106 (factor2 -> empty .)


state 128

    (105) factor2 -> EXP . factor
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    factor                         shift and go to state 183
    exponencial2                   shift and go to state 51
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 129

    (104) factor -> exponencial factor2 .

    STAR            reduce using rule 104 (factor -> exponencial factor2 .)
    SLASH           reduce using rule 104 (factor -> exponencial factor2 .)
    MOD             reduce using rule 104 (factor -> exponencial factor2 .)
    PLUS            reduce using rule 104 (factor -> exponencial factor2 .)
    MINUS           reduce using rule 104 (factor -> exponencial factor2 .)
    GREATERTHAN     reduce using rule 104 (factor -> exponencial factor2 .)
    LESSTHAN        reduce using rule 104 (factor -> exponencial factor2 .)
    GREATEREQUAL    reduce using rule 104 (factor -> exponencial factor2 .)
    LESSEQUAL       reduce using rule 104 (factor -> exponencial factor2 .)
    SHR             reduce using rule 104 (factor -> exponencial factor2 .)
    SHL             reduce using rule 104 (factor -> exponencial factor2 .)
    EQ              reduce using rule 104 (factor -> exponencial factor2 .)
    DIF             reduce using rule 104 (factor -> exponencial factor2 .)
    ANDB            reduce using rule 104 (factor -> exponencial factor2 .)
    XOR             reduce using rule 104 (factor -> exponencial factor2 .)
    ORB             reduce using rule 104 (factor -> exponencial factor2 .)
    AND             reduce using rule 104 (factor -> exponencial factor2 .)
    OR              reduce using rule 104 (factor -> exponencial factor2 .)
    SEMIC           reduce using rule 104 (factor -> exponencial factor2 .)


state 130

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    LCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TINT            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TBOOL           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TFLOAT          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    LPAREN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    NOT             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MM              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PP              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    NEW             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEI            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEF            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 131

    (66) expresion -> expresion2 expresioni . SEMIC

    SEMIC           shift and go to state 184


state 132

    (67) expresioni -> OR . expresion
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 185

state 133

    (68) expresioni -> empty .

    SEMIC           reduce using rule 68 (expresioni -> empty .)


state 134

    (76) expresion4i -> XOR . expresion4
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 186
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    empty                          shift and go to state 95
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54

state 135

    (77) expresion4i -> empty .

    ORB             reduce using rule 77 (expresion4i -> empty .)
    AND             reduce using rule 77 (expresion4i -> empty .)
    OR              reduce using rule 77 (expresion4i -> empty .)
    SEMIC           reduce using rule 77 (expresion4i -> empty .)


state 136

    (75) expresion4 -> expresion5 expresion4i .

    ORB             reduce using rule 75 (expresion4 -> expresion5 expresion4i .)
    AND             reduce using rule 75 (expresion4 -> expresion5 expresion4i .)
    OR              reduce using rule 75 (expresion4 -> expresion5 expresion4i .)
    SEMIC           reduce using rule 75 (expresion4 -> expresion5 expresion4i .)


state 137

    (72) expresion3 -> expresion4 expresion3i .

    AND             reduce using rule 72 (expresion3 -> expresion4 expresion3i .)
    OR              reduce using rule 72 (expresion3 -> expresion4 expresion3i .)
    SEMIC           reduce using rule 72 (expresion3 -> expresion4 expresion3i .)


state 138

    (73) expresion3i -> ORB . expresion3
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    termino                        shift and go to state 47
    exponencial2                   shift and go to state 51
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 187
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    factor                         shift and go to state 53

state 139

    (74) expresion3i -> empty .

    AND             reduce using rule 74 (expresion3i -> empty .)
    OR              reduce using rule 74 (expresion3i -> empty .)
    SEMIC           reduce using rule 74 (expresion3i -> empty .)


state 140

    (81) expresion6 -> expresion7 expresion6i .

    ANDB            reduce using rule 81 (expresion6 -> expresion7 expresion6i .)
    XOR             reduce using rule 81 (expresion6 -> expresion7 expresion6i .)
    ORB             reduce using rule 81 (expresion6 -> expresion7 expresion6i .)
    AND             reduce using rule 81 (expresion6 -> expresion7 expresion6i .)
    OR              reduce using rule 81 (expresion6 -> expresion7 expresion6i .)
    SEMIC           reduce using rule 81 (expresion6 -> expresion7 expresion6i .)


state 141

    (83) expresion6i -> DIF . expresion6
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion6                     shift and go to state 188
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    expresion7                     shift and go to state 60
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 142

    (82) expresion6i -> EQ . expresion6
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion6                     shift and go to state 189
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    expresion7                     shift and go to state 60
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 143

    (84) expresion6i -> empty .

    ANDB            reduce using rule 84 (expresion6i -> empty .)
    XOR             reduce using rule 84 (expresion6i -> empty .)
    ORB             reduce using rule 84 (expresion6i -> empty .)
    AND             reduce using rule 84 (expresion6i -> empty .)
    OR              reduce using rule 84 (expresion6i -> empty .)
    SEMIC           reduce using rule 84 (expresion6i -> empty .)


state 144

    (78) expresion5 -> expresion6 expresion5i .

    XOR             reduce using rule 78 (expresion5 -> expresion6 expresion5i .)
    ORB             reduce using rule 78 (expresion5 -> expresion6 expresion5i .)
    AND             reduce using rule 78 (expresion5 -> expresion6 expresion5i .)
    OR              reduce using rule 78 (expresion5 -> expresion6 expresion5i .)
    SEMIC           reduce using rule 78 (expresion5 -> expresion6 expresion5i .)


state 145

    (79) expresion5i -> ANDB . expresion5
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion5                     shift and go to state 190
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    empty                          shift and go to state 95
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54

state 146

    (80) expresion5i -> empty .

    XOR             reduce using rule 80 (expresion5i -> empty .)
    ORB             reduce using rule 80 (expresion5i -> empty .)
    AND             reduce using rule 80 (expresion5i -> empty .)
    OR              reduce using rule 80 (expresion5i -> empty .)
    SEMIC           reduce using rule 80 (expresion5i -> empty .)


state 147

    (86) expresion7i -> SHR . expresion7
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion7                     shift and go to state 191
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 148

    (85) expresion7 -> expresion8 expresion7i .

    EQ              reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    DIF             reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    ANDB            reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    XOR             reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    ORB             reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    AND             reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    OR              reduce using rule 85 (expresion7 -> expresion8 expresion7i .)
    SEMIC           reduce using rule 85 (expresion7 -> expresion8 expresion7i .)


state 149

    (87) expresion7i -> SHL . expresion7
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    ID              reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

    expresion7                     shift and go to state 192
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    exponencial2                   shift and go to state 51
    termino                        shift and go to state 47
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95

state 150

    (88) expresion7i -> empty .

    EQ              reduce using rule 88 (expresion7i -> empty .)
    DIF             reduce using rule 88 (expresion7i -> empty .)
    ANDB            reduce using rule 88 (expresion7i -> empty .)
    XOR             reduce using rule 88 (expresion7i -> empty .)
    ORB             reduce using rule 88 (expresion7i -> empty .)
    AND             reduce using rule 88 (expresion7i -> empty .)
    OR              reduce using rule 88 (expresion7i -> empty .)
    SEMIC           reduce using rule 88 (expresion7i -> empty .)


state 151

    (107) exponencial -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 193


state 152

    (118) id -> ID llamarfuncion .

    ASEQ            reduce using rule 118 (id -> ID llamarfuncion .)
    PLUSEQ          reduce using rule 118 (id -> ID llamarfuncion .)
    MINEQ           reduce using rule 118 (id -> ID llamarfuncion .)
    MULTEQ          reduce using rule 118 (id -> ID llamarfuncion .)
    DIVEQ           reduce using rule 118 (id -> ID llamarfuncion .)
    EXP             reduce using rule 118 (id -> ID llamarfuncion .)
    STAR            reduce using rule 118 (id -> ID llamarfuncion .)
    SLASH           reduce using rule 118 (id -> ID llamarfuncion .)
    MOD             reduce using rule 118 (id -> ID llamarfuncion .)
    PLUS            reduce using rule 118 (id -> ID llamarfuncion .)
    MINUS           reduce using rule 118 (id -> ID llamarfuncion .)
    GREATERTHAN     reduce using rule 118 (id -> ID llamarfuncion .)
    LESSTHAN        reduce using rule 118 (id -> ID llamarfuncion .)
    GREATEREQUAL    reduce using rule 118 (id -> ID llamarfuncion .)
    LESSEQUAL       reduce using rule 118 (id -> ID llamarfuncion .)
    SHR             reduce using rule 118 (id -> ID llamarfuncion .)
    SHL             reduce using rule 118 (id -> ID llamarfuncion .)
    EQ              reduce using rule 118 (id -> ID llamarfuncion .)
    DIF             reduce using rule 118 (id -> ID llamarfuncion .)
    ANDB            reduce using rule 118 (id -> ID llamarfuncion .)
    XOR             reduce using rule 118 (id -> ID llamarfuncion .)
    ORB             reduce using rule 118 (id -> ID llamarfuncion .)
    AND             reduce using rule 118 (id -> ID llamarfuncion .)
    OR              reduce using rule 118 (id -> ID llamarfuncion .)
    SEMIC           reduce using rule 118 (id -> ID llamarfuncion .)


state 153

    (121) llamarfuncion -> LPAREN . llamarfuncion3 RPAREN
    (122) llamarfuncion3 -> . asign llamarfuncion33
    (123) llamarfuncion3 -> . empty
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (129) empty -> .
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RPAREN          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    expresion9                     shift and go to state 52
    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    llamarfuncion3                 shift and go to state 194
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 195
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 196

state 154

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 155

    (11) optimize -> MIN LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 71

    where                          shift and go to state 197

state 156

    (14) where -> WHERE LCURLY . bloque2 RCURLY
    (63) bloque2 -> . statement bloque2
    (64) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (129) empty -> .
    (57) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (34) condition -> . IF asign bloque condition1
    (37) write -> . PRINT asign write2
    (40) ciclo -> . FOR asign bloque
    (41) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (65) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (126) type -> . TINT
    (127) type -> . TBOOL
    (128) type -> . TFLOAT
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    IF              shift and go to state 78
    PRINT           shift and go to state 73
    FOR             shift and go to state 81
    RETURN          shift and go to state 72
    BUILD           shift and go to state 88
    CONDITION       shift and go to state 86
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48

  ! ID              [ reduce using rule 129 (empty -> .) ]

    declaration                    shift and go to state 82
    termino                        shift and go to state 47
    expresion5                     shift and go to state 58
    id                             shift and go to state 49
    ciclo                          shift and go to state 74
    exponencial2                   shift and go to state 51
    write                          shift and go to state 75
    expresion9                     shift and go to state 52
    build                          shift and go to state 76
    statement                      shift and go to state 77
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    type                           shift and go to state 27
    empty                          shift and go to state 79
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    return                         shift and go to state 80
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    condition                      shift and go to state 83
    expresion                      shift and go to state 65
    bloque2                        shift and go to state 198
    asign                          shift and go to state 85
    wherecondition                 shift and go to state 87

state 157

    (65) return -> RETURN asign .

    IF              reduce using rule 65 (return -> RETURN asign .)
    PRINT           reduce using rule 65 (return -> RETURN asign .)
    FOR             reduce using rule 65 (return -> RETURN asign .)
    RETURN          reduce using rule 65 (return -> RETURN asign .)
    BUILD           reduce using rule 65 (return -> RETURN asign .)
    CONDITION       reduce using rule 65 (return -> RETURN asign .)
    TINT            reduce using rule 65 (return -> RETURN asign .)
    TBOOL           reduce using rule 65 (return -> RETURN asign .)
    TFLOAT          reduce using rule 65 (return -> RETURN asign .)
    ID              reduce using rule 65 (return -> RETURN asign .)
    LPAREN          reduce using rule 65 (return -> RETURN asign .)
    NOT             reduce using rule 65 (return -> RETURN asign .)
    MM              reduce using rule 65 (return -> RETURN asign .)
    PP              reduce using rule 65 (return -> RETURN asign .)
    NEW             reduce using rule 65 (return -> RETURN asign .)
    CTEI            reduce using rule 65 (return -> RETURN asign .)
    CTEF            reduce using rule 65 (return -> RETURN asign .)
    RCURLY          reduce using rule 65 (return -> RETURN asign .)
    WHERE           reduce using rule 65 (return -> RETURN asign .)


state 158

    (37) write -> PRINT asign . write2
    (38) write2 -> . COMMA asign write2
    (39) write2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 200
    IF              reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    BUILD           reduce using rule 129 (empty -> .)
    CONDITION       reduce using rule 129 (empty -> .)
    TINT            reduce using rule 129 (empty -> .)
    TBOOL           reduce using rule 129 (empty -> .)
    TFLOAT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    LPAREN          reduce using rule 129 (empty -> .)
    NOT             reduce using rule 129 (empty -> .)
    MM              reduce using rule 129 (empty -> .)
    PP              reduce using rule 129 (empty -> .)
    NEW             reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    RCURLY          reduce using rule 129 (empty -> .)
    WHERE           reduce using rule 129 (empty -> .)

    write2                         shift and go to state 199
    empty                          shift and go to state 201

state 159

    (63) bloque2 -> statement bloque2 .

    RCURLY          reduce using rule 63 (bloque2 -> statement bloque2 .)


state 160

    (34) condition -> IF asign . bloque condition1
    (62) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 32

    bloque                         shift and go to state 202

state 161

    (41) ciclo -> FOR ciclo1 . SEMIC ciclo2 SEMIC ciclo3 bloque

    SEMIC           shift and go to state 203


state 162

    (40) ciclo -> FOR asign . bloque
    (42) ciclo1 -> asign .
    (62) bloque -> . LCURLY bloque2 RCURLY

    SEMIC           reduce using rule 42 (ciclo1 -> asign .)
    LCURLY          shift and go to state 32

    bloque                         shift and go to state 204

state 163

    (62) bloque -> LCURLY bloque2 RCURLY .

    IF              reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    ID              reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    LPAREN          reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    NOT             reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    MM              reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    PP              reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    NEW             reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    CTEI            reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    CTEF            reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    ELSE            reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    WHERE           reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    FUNC            reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)
    MODEL           reduce using rule 62 (bloque -> LCURLY bloque2 RCURLY .)


state 164

    (15) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 205


state 165

    (13) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 206


state 166

    (12) optimize -> MAX LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 71

    where                          shift and go to state 207

state 167

    (1) program -> functions MODEL LCURLY vars data model bloque2 RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model bloque2 RCURLY .)


state 168

    (53) funcion3 -> LPAREN type RPAREN .

    LCURLY          reduce using rule 53 (funcion3 -> LPAREN type RPAREN .)


state 169

    (51) funcion2 -> COMMA type ID . funcion2
    (51) funcion2 -> . COMMA type ID funcion2
    (52) funcion2 -> .

    COMMA           shift and go to state 39
    RPAREN          reduce using rule 52 (funcion2 -> .)

    funcion2                       shift and go to state 208

state 170

    (57) declaration -> type dimensions POINTS ID . dec22 SEMIC
    (60) dec22 -> . COMMA ID dec22
    (61) dec22 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 209
    SEMIC           reduce using rule 129 (empty -> .)

    dec22                          shift and go to state 210
    empty                          shift and go to state 211

state 171

    (58) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (58) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (59) dimensions -> . empty
    (129) empty -> .

    LBRACKET        shift and go to state 44
    POINTS          reduce using rule 129 (empty -> .)

    dimensions                     shift and go to state 212
    empty                          shift and go to state 45

state 172

    (70) expresion2i -> AND expresion2 .

    OR              reduce using rule 70 (expresion2i -> AND expresion2 .)
    SEMIC           reduce using rule 70 (expresion2i -> AND expresion2 .)


state 173

    (96) expresion9i -> PLUS expresion9 .

    GREATERTHAN     reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    LESSTHAN        reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    GREATEREQUAL    reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    LESSEQUAL       reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    SHR             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    SHL             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    EQ              reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    DIF             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    ANDB            reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    XOR             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    ORB             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    AND             reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    OR              reduce using rule 96 (expresion9i -> PLUS expresion9 .)
    SEMIC           reduce using rule 96 (expresion9i -> PLUS expresion9 .)


state 174

    (97) expresion9i -> MINUS expresion9 .

    GREATERTHAN     reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    LESSTHAN        reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    GREATEREQUAL    reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    LESSEQUAL       reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    SHR             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    SHL             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    EQ              reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    DIF             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    ANDB            reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    XOR             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    ORB             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    AND             reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    OR              reduce using rule 97 (expresion9i -> MINUS expresion9 .)
    SEMIC           reduce using rule 97 (expresion9i -> MINUS expresion9 .)


state 175

    (27) asign -> id asign_signo expresion .

    WHERE           reduce using rule 27 (asign -> id asign_signo expresion .)
    COMMA           reduce using rule 27 (asign -> id asign_signo expresion .)
    RPAREN          reduce using rule 27 (asign -> id asign_signo expresion .)
    IF              reduce using rule 27 (asign -> id asign_signo expresion .)
    PRINT           reduce using rule 27 (asign -> id asign_signo expresion .)
    FOR             reduce using rule 27 (asign -> id asign_signo expresion .)
    RETURN          reduce using rule 27 (asign -> id asign_signo expresion .)
    BUILD           reduce using rule 27 (asign -> id asign_signo expresion .)
    CONDITION       reduce using rule 27 (asign -> id asign_signo expresion .)
    TINT            reduce using rule 27 (asign -> id asign_signo expresion .)
    TBOOL           reduce using rule 27 (asign -> id asign_signo expresion .)
    TFLOAT          reduce using rule 27 (asign -> id asign_signo expresion .)
    ID              reduce using rule 27 (asign -> id asign_signo expresion .)
    LPAREN          reduce using rule 27 (asign -> id asign_signo expresion .)
    NOT             reduce using rule 27 (asign -> id asign_signo expresion .)
    MM              reduce using rule 27 (asign -> id asign_signo expresion .)
    PP              reduce using rule 27 (asign -> id asign_signo expresion .)
    NEW             reduce using rule 27 (asign -> id asign_signo expresion .)
    CTEI            reduce using rule 27 (asign -> id asign_signo expresion .)
    CTEF            reduce using rule 27 (asign -> id asign_signo expresion .)
    RCURLY          reduce using rule 27 (asign -> id asign_signo expresion .)
    LCURLY          reduce using rule 27 (asign -> id asign_signo expresion .)
    SEMIC           reduce using rule 27 (asign -> id asign_signo expresion .)


state 176

    (92) expresion8i -> GREATEREQUAL expresion8 .

    SHR             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    SHL             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    EQ              reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    DIF             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    ANDB            reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    XOR             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    ORB             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    AND             reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    OR              reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)
    SEMIC           reduce using rule 92 (expresion8i -> GREATEREQUAL expresion8 .)


state 177

    (91) expresion8i -> LESSTHAN expresion8 .

    SHR             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    SHL             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    EQ              reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    DIF             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    ANDB            reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    XOR             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    ORB             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    AND             reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    OR              reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)
    SEMIC           reduce using rule 91 (expresion8i -> LESSTHAN expresion8 .)


state 178

    (90) expresion8i -> GREATERTHAN expresion8 .

    SHR             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    SHL             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    EQ              reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    DIF             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    ANDB            reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    XOR             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    ORB             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    AND             reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    OR              reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)
    SEMIC           reduce using rule 90 (expresion8i -> GREATERTHAN expresion8 .)


state 179

    (93) expresion8i -> LESSEQUAL expresion8 .

    SHR             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    SHL             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    EQ              reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    DIF             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    ANDB            reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    XOR             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    ORB             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    AND             reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    OR              reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)
    SEMIC           reduce using rule 93 (expresion8i -> LESSEQUAL expresion8 .)


state 180

    (100) termino2 -> STAR termino .

    PLUS            reduce using rule 100 (termino2 -> STAR termino .)
    MINUS           reduce using rule 100 (termino2 -> STAR termino .)
    GREATERTHAN     reduce using rule 100 (termino2 -> STAR termino .)
    LESSTHAN        reduce using rule 100 (termino2 -> STAR termino .)
    GREATEREQUAL    reduce using rule 100 (termino2 -> STAR termino .)
    LESSEQUAL       reduce using rule 100 (termino2 -> STAR termino .)
    SHR             reduce using rule 100 (termino2 -> STAR termino .)
    SHL             reduce using rule 100 (termino2 -> STAR termino .)
    EQ              reduce using rule 100 (termino2 -> STAR termino .)
    DIF             reduce using rule 100 (termino2 -> STAR termino .)
    ANDB            reduce using rule 100 (termino2 -> STAR termino .)
    XOR             reduce using rule 100 (termino2 -> STAR termino .)
    ORB             reduce using rule 100 (termino2 -> STAR termino .)
    AND             reduce using rule 100 (termino2 -> STAR termino .)
    OR              reduce using rule 100 (termino2 -> STAR termino .)
    SEMIC           reduce using rule 100 (termino2 -> STAR termino .)


state 181

    (101) termino2 -> SLASH termino .

    PLUS            reduce using rule 101 (termino2 -> SLASH termino .)
    MINUS           reduce using rule 101 (termino2 -> SLASH termino .)
    GREATERTHAN     reduce using rule 101 (termino2 -> SLASH termino .)
    LESSTHAN        reduce using rule 101 (termino2 -> SLASH termino .)
    GREATEREQUAL    reduce using rule 101 (termino2 -> SLASH termino .)
    LESSEQUAL       reduce using rule 101 (termino2 -> SLASH termino .)
    SHR             reduce using rule 101 (termino2 -> SLASH termino .)
    SHL             reduce using rule 101 (termino2 -> SLASH termino .)
    EQ              reduce using rule 101 (termino2 -> SLASH termino .)
    DIF             reduce using rule 101 (termino2 -> SLASH termino .)
    ANDB            reduce using rule 101 (termino2 -> SLASH termino .)
    XOR             reduce using rule 101 (termino2 -> SLASH termino .)
    ORB             reduce using rule 101 (termino2 -> SLASH termino .)
    AND             reduce using rule 101 (termino2 -> SLASH termino .)
    OR              reduce using rule 101 (termino2 -> SLASH termino .)
    SEMIC           reduce using rule 101 (termino2 -> SLASH termino .)


state 182

    (102) termino2 -> MOD termino .

    PLUS            reduce using rule 102 (termino2 -> MOD termino .)
    MINUS           reduce using rule 102 (termino2 -> MOD termino .)
    GREATERTHAN     reduce using rule 102 (termino2 -> MOD termino .)
    LESSTHAN        reduce using rule 102 (termino2 -> MOD termino .)
    GREATEREQUAL    reduce using rule 102 (termino2 -> MOD termino .)
    LESSEQUAL       reduce using rule 102 (termino2 -> MOD termino .)
    SHR             reduce using rule 102 (termino2 -> MOD termino .)
    SHL             reduce using rule 102 (termino2 -> MOD termino .)
    EQ              reduce using rule 102 (termino2 -> MOD termino .)
    DIF             reduce using rule 102 (termino2 -> MOD termino .)
    ANDB            reduce using rule 102 (termino2 -> MOD termino .)
    XOR             reduce using rule 102 (termino2 -> MOD termino .)
    ORB             reduce using rule 102 (termino2 -> MOD termino .)
    AND             reduce using rule 102 (termino2 -> MOD termino .)
    OR              reduce using rule 102 (termino2 -> MOD termino .)
    SEMIC           reduce using rule 102 (termino2 -> MOD termino .)


state 183

    (105) factor2 -> EXP factor .

    STAR            reduce using rule 105 (factor2 -> EXP factor .)
    SLASH           reduce using rule 105 (factor2 -> EXP factor .)
    MOD             reduce using rule 105 (factor2 -> EXP factor .)
    PLUS            reduce using rule 105 (factor2 -> EXP factor .)
    MINUS           reduce using rule 105 (factor2 -> EXP factor .)
    GREATERTHAN     reduce using rule 105 (factor2 -> EXP factor .)
    LESSTHAN        reduce using rule 105 (factor2 -> EXP factor .)
    GREATEREQUAL    reduce using rule 105 (factor2 -> EXP factor .)
    LESSEQUAL       reduce using rule 105 (factor2 -> EXP factor .)
    SHR             reduce using rule 105 (factor2 -> EXP factor .)
    SHL             reduce using rule 105 (factor2 -> EXP factor .)
    EQ              reduce using rule 105 (factor2 -> EXP factor .)
    DIF             reduce using rule 105 (factor2 -> EXP factor .)
    ANDB            reduce using rule 105 (factor2 -> EXP factor .)
    XOR             reduce using rule 105 (factor2 -> EXP factor .)
    ORB             reduce using rule 105 (factor2 -> EXP factor .)
    AND             reduce using rule 105 (factor2 -> EXP factor .)
    OR              reduce using rule 105 (factor2 -> EXP factor .)
    SEMIC           reduce using rule 105 (factor2 -> EXP factor .)


state 184

    (66) expresion -> expresion2 expresioni SEMIC .

    COMMA           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    IF              reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    PRINT           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    FOR             reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    RETURN          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    BUILD           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    CONDITION       reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    TINT            reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    TBOOL           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    TFLOAT          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    ID              reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    LPAREN          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    NOT             reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    MM              reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    PP              reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    NEW             reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    CTEI            reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    CTEF            reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    RCURLY          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    WHERE           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    LCURLY          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    SEMIC           reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    RPAREN          reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)
    RBRACKET        reduce using rule 66 (expresion -> expresion2 expresioni SEMIC .)


state 185

    (67) expresioni -> OR expresion .

    SEMIC           reduce using rule 67 (expresioni -> OR expresion .)


state 186

    (76) expresion4i -> XOR expresion4 .

    ORB             reduce using rule 76 (expresion4i -> XOR expresion4 .)
    AND             reduce using rule 76 (expresion4i -> XOR expresion4 .)
    OR              reduce using rule 76 (expresion4i -> XOR expresion4 .)
    SEMIC           reduce using rule 76 (expresion4i -> XOR expresion4 .)


state 187

    (73) expresion3i -> ORB expresion3 .

    AND             reduce using rule 73 (expresion3i -> ORB expresion3 .)
    OR              reduce using rule 73 (expresion3i -> ORB expresion3 .)
    SEMIC           reduce using rule 73 (expresion3i -> ORB expresion3 .)


state 188

    (83) expresion6i -> DIF expresion6 .

    ANDB            reduce using rule 83 (expresion6i -> DIF expresion6 .)
    XOR             reduce using rule 83 (expresion6i -> DIF expresion6 .)
    ORB             reduce using rule 83 (expresion6i -> DIF expresion6 .)
    AND             reduce using rule 83 (expresion6i -> DIF expresion6 .)
    OR              reduce using rule 83 (expresion6i -> DIF expresion6 .)
    SEMIC           reduce using rule 83 (expresion6i -> DIF expresion6 .)


state 189

    (82) expresion6i -> EQ expresion6 .

    ANDB            reduce using rule 82 (expresion6i -> EQ expresion6 .)
    XOR             reduce using rule 82 (expresion6i -> EQ expresion6 .)
    ORB             reduce using rule 82 (expresion6i -> EQ expresion6 .)
    AND             reduce using rule 82 (expresion6i -> EQ expresion6 .)
    OR              reduce using rule 82 (expresion6i -> EQ expresion6 .)
    SEMIC           reduce using rule 82 (expresion6i -> EQ expresion6 .)


state 190

    (79) expresion5i -> ANDB expresion5 .

    XOR             reduce using rule 79 (expresion5i -> ANDB expresion5 .)
    ORB             reduce using rule 79 (expresion5i -> ANDB expresion5 .)
    AND             reduce using rule 79 (expresion5i -> ANDB expresion5 .)
    OR              reduce using rule 79 (expresion5i -> ANDB expresion5 .)
    SEMIC           reduce using rule 79 (expresion5i -> ANDB expresion5 .)


state 191

    (86) expresion7i -> SHR expresion7 .

    EQ              reduce using rule 86 (expresion7i -> SHR expresion7 .)
    DIF             reduce using rule 86 (expresion7i -> SHR expresion7 .)
    ANDB            reduce using rule 86 (expresion7i -> SHR expresion7 .)
    XOR             reduce using rule 86 (expresion7i -> SHR expresion7 .)
    ORB             reduce using rule 86 (expresion7i -> SHR expresion7 .)
    AND             reduce using rule 86 (expresion7i -> SHR expresion7 .)
    OR              reduce using rule 86 (expresion7i -> SHR expresion7 .)
    SEMIC           reduce using rule 86 (expresion7i -> SHR expresion7 .)


state 192

    (87) expresion7i -> SHL expresion7 .

    EQ              reduce using rule 87 (expresion7i -> SHL expresion7 .)
    DIF             reduce using rule 87 (expresion7i -> SHL expresion7 .)
    ANDB            reduce using rule 87 (expresion7i -> SHL expresion7 .)
    XOR             reduce using rule 87 (expresion7i -> SHL expresion7 .)
    ORB             reduce using rule 87 (expresion7i -> SHL expresion7 .)
    AND             reduce using rule 87 (expresion7i -> SHL expresion7 .)
    OR              reduce using rule 87 (expresion7i -> SHL expresion7 .)
    SEMIC           reduce using rule 87 (expresion7i -> SHL expresion7 .)


state 193

    (107) exponencial -> LPAREN expresion RPAREN .

    EXP             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    STAR            reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    SHR             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    SHL             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    DIF             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    ANDB            reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    ORB             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    AND             reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    OR              reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 107 (exponencial -> LPAREN expresion RPAREN .)


state 194

    (121) llamarfuncion -> LPAREN llamarfuncion3 . RPAREN

    RPAREN          shift and go to state 213


state 195

    (123) llamarfuncion3 -> empty .
    (113) exponencial2 -> empty .

    RPAREN          reduce using rule 123 (llamarfuncion3 -> empty .)
    ID              reduce using rule 113 (exponencial2 -> empty .)
    CTEI            reduce using rule 113 (exponencial2 -> empty .)
    CTEF            reduce using rule 113 (exponencial2 -> empty .)


state 196

    (122) llamarfuncion3 -> asign . llamarfuncion33
    (124) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (125) llamarfuncion33 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 215
    RPAREN          reduce using rule 129 (empty -> .)

    llamarfuncion33                shift and go to state 214
    empty                          shift and go to state 216

state 197

    (11) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 217


state 198

    (14) where -> WHERE LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 218


state 199

    (37) write -> PRINT asign write2 .

    IF              reduce using rule 37 (write -> PRINT asign write2 .)
    PRINT           reduce using rule 37 (write -> PRINT asign write2 .)
    FOR             reduce using rule 37 (write -> PRINT asign write2 .)
    RETURN          reduce using rule 37 (write -> PRINT asign write2 .)
    BUILD           reduce using rule 37 (write -> PRINT asign write2 .)
    CONDITION       reduce using rule 37 (write -> PRINT asign write2 .)
    TINT            reduce using rule 37 (write -> PRINT asign write2 .)
    TBOOL           reduce using rule 37 (write -> PRINT asign write2 .)
    TFLOAT          reduce using rule 37 (write -> PRINT asign write2 .)
    ID              reduce using rule 37 (write -> PRINT asign write2 .)
    LPAREN          reduce using rule 37 (write -> PRINT asign write2 .)
    NOT             reduce using rule 37 (write -> PRINT asign write2 .)
    MM              reduce using rule 37 (write -> PRINT asign write2 .)
    PP              reduce using rule 37 (write -> PRINT asign write2 .)
    NEW             reduce using rule 37 (write -> PRINT asign write2 .)
    CTEI            reduce using rule 37 (write -> PRINT asign write2 .)
    CTEF            reduce using rule 37 (write -> PRINT asign write2 .)
    RCURLY          reduce using rule 37 (write -> PRINT asign write2 .)
    WHERE           reduce using rule 37 (write -> PRINT asign write2 .)


state 200

    (38) write2 -> COMMA . asign write2
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 219

state 201

    (39) write2 -> empty .

    IF              reduce using rule 39 (write2 -> empty .)
    PRINT           reduce using rule 39 (write2 -> empty .)
    FOR             reduce using rule 39 (write2 -> empty .)
    RETURN          reduce using rule 39 (write2 -> empty .)
    BUILD           reduce using rule 39 (write2 -> empty .)
    CONDITION       reduce using rule 39 (write2 -> empty .)
    TINT            reduce using rule 39 (write2 -> empty .)
    TBOOL           reduce using rule 39 (write2 -> empty .)
    TFLOAT          reduce using rule 39 (write2 -> empty .)
    ID              reduce using rule 39 (write2 -> empty .)
    LPAREN          reduce using rule 39 (write2 -> empty .)
    NOT             reduce using rule 39 (write2 -> empty .)
    MM              reduce using rule 39 (write2 -> empty .)
    PP              reduce using rule 39 (write2 -> empty .)
    NEW             reduce using rule 39 (write2 -> empty .)
    CTEI            reduce using rule 39 (write2 -> empty .)
    CTEF            reduce using rule 39 (write2 -> empty .)
    RCURLY          reduce using rule 39 (write2 -> empty .)
    WHERE           reduce using rule 39 (write2 -> empty .)


state 202

    (34) condition -> IF asign bloque . condition1
    (35) condition1 -> . ELSE bloque
    (36) condition1 -> . empty
    (129) empty -> .

    ELSE            shift and go to state 221
    IF              reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    BUILD           reduce using rule 129 (empty -> .)
    CONDITION       reduce using rule 129 (empty -> .)
    TINT            reduce using rule 129 (empty -> .)
    TBOOL           reduce using rule 129 (empty -> .)
    TFLOAT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    LPAREN          reduce using rule 129 (empty -> .)
    NOT             reduce using rule 129 (empty -> .)
    MM              reduce using rule 129 (empty -> .)
    PP              reduce using rule 129 (empty -> .)
    NEW             reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    RCURLY          reduce using rule 129 (empty -> .)
    WHERE           reduce using rule 129 (empty -> .)

    empty                          shift and go to state 222
    condition1                     shift and go to state 220

state 203

    (41) ciclo -> FOR ciclo1 SEMIC . ciclo2 SEMIC ciclo3 bloque
    (44) ciclo2 -> . asign
    (45) ciclo2 -> .
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    SEMIC           reduce using rule 45 (ciclo2 -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    ciclo2                         shift and go to state 223
    expresion                      shift and go to state 65
    asign                          shift and go to state 224

state 204

    (40) ciclo -> FOR asign bloque .

    IF              reduce using rule 40 (ciclo -> FOR asign bloque .)
    PRINT           reduce using rule 40 (ciclo -> FOR asign bloque .)
    FOR             reduce using rule 40 (ciclo -> FOR asign bloque .)
    RETURN          reduce using rule 40 (ciclo -> FOR asign bloque .)
    BUILD           reduce using rule 40 (ciclo -> FOR asign bloque .)
    CONDITION       reduce using rule 40 (ciclo -> FOR asign bloque .)
    TINT            reduce using rule 40 (ciclo -> FOR asign bloque .)
    TBOOL           reduce using rule 40 (ciclo -> FOR asign bloque .)
    TFLOAT          reduce using rule 40 (ciclo -> FOR asign bloque .)
    ID              reduce using rule 40 (ciclo -> FOR asign bloque .)
    LPAREN          reduce using rule 40 (ciclo -> FOR asign bloque .)
    NOT             reduce using rule 40 (ciclo -> FOR asign bloque .)
    MM              reduce using rule 40 (ciclo -> FOR asign bloque .)
    PP              reduce using rule 40 (ciclo -> FOR asign bloque .)
    NEW             reduce using rule 40 (ciclo -> FOR asign bloque .)
    CTEI            reduce using rule 40 (ciclo -> FOR asign bloque .)
    CTEF            reduce using rule 40 (ciclo -> FOR asign bloque .)
    RCURLY          reduce using rule 40 (ciclo -> FOR asign bloque .)
    WHERE           reduce using rule 40 (ciclo -> FOR asign bloque .)


state 205

    (15) wherecondition -> CONDITION expresion SEMIC .

    WHERE           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    IF              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TINT            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TBOOL           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TFLOAT          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    LPAREN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    NOT             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    MM              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PP              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    NEW             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CTEI            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CTEF            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)


state 206

    (13) build -> BUILD expresion SEMIC .

    WHERE           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    IF              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TINT            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TBOOL           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TFLOAT          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    LPAREN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    NOT             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    MM              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PP              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    NEW             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CTEI            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CTEF            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 13 (build -> BUILD expresion SEMIC .)


state 207

    (12) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 225


state 208

    (51) funcion2 -> COMMA type ID funcion2 .

    RPAREN          reduce using rule 51 (funcion2 -> COMMA type ID funcion2 .)


state 209

    (60) dec22 -> COMMA . ID dec22

    ID              shift and go to state 226


state 210

    (57) declaration -> type dimensions POINTS ID dec22 . SEMIC

    SEMIC           shift and go to state 227


state 211

    (61) dec22 -> empty .

    SEMIC           reduce using rule 61 (dec22 -> empty .)


state 212

    (58) dimensions -> LBRACKET expresion RBRACKET dimensions .

    POINTS          reduce using rule 58 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 213

    (121) llamarfuncion -> LPAREN llamarfuncion3 RPAREN .

    ASEQ            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUSEQ          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINEQ           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MULTEQ          reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIVEQ           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EXP             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    STAR            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SLASH           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MOD             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUS            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINUS           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATERTHAN     reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSTHAN        reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATEREQUAL    reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSEQUAL       reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHR             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHL             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EQ              reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIF             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ANDB            reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    XOR             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ORB             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    AND             reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    OR              reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SEMIC           reduce using rule 121 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)


state 214

    (122) llamarfuncion3 -> asign llamarfuncion33 .

    RPAREN          reduce using rule 122 (llamarfuncion3 -> asign llamarfuncion33 .)


state 215

    (124) llamarfuncion33 -> COMMA . asign llamarfuncion33
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion9                     shift and go to state 52
    expresion8                     shift and go to state 62
    expresion                      shift and go to state 65
    asign                          shift and go to state 228
    empty                          shift and go to state 95

state 216

    (125) llamarfuncion33 -> empty .

    RPAREN          reduce using rule 125 (llamarfuncion33 -> empty .)


state 217

    (11) optimize -> MIN LCURLY statement where RCURLY .

    WHERE           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TINT            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    ID              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    NOT             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    MM              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PP              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    NEW             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEI            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEF            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)


state 218

    (14) where -> WHERE LCURLY bloque2 RCURLY .

    RCURLY          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    IF              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    ID              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    LPAREN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    NOT             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    MM              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PP              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    NEW             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CTEI            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CTEF            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)


state 219

    (38) write2 -> COMMA asign . write2
    (38) write2 -> . COMMA asign write2
    (39) write2 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 200
    IF              reduce using rule 129 (empty -> .)
    PRINT           reduce using rule 129 (empty -> .)
    FOR             reduce using rule 129 (empty -> .)
    RETURN          reduce using rule 129 (empty -> .)
    BUILD           reduce using rule 129 (empty -> .)
    CONDITION       reduce using rule 129 (empty -> .)
    TINT            reduce using rule 129 (empty -> .)
    TBOOL           reduce using rule 129 (empty -> .)
    TFLOAT          reduce using rule 129 (empty -> .)
    ID              reduce using rule 129 (empty -> .)
    LPAREN          reduce using rule 129 (empty -> .)
    NOT             reduce using rule 129 (empty -> .)
    MM              reduce using rule 129 (empty -> .)
    PP              reduce using rule 129 (empty -> .)
    NEW             reduce using rule 129 (empty -> .)
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)
    RCURLY          reduce using rule 129 (empty -> .)
    WHERE           reduce using rule 129 (empty -> .)

    write2                         shift and go to state 229
    empty                          shift and go to state 201

state 220

    (34) condition -> IF asign bloque condition1 .

    WHERE           reduce using rule 34 (condition -> IF asign bloque condition1 .)
    IF              reduce using rule 34 (condition -> IF asign bloque condition1 .)
    PRINT           reduce using rule 34 (condition -> IF asign bloque condition1 .)
    FOR             reduce using rule 34 (condition -> IF asign bloque condition1 .)
    RETURN          reduce using rule 34 (condition -> IF asign bloque condition1 .)
    BUILD           reduce using rule 34 (condition -> IF asign bloque condition1 .)
    CONDITION       reduce using rule 34 (condition -> IF asign bloque condition1 .)
    TINT            reduce using rule 34 (condition -> IF asign bloque condition1 .)
    TBOOL           reduce using rule 34 (condition -> IF asign bloque condition1 .)
    TFLOAT          reduce using rule 34 (condition -> IF asign bloque condition1 .)
    ID              reduce using rule 34 (condition -> IF asign bloque condition1 .)
    LPAREN          reduce using rule 34 (condition -> IF asign bloque condition1 .)
    NOT             reduce using rule 34 (condition -> IF asign bloque condition1 .)
    MM              reduce using rule 34 (condition -> IF asign bloque condition1 .)
    PP              reduce using rule 34 (condition -> IF asign bloque condition1 .)
    NEW             reduce using rule 34 (condition -> IF asign bloque condition1 .)
    CTEI            reduce using rule 34 (condition -> IF asign bloque condition1 .)
    CTEF            reduce using rule 34 (condition -> IF asign bloque condition1 .)
    RCURLY          reduce using rule 34 (condition -> IF asign bloque condition1 .)


state 221

    (35) condition1 -> ELSE . bloque
    (62) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 32

    bloque                         shift and go to state 230

state 222

    (36) condition1 -> empty .

    IF              reduce using rule 36 (condition1 -> empty .)
    PRINT           reduce using rule 36 (condition1 -> empty .)
    FOR             reduce using rule 36 (condition1 -> empty .)
    RETURN          reduce using rule 36 (condition1 -> empty .)
    BUILD           reduce using rule 36 (condition1 -> empty .)
    CONDITION       reduce using rule 36 (condition1 -> empty .)
    TINT            reduce using rule 36 (condition1 -> empty .)
    TBOOL           reduce using rule 36 (condition1 -> empty .)
    TFLOAT          reduce using rule 36 (condition1 -> empty .)
    ID              reduce using rule 36 (condition1 -> empty .)
    LPAREN          reduce using rule 36 (condition1 -> empty .)
    NOT             reduce using rule 36 (condition1 -> empty .)
    MM              reduce using rule 36 (condition1 -> empty .)
    PP              reduce using rule 36 (condition1 -> empty .)
    NEW             reduce using rule 36 (condition1 -> empty .)
    CTEI            reduce using rule 36 (condition1 -> empty .)
    CTEF            reduce using rule 36 (condition1 -> empty .)
    RCURLY          reduce using rule 36 (condition1 -> empty .)
    WHERE           reduce using rule 36 (condition1 -> empty .)


state 223

    (41) ciclo -> FOR ciclo1 SEMIC ciclo2 . SEMIC ciclo3 bloque

    SEMIC           shift and go to state 231


state 224

    (44) ciclo2 -> asign .

    SEMIC           reduce using rule 44 (ciclo2 -> asign .)


state 225

    (12) optimize -> MAX LCURLY statement where RCURLY .

    WHERE           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TINT            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    ID              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    NOT             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    MM              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PP              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    NEW             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEI            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEF            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)


state 226

    (60) dec22 -> COMMA ID . dec22
    (60) dec22 -> . COMMA ID dec22
    (61) dec22 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 209
    SEMIC           reduce using rule 129 (empty -> .)

    dec22                          shift and go to state 232
    empty                          shift and go to state 211

state 227

    (57) declaration -> type dimensions POINTS ID dec22 SEMIC .

    IF              reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    PRINT           reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    FOR             reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    RETURN          reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    BUILD           reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    CONDITION       reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    TINT            reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    TBOOL           reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    TFLOAT          reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    ID              reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    LPAREN          reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    NOT             reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    MM              reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    PP              reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    NEW             reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    CTEI            reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    CTEF            reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    RCURLY          reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    WHERE           reduce using rule 57 (declaration -> type dimensions POINTS ID dec22 SEMIC .)


state 228

    (124) llamarfuncion33 -> COMMA asign . llamarfuncion33
    (124) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (125) llamarfuncion33 -> . empty
    (129) empty -> .

    COMMA           shift and go to state 215
    RPAREN          reduce using rule 129 (empty -> .)

    llamarfuncion33                shift and go to state 233
    empty                          shift and go to state 216

state 229

    (38) write2 -> COMMA asign write2 .

    IF              reduce using rule 38 (write2 -> COMMA asign write2 .)
    PRINT           reduce using rule 38 (write2 -> COMMA asign write2 .)
    FOR             reduce using rule 38 (write2 -> COMMA asign write2 .)
    RETURN          reduce using rule 38 (write2 -> COMMA asign write2 .)
    BUILD           reduce using rule 38 (write2 -> COMMA asign write2 .)
    CONDITION       reduce using rule 38 (write2 -> COMMA asign write2 .)
    TINT            reduce using rule 38 (write2 -> COMMA asign write2 .)
    TBOOL           reduce using rule 38 (write2 -> COMMA asign write2 .)
    TFLOAT          reduce using rule 38 (write2 -> COMMA asign write2 .)
    ID              reduce using rule 38 (write2 -> COMMA asign write2 .)
    LPAREN          reduce using rule 38 (write2 -> COMMA asign write2 .)
    NOT             reduce using rule 38 (write2 -> COMMA asign write2 .)
    MM              reduce using rule 38 (write2 -> COMMA asign write2 .)
    PP              reduce using rule 38 (write2 -> COMMA asign write2 .)
    NEW             reduce using rule 38 (write2 -> COMMA asign write2 .)
    CTEI            reduce using rule 38 (write2 -> COMMA asign write2 .)
    CTEF            reduce using rule 38 (write2 -> COMMA asign write2 .)
    RCURLY          reduce using rule 38 (write2 -> COMMA asign write2 .)
    WHERE           reduce using rule 38 (write2 -> COMMA asign write2 .)


state 230

    (35) condition1 -> ELSE bloque .

    IF              reduce using rule 35 (condition1 -> ELSE bloque .)
    PRINT           reduce using rule 35 (condition1 -> ELSE bloque .)
    FOR             reduce using rule 35 (condition1 -> ELSE bloque .)
    RETURN          reduce using rule 35 (condition1 -> ELSE bloque .)
    BUILD           reduce using rule 35 (condition1 -> ELSE bloque .)
    CONDITION       reduce using rule 35 (condition1 -> ELSE bloque .)
    TINT            reduce using rule 35 (condition1 -> ELSE bloque .)
    TBOOL           reduce using rule 35 (condition1 -> ELSE bloque .)
    TFLOAT          reduce using rule 35 (condition1 -> ELSE bloque .)
    ID              reduce using rule 35 (condition1 -> ELSE bloque .)
    LPAREN          reduce using rule 35 (condition1 -> ELSE bloque .)
    NOT             reduce using rule 35 (condition1 -> ELSE bloque .)
    MM              reduce using rule 35 (condition1 -> ELSE bloque .)
    PP              reduce using rule 35 (condition1 -> ELSE bloque .)
    NEW             reduce using rule 35 (condition1 -> ELSE bloque .)
    CTEI            reduce using rule 35 (condition1 -> ELSE bloque .)
    CTEF            reduce using rule 35 (condition1 -> ELSE bloque .)
    RCURLY          reduce using rule 35 (condition1 -> ELSE bloque .)
    WHERE           reduce using rule 35 (condition1 -> ELSE bloque .)


state 231

    (41) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC . ciclo3 bloque
    (46) ciclo3 -> . asign
    (47) ciclo3 -> .
    (27) asign -> . id asign_signo expresion
    (28) asign -> . expresion
    (118) id -> . ID llamarfuncion
    (119) id -> . ID
    (66) expresion -> . expresion2 expresioni SEMIC
    (69) expresion2 -> . expresion3 expresion2i
    (72) expresion3 -> . expresion4 expresion3i
    (75) expresion4 -> . expresion5 expresion4i
    (78) expresion5 -> . expresion6 expresion5i
    (81) expresion6 -> . expresion7 expresion6i
    (85) expresion7 -> . expresion8 expresion7i
    (89) expresion8 -> . expresion9 expresion8i
    (95) expresion9 -> . termino expresion9i
    (99) termino -> . factor termino2
    (104) factor -> . exponencial factor2
    (107) exponencial -> . LPAREN expresion RPAREN
    (108) exponencial -> . exponencial2 valor
    (109) exponencial2 -> . NOT
    (110) exponencial2 -> . MM
    (111) exponencial2 -> . PP
    (112) exponencial2 -> . NEW
    (113) exponencial2 -> . empty
    (129) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    LCURLY          reduce using rule 47 (ciclo3 -> .)
    ID              shift and go to state 64
    LPAREN          shift and go to state 63
    NOT             shift and go to state 68
    MM              shift and go to state 66
    PP              shift and go to state 50
    NEW             shift and go to state 48
    CTEI            reduce using rule 129 (empty -> .)
    CTEF            reduce using rule 129 (empty -> .)

  ! ID              [ reduce using rule 129 (empty -> .) ]

    termino                        shift and go to state 47
    id                             shift and go to state 49
    exponencial2                   shift and go to state 51
    expresion9                     shift and go to state 52
    factor                         shift and go to state 53
    exponencial                    shift and go to state 54
    empty                          shift and go to state 95
    expresion3                     shift and go to state 46
    expresion2                     shift and go to state 57
    expresion5                     shift and go to state 58
    expresion4                     shift and go to state 59
    expresion7                     shift and go to state 60
    expresion6                     shift and go to state 61
    expresion8                     shift and go to state 62
    ciclo3                         shift and go to state 234
    expresion                      shift and go to state 65
    asign                          shift and go to state 235

state 232

    (60) dec22 -> COMMA ID dec22 .

    SEMIC           reduce using rule 60 (dec22 -> COMMA ID dec22 .)


state 233

    (124) llamarfuncion33 -> COMMA asign llamarfuncion33 .

    RPAREN          reduce using rule 124 (llamarfuncion33 -> COMMA asign llamarfuncion33 .)


state 234

    (41) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 . bloque
    (62) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 32

    bloque                         shift and go to state 236

state 235

    (46) ciclo3 -> asign .

    LCURLY          reduce using rule 46 (ciclo3 -> asign .)


state 236

    (41) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .

    IF              reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    PRINT           reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    FOR             reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    RETURN          reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    BUILD           reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    CONDITION       reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TINT            reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TBOOL           reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TFLOAT          reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    ID              reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    LPAREN          reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    NOT             reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    MM              reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    PP              reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    NEW             reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    CTEI            reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    CTEF            reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    RCURLY          reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    WHERE           reduce using rule 41 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 67 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 203 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 231 resolved as shift
