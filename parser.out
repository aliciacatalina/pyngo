Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CTESTRING
    SUM
    BETWEEN
    CTEBOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model bloque2 RCURLY
Rule 2     functions -> funcion functions
Rule 3     functions -> empty
Rule 4     vars -> varblock
Rule 5     vars -> empty
Rule 6     varblock -> VARS LCURLY lvars RCURLY
Rule 7     model -> optimize
Rule 8     model -> optimize where
Rule 9     model -> bloque2
Rule 10    model -> empty
Rule 11    optimize -> MIN LCURLY statement where RCURLY
Rule 12    optimize -> MAX LCURLY statement where RCURLY
Rule 13    build -> BUILD expresion SEMIC
Rule 14    where -> WHERE LCURLY bloque2 RCURLY
Rule 15    wherecondition -> CONDITION expresion SEMIC
Rule 16    statement -> declaration
Rule 17    statement -> asign
Rule 18    statement -> condition
Rule 19    statement -> write
Rule 20    statement -> ciclo
Rule 21    statement -> return
Rule 22    statement -> build
Rule 23    statement -> wherecondition
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> id asign_signo expresiones SEMIC
Rule 28    asign -> expresiones
Rule 29    expresiones -> expresion COMMA expresiones
Rule 30    expresiones -> expresion
Rule 31    asign_signo -> ASEQ
Rule 32    asign_signo -> PLUSEQ
Rule 33    asign_signo -> MINEQ
Rule 34    asign_signo -> MULTEQ
Rule 35    asign_signo -> DIVEQ
Rule 36    condition -> IF asign bloque condition1
Rule 37    condition1 -> ELSE bloque
Rule 38    condition1 -> empty
Rule 39    write -> PRINT asign write2 SEMIC
Rule 40    write2 -> COMMA asign write2
Rule 41    write2 -> empty
Rule 42    ciclo -> FOR ID IN DOT ID bloque
Rule 43    funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
Rule 44    funcion1 -> type ID funcion2
Rule 45    funcion1 -> <empty>
Rule 46    funcion2 -> COMMA type ID funcion2
Rule 47    funcion2 -> <empty>
Rule 48    funcion3 -> LPAREN type RPAREN
Rule 49    funcion3 -> <empty>
Rule 50    lvars -> declaration lvars
Rule 51    lvars -> empty
Rule 52    declaration -> typedeclaration POINTS ID dec22 SEMIC
Rule 53    typedeclaration -> type dimensions
Rule 54    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 55    dimensions -> empty
Rule 56    dec22 -> COMMA ID dec22
Rule 57    dec22 -> empty
Rule 58    bloque -> LCURLY bloque2 RCURLY
Rule 59    bloque2 -> statement bloque2
Rule 60    bloque2 -> empty
Rule 61    return -> RETURN asign
Rule 62    expresion -> expresion2 expresioni
Rule 63    expresioni -> OR expresion
Rule 64    expresioni -> empty
Rule 65    expresion2 -> expresion3 expresion2i
Rule 66    expresion2i -> AND expresion2
Rule 67    expresion2i -> empty
Rule 68    expresion3 -> expresion4 expresion3i
Rule 69    expresion3i -> ORB expresion3
Rule 70    expresion3i -> empty
Rule 71    expresion4 -> expresion5 expresion4i
Rule 72    expresion4i -> XOR expresion4
Rule 73    expresion4i -> empty
Rule 74    expresion5 -> expresion6 expresion5i
Rule 75    expresion5i -> ANDB expresion5
Rule 76    expresion5i -> empty
Rule 77    expresion6 -> expresion7 expresion6i
Rule 78    expresion6i -> EQ expresion6
Rule 79    expresion6i -> DIF expresion6
Rule 80    expresion6i -> empty
Rule 81    expresion7 -> expresion8 expresion7i
Rule 82    expresion7i -> SHR expresion7
Rule 83    expresion7i -> SHL expresion7
Rule 84    expresion7i -> empty
Rule 85    expresion8 -> expresion9 expresion8i
Rule 86    expresion8i -> GREATERTHAN expresion8
Rule 87    expresion8i -> LESSTHAN expresion8
Rule 88    expresion8i -> GREATEREQUAL expresion8
Rule 89    expresion8i -> LESSEQUAL expresion8
Rule 90    expresion8i -> empty
Rule 91    expresion9 -> termino expresion9i
Rule 92    expresion9i -> PLUS expresion9
Rule 93    expresion9i -> MINUS expresion9
Rule 94    expresion9i -> empty
Rule 95    termino -> factor termino2
Rule 96    termino2 -> STAR termino
Rule 97    termino2 -> SLASH termino
Rule 98    termino2 -> MOD termino
Rule 99    termino2 -> empty
Rule 100   factor -> exponencial factor2
Rule 101   factor2 -> EXP factor
Rule 102   factor2 -> empty
Rule 103   exponencial -> LPAREN expresion RPAREN
Rule 104   exponencial -> exponencial2 valor
Rule 105   exponencial2 -> NOT
Rule 106   exponencial2 -> MM
Rule 107   exponencial2 -> PP
Rule 108   exponencial2 -> NEW
Rule 109   exponencial2 -> empty
Rule 110   valor -> id
Rule 111   valor -> int
Rule 112   valor -> float
Rule 113   int -> CTEI
Rule 114   id -> ID llamarfuncion
Rule 115   id -> ID dimensions
Rule 116   float -> CTEF
Rule 117   llamarfuncion -> LPAREN llamarfuncion3 RPAREN
Rule 118   llamarfuncion3 -> asign llamarfuncion33
Rule 119   llamarfuncion3 -> empty
Rule 120   llamarfuncion33 -> COMMA asign llamarfuncion33
Rule 121   llamarfuncion33 -> empty
Rule 122   type -> TINT
Rule 123   type -> TBOOL
Rule 124   type -> TFLOAT
Rule 125   empty -> <empty>

Terminals, with rules where they appear

AND                  : 66
ANDB                 : 75
ASEQ                 : 31
BETWEEN              : 
BUILD                : 13
COMMA                : 29 40 46 56 120
CONDITION            : 15
CTEBOOL              : 
CTEF                 : 116
CTEI                 : 113
CTESTRING            : 
DATA                 : 24
DIF                  : 79
DIVEQ                : 35
DOT                  : 42
ELSE                 : 37
EQ                   : 78
EXP                  : 101
FOR                  : 42
FUNC                 : 43
GREATEREQUAL         : 88
GREATERTHAN          : 86
ID                   : 42 42 43 44 46 52 56 114 115
IF                   : 36
IN                   : 42
LBRACKET             : 54
LCURLY               : 1 6 11 12 14 24 58
LESSEQUAL            : 89
LESSTHAN             : 87
LPAREN               : 43 48 103 117
MAX                  : 12
MIN                  : 11
MINEQ                : 33
MINUS                : 93
MM                   : 106
MOD                  : 98
MODEL                : 1
MULTEQ               : 34
NEW                  : 108
NOT                  : 105
OR                   : 63
ORB                  : 69
PLUS                 : 92
PLUSEQ               : 32
POINTS               : 52
PP                   : 107
PRINT                : 39
RBRACKET             : 54
RCURLY               : 1 6 11 12 14 24 58
RETURN               : 61
RPAREN               : 43 48 103 117
SEMIC                : 13 15 27 39 52
SHL                  : 83
SHR                  : 82
SLASH                : 97
STAR                 : 96
SUM                  : 
TBOOL                : 123
TFLOAT               : 124
TINT                 : 122
VARS                 : 6
WHERE                : 14
XOR                  : 72
error                : 

Nonterminals, with rules where they appear

asign                : 17 25 36 39 40 61 118 120
asign_signo          : 27
asignmany            : 24 25
bloque               : 36 37 42 43
bloque2              : 1 9 14 58 59
build                : 22
ciclo                : 20
condition            : 18
condition1           : 36
data                 : 1
dec22                : 52 56
declaration          : 16 50
dimensions           : 53 54 115
empty                : 3 5 10 26 38 41 51 55 57 60 64 67 70 73 76 80 84 90 94 99 102 109 119 121
exponencial          : 100
exponencial2         : 104
expresion            : 13 15 29 30 54 63 103
expresion2           : 62 66
expresion2i          : 65
expresion3           : 65 69
expresion3i          : 68
expresion4           : 68 72
expresion4i          : 71
expresion5           : 71 75
expresion5i          : 74
expresion6           : 74 78 79
expresion6i          : 77
expresion7           : 77 82 83
expresion7i          : 81
expresion8           : 81 86 87 88 89
expresion8i          : 85
expresion9           : 85 92 93
expresion9i          : 91
expresiones          : 27 28 29
expresioni           : 62
factor               : 95 101
factor2              : 100
float                : 112
funcion              : 2
funcion1             : 43
funcion2             : 44 46
funcion3             : 43
functions            : 1 2
id                   : 27 110
int                  : 111
llamarfuncion        : 114
llamarfuncion3       : 117
llamarfuncion33      : 118 120
lvars                : 6 50
model                : 1
optimize             : 7 8
program              : 0
return               : 21
statement            : 11 12 59
termino              : 91 96 97 98
termino2             : 95
type                 : 44 46 48 53
typedeclaration      : 52
valor                : 104
varblock             : 4
vars                 : 1
where                : 8 11 12
wherecondition       : 23
write                : 19
write2               : 39 40

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model bloque2 RCURLY
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (43) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (125) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 125 (empty -> .)

    functions                      shift and go to state 1
    program                        shift and go to state 2
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 1

    (1) program -> functions . MODEL LCURLY vars data model bloque2 RCURLY

    MODEL           shift and go to state 6


state 2

    (0) S' -> program .



state 3

    (43) funcion -> FUNC . ID LPAREN funcion1 RPAREN funcion3 bloque

    ID              shift and go to state 7


state 4

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 5

    (2) functions -> funcion . functions
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (43) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (125) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 125 (empty -> .)

    functions                      shift and go to state 8
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 6

    (1) program -> functions MODEL . LCURLY vars data model bloque2 RCURLY

    LCURLY          shift and go to state 9


state 7

    (43) funcion -> FUNC ID . LPAREN funcion1 RPAREN funcion3 bloque

    LPAREN          shift and go to state 10


state 8

    (2) functions -> funcion functions .

    MODEL           reduce using rule 2 (functions -> funcion functions .)


state 9

    (1) program -> functions MODEL LCURLY . vars data model bloque2 RCURLY
    (4) vars -> . varblock
    (5) vars -> . empty
    (6) varblock -> . VARS LCURLY lvars RCURLY
    (125) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 125 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (43) funcion -> FUNC ID LPAREN . funcion1 RPAREN funcion3 bloque
    (44) funcion1 -> . type ID funcion2
    (45) funcion1 -> .
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT

    RPAREN          reduce using rule 45 (funcion1 -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    funcion1                       shift and go to state 17
    type                           shift and go to state 19

state 11

    (6) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 20


state 12

    (1) program -> functions MODEL LCURLY vars . data model bloque2 RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 21

    data                           shift and go to state 22

state 13

    (4) vars -> varblock .

    DATA            reduce using rule 4 (vars -> varblock .)


state 14

    (5) vars -> empty .

    DATA            reduce using rule 5 (vars -> empty .)


state 15

    (122) type -> TINT .

    LBRACKET        reduce using rule 122 (type -> TINT .)
    POINTS          reduce using rule 122 (type -> TINT .)
    RPAREN          reduce using rule 122 (type -> TINT .)
    ID              reduce using rule 122 (type -> TINT .)


state 16

    (124) type -> TFLOAT .

    LBRACKET        reduce using rule 124 (type -> TFLOAT .)
    POINTS          reduce using rule 124 (type -> TFLOAT .)
    RPAREN          reduce using rule 124 (type -> TFLOAT .)
    ID              reduce using rule 124 (type -> TFLOAT .)


state 17

    (43) funcion -> FUNC ID LPAREN funcion1 . RPAREN funcion3 bloque

    RPAREN          shift and go to state 23


state 18

    (123) type -> TBOOL .

    LBRACKET        reduce using rule 123 (type -> TBOOL .)
    POINTS          reduce using rule 123 (type -> TBOOL .)
    RPAREN          reduce using rule 123 (type -> TBOOL .)
    ID              reduce using rule 123 (type -> TBOOL .)


state 19

    (44) funcion1 -> type . ID funcion2

    ID              shift and go to state 24


state 20

    (6) varblock -> VARS LCURLY . lvars RCURLY
    (50) lvars -> . declaration lvars
    (51) lvars -> . empty
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (125) empty -> .
    (53) typedeclaration -> . type dimensions
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT

    RCURLY          reduce using rule 125 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    typedeclaration                shift and go to state 25
    lvars                          shift and go to state 26
    declaration                    shift and go to state 27
    type                           shift and go to state 28
    empty                          shift and go to state 29

state 21

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 30


state 22

    (1) program -> functions MODEL LCURLY vars data . model bloque2 RCURLY
    (7) model -> . optimize
    (8) model -> . optimize where
    (9) model -> . bloque2
    (10) model -> . empty
    (11) optimize -> . MIN LCURLY statement where RCURLY
    (12) optimize -> . MAX LCURLY statement where RCURLY
    (59) bloque2 -> . statement bloque2
    (60) bloque2 -> . empty
    (125) empty -> .
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MM resolved as shift
  ! shift/reduce conflict for PP resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
    MIN             shift and go to state 32
    MAX             shift and go to state 68
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! IF              [ reduce using rule 125 (empty -> .) ]
  ! PRINT           [ reduce using rule 125 (empty -> .) ]
  ! FOR             [ reduce using rule 125 (empty -> .) ]
  ! RETURN          [ reduce using rule 125 (empty -> .) ]
  ! BUILD           [ reduce using rule 125 (empty -> .) ]
  ! CONDITION       [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! TINT            [ reduce using rule 125 (empty -> .) ]
  ! TBOOL           [ reduce using rule 125 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 125 (empty -> .) ]
  ! LPAREN          [ reduce using rule 125 (empty -> .) ]
  ! NOT             [ reduce using rule 125 (empty -> .) ]
  ! MM              [ reduce using rule 125 (empty -> .) ]
  ! PP              [ reduce using rule 125 (empty -> .) ]
  ! NEW             [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    optimize                       shift and go to state 61
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 44
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 47
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    expresiones                    shift and go to state 56
    declaration                    shift and go to state 60
    model                          shift and go to state 48
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    bloque2                        shift and go to state 65
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 23

    (43) funcion -> FUNC ID LPAREN funcion1 RPAREN . funcion3 bloque
    (48) funcion3 -> . LPAREN type RPAREN
    (49) funcion3 -> .

    LPAREN          shift and go to state 74
    LCURLY          reduce using rule 49 (funcion3 -> .)

    funcion3                       shift and go to state 73

state 24

    (44) funcion1 -> type ID . funcion2
    (46) funcion2 -> . COMMA type ID funcion2
    (47) funcion2 -> .

    COMMA           shift and go to state 75
    RPAREN          reduce using rule 47 (funcion2 -> .)

    funcion2                       shift and go to state 76

state 25

    (52) declaration -> typedeclaration . POINTS ID dec22 SEMIC

    POINTS          shift and go to state 77


state 26

    (6) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 78


state 27

    (50) lvars -> declaration . lvars
    (50) lvars -> . declaration lvars
    (51) lvars -> . empty
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (125) empty -> .
    (53) typedeclaration -> . type dimensions
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT

    RCURLY          reduce using rule 125 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    typedeclaration                shift and go to state 25
    lvars                          shift and go to state 79
    declaration                    shift and go to state 27
    type                           shift and go to state 28
    empty                          shift and go to state 29

state 28

    (53) typedeclaration -> type . dimensions
    (54) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (55) dimensions -> . empty
    (125) empty -> .

    LBRACKET        shift and go to state 81
    POINTS          reduce using rule 125 (empty -> .)

    dimensions                     shift and go to state 80
    empty                          shift and go to state 82

state 29

    (51) lvars -> empty .

    RCURLY          reduce using rule 51 (lvars -> empty .)


state 30

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (125) empty -> .
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    expresion3                     shift and go to state 49
    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 83
    asignmany                      shift and go to state 84
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 85

state 31

    (61) return -> RETURN . asign
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 87

state 32

    (11) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 88


state 33

    (85) expresion8 -> expresion9 . expresion8i
    (86) expresion8i -> . GREATERTHAN expresion8
    (87) expresion8i -> . LESSTHAN expresion8
    (88) expresion8i -> . GREATEREQUAL expresion8
    (89) expresion8i -> . LESSEQUAL expresion8
    (90) expresion8i -> . empty
    (125) empty -> .

    GREATERTHAN     shift and go to state 92
    LESSTHAN        shift and go to state 91
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 93
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresion8i                    shift and go to state 90
    empty                          shift and go to state 94

state 34

    (91) expresion9 -> termino . expresion9i
    (92) expresion9i -> . PLUS expresion9
    (93) expresion9i -> . MINUS expresion9
    (94) expresion9i -> . empty
    (125) empty -> .

    PLUS            shift and go to state 96
    MINUS           shift and go to state 97
    GREATERTHAN     reduce using rule 125 (empty -> .)
    LESSTHAN        reduce using rule 125 (empty -> .)
    GREATEREQUAL    reduce using rule 125 (empty -> .)
    LESSEQUAL       reduce using rule 125 (empty -> .)
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresion9i                    shift and go to state 95
    empty                          shift and go to state 98

state 35

    (108) exponencial2 -> NEW .

    ID              reduce using rule 108 (exponencial2 -> NEW .)
    CTEI            reduce using rule 108 (exponencial2 -> NEW .)
    CTEF            reduce using rule 108 (exponencial2 -> NEW .)


state 36

    (39) write -> PRINT . asign write2 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 99

state 37

    (71) expresion4 -> expresion5 . expresion4i
    (72) expresion4i -> . XOR expresion4
    (73) expresion4i -> . empty
    (125) empty -> .

    XOR             shift and go to state 100
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    empty                          shift and go to state 101
    expresion4i                    shift and go to state 102

state 38

    (27) asign -> id . asign_signo expresiones SEMIC
    (31) asign_signo -> . ASEQ
    (32) asign_signo -> . PLUSEQ
    (33) asign_signo -> . MINEQ
    (34) asign_signo -> . MULTEQ
    (35) asign_signo -> . DIVEQ

    ASEQ            shift and go to state 104
    PLUSEQ          shift and go to state 103
    MINEQ           shift and go to state 105
    MULTEQ          shift and go to state 106
    DIVEQ           shift and go to state 108

    asign_signo                    shift and go to state 107

state 39

    (20) statement -> ciclo .

    WHERE           reduce using rule 20 (statement -> ciclo .)
    IF              reduce using rule 20 (statement -> ciclo .)
    PRINT           reduce using rule 20 (statement -> ciclo .)
    FOR             reduce using rule 20 (statement -> ciclo .)
    RETURN          reduce using rule 20 (statement -> ciclo .)
    BUILD           reduce using rule 20 (statement -> ciclo .)
    CONDITION       reduce using rule 20 (statement -> ciclo .)
    ID              reduce using rule 20 (statement -> ciclo .)
    TINT            reduce using rule 20 (statement -> ciclo .)
    TBOOL           reduce using rule 20 (statement -> ciclo .)
    TFLOAT          reduce using rule 20 (statement -> ciclo .)
    LPAREN          reduce using rule 20 (statement -> ciclo .)
    NOT             reduce using rule 20 (statement -> ciclo .)
    MM              reduce using rule 20 (statement -> ciclo .)
    PP              reduce using rule 20 (statement -> ciclo .)
    NEW             reduce using rule 20 (statement -> ciclo .)
    CTEI            reduce using rule 20 (statement -> ciclo .)
    CTEF            reduce using rule 20 (statement -> ciclo .)
    RCURLY          reduce using rule 20 (statement -> ciclo .)


state 40

    (104) exponencial -> exponencial2 . valor
    (110) valor -> . id
    (111) valor -> . int
    (112) valor -> . float
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (113) int -> . CTEI
    (116) float -> . CTEF

    ID              shift and go to state 41
    CTEI            shift and go to state 114
    CTEF            shift and go to state 112

    int                            shift and go to state 109
    float                          shift and go to state 110
    valor                          shift and go to state 113
    id                             shift and go to state 111

state 41

    (114) id -> ID . llamarfuncion
    (115) id -> ID . dimensions
    (117) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN
    (54) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (55) dimensions -> . empty
    (125) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 117
    LBRACKET        shift and go to state 81
    ASEQ            reduce using rule 125 (empty -> .)
    PLUSEQ          reduce using rule 125 (empty -> .)
    MINEQ           reduce using rule 125 (empty -> .)
    MULTEQ          reduce using rule 125 (empty -> .)
    DIVEQ           reduce using rule 125 (empty -> .)
    EXP             reduce using rule 125 (empty -> .)
    STAR            reduce using rule 125 (empty -> .)
    SLASH           reduce using rule 125 (empty -> .)
    MOD             reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GREATERTHAN     reduce using rule 125 (empty -> .)
    LESSTHAN        reduce using rule 125 (empty -> .)
    GREATEREQUAL    reduce using rule 125 (empty -> .)
    LESSEQUAL       reduce using rule 125 (empty -> .)
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

  ! LPAREN          [ reduce using rule 125 (empty -> .) ]

    llamarfuncion                  shift and go to state 116
    dimensions                     shift and go to state 115
    empty                          shift and go to state 82

state 42

    (19) statement -> write .

    WHERE           reduce using rule 19 (statement -> write .)
    IF              reduce using rule 19 (statement -> write .)
    PRINT           reduce using rule 19 (statement -> write .)
    FOR             reduce using rule 19 (statement -> write .)
    RETURN          reduce using rule 19 (statement -> write .)
    BUILD           reduce using rule 19 (statement -> write .)
    CONDITION       reduce using rule 19 (statement -> write .)
    ID              reduce using rule 19 (statement -> write .)
    TINT            reduce using rule 19 (statement -> write .)
    TBOOL           reduce using rule 19 (statement -> write .)
    TFLOAT          reduce using rule 19 (statement -> write .)
    LPAREN          reduce using rule 19 (statement -> write .)
    NOT             reduce using rule 19 (statement -> write .)
    MM              reduce using rule 19 (statement -> write .)
    PP              reduce using rule 19 (statement -> write .)
    NEW             reduce using rule 19 (statement -> write .)
    CTEI            reduce using rule 19 (statement -> write .)
    CTEF            reduce using rule 19 (statement -> write .)
    RCURLY          reduce using rule 19 (statement -> write .)


state 43

    (22) statement -> build .

    WHERE           reduce using rule 22 (statement -> build .)
    IF              reduce using rule 22 (statement -> build .)
    PRINT           reduce using rule 22 (statement -> build .)
    FOR             reduce using rule 22 (statement -> build .)
    RETURN          reduce using rule 22 (statement -> build .)
    BUILD           reduce using rule 22 (statement -> build .)
    CONDITION       reduce using rule 22 (statement -> build .)
    ID              reduce using rule 22 (statement -> build .)
    TINT            reduce using rule 22 (statement -> build .)
    TBOOL           reduce using rule 22 (statement -> build .)
    TFLOAT          reduce using rule 22 (statement -> build .)
    LPAREN          reduce using rule 22 (statement -> build .)
    NOT             reduce using rule 22 (statement -> build .)
    MM              reduce using rule 22 (statement -> build .)
    PP              reduce using rule 22 (statement -> build .)
    NEW             reduce using rule 22 (statement -> build .)
    CTEI            reduce using rule 22 (statement -> build .)
    CTEF            reduce using rule 22 (statement -> build .)
    RCURLY          reduce using rule 22 (statement -> build .)


state 44

    (59) bloque2 -> statement . bloque2
    (59) bloque2 -> . statement bloque2
    (60) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (125) empty -> .
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for MM resolved as shift
  ! shift/reduce conflict for PP resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! IF              [ reduce using rule 125 (empty -> .) ]
  ! PRINT           [ reduce using rule 125 (empty -> .) ]
  ! FOR             [ reduce using rule 125 (empty -> .) ]
  ! RETURN          [ reduce using rule 125 (empty -> .) ]
  ! BUILD           [ reduce using rule 125 (empty -> .) ]
  ! CONDITION       [ reduce using rule 125 (empty -> .) ]
  ! ID              [ reduce using rule 125 (empty -> .) ]
  ! TINT            [ reduce using rule 125 (empty -> .) ]
  ! TBOOL           [ reduce using rule 125 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 125 (empty -> .) ]
  ! LPAREN          [ reduce using rule 125 (empty -> .) ]
  ! NOT             [ reduce using rule 125 (empty -> .) ]
  ! MM              [ reduce using rule 125 (empty -> .) ]
  ! PP              [ reduce using rule 125 (empty -> .) ]
  ! NEW             [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    expresiones                    shift and go to state 56
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 44
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 118
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 60
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    bloque2                        shift and go to state 119
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 45

    (95) termino -> factor . termino2
    (96) termino2 -> . STAR termino
    (97) termino2 -> . SLASH termino
    (98) termino2 -> . MOD termino
    (99) termino2 -> . empty
    (125) empty -> .

    STAR            shift and go to state 120
    SLASH           shift and go to state 122
    MOD             shift and go to state 124
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GREATERTHAN     reduce using rule 125 (empty -> .)
    LESSTHAN        reduce using rule 125 (empty -> .)
    GREATEREQUAL    reduce using rule 125 (empty -> .)
    LESSEQUAL       reduce using rule 125 (empty -> .)
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    termino2                       shift and go to state 121
    empty                          shift and go to state 123

state 46

    (100) factor -> exponencial . factor2
    (101) factor2 -> . EXP factor
    (102) factor2 -> . empty
    (125) empty -> .

    EXP             shift and go to state 126
    STAR            reduce using rule 125 (empty -> .)
    SLASH           reduce using rule 125 (empty -> .)
    MOD             reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GREATERTHAN     reduce using rule 125 (empty -> .)
    LESSTHAN        reduce using rule 125 (empty -> .)
    GREATEREQUAL    reduce using rule 125 (empty -> .)
    LESSEQUAL       reduce using rule 125 (empty -> .)
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    empty                          shift and go to state 125
    factor2                        shift and go to state 127

state 47

    (10) model -> empty .
    (60) bloque2 -> empty .
    (109) exponencial2 -> empty .

  ! reduce/reduce conflict for IF resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for BUILD resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CONDITION resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TBOOL resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TFLOAT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for NOT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for MM resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for PP resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for NEW resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RCURLY resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CTEI resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CTEI resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 10 (model -> empty .)
    IF              reduce using rule 10 (model -> empty .)
    PRINT           reduce using rule 10 (model -> empty .)
    FOR             reduce using rule 10 (model -> empty .)
    RETURN          reduce using rule 10 (model -> empty .)
    BUILD           reduce using rule 10 (model -> empty .)
    CONDITION       reduce using rule 10 (model -> empty .)
    ID              reduce using rule 10 (model -> empty .)
    TINT            reduce using rule 10 (model -> empty .)
    TBOOL           reduce using rule 10 (model -> empty .)
    TFLOAT          reduce using rule 10 (model -> empty .)
    LPAREN          reduce using rule 10 (model -> empty .)
    NOT             reduce using rule 10 (model -> empty .)
    MM              reduce using rule 10 (model -> empty .)
    PP              reduce using rule 10 (model -> empty .)
    NEW             reduce using rule 10 (model -> empty .)
    RCURLY          reduce using rule 10 (model -> empty .)
    CTEI            reduce using rule 10 (model -> empty .)
    CTEF            reduce using rule 10 (model -> empty .)

  ! IF              [ reduce using rule 60 (bloque2 -> empty .) ]
  ! PRINT           [ reduce using rule 60 (bloque2 -> empty .) ]
  ! FOR             [ reduce using rule 60 (bloque2 -> empty .) ]
  ! RETURN          [ reduce using rule 60 (bloque2 -> empty .) ]
  ! BUILD           [ reduce using rule 60 (bloque2 -> empty .) ]
  ! CONDITION       [ reduce using rule 60 (bloque2 -> empty .) ]
  ! ID              [ reduce using rule 60 (bloque2 -> empty .) ]
  ! TINT            [ reduce using rule 60 (bloque2 -> empty .) ]
  ! TBOOL           [ reduce using rule 60 (bloque2 -> empty .) ]
  ! TFLOAT          [ reduce using rule 60 (bloque2 -> empty .) ]
  ! LPAREN          [ reduce using rule 60 (bloque2 -> empty .) ]
  ! NOT             [ reduce using rule 60 (bloque2 -> empty .) ]
  ! MM              [ reduce using rule 60 (bloque2 -> empty .) ]
  ! PP              [ reduce using rule 60 (bloque2 -> empty .) ]
  ! NEW             [ reduce using rule 60 (bloque2 -> empty .) ]
  ! RCURLY          [ reduce using rule 60 (bloque2 -> empty .) ]
  ! CTEI            [ reduce using rule 60 (bloque2 -> empty .) ]
  ! CTEF            [ reduce using rule 60 (bloque2 -> empty .) ]
  ! ID              [ reduce using rule 109 (exponencial2 -> empty .) ]
  ! CTEI            [ reduce using rule 109 (exponencial2 -> empty .) ]
  ! CTEF            [ reduce using rule 109 (exponencial2 -> empty .) ]


state 48

    (1) program -> functions MODEL LCURLY vars data model . bloque2 RCURLY
    (59) bloque2 -> . statement bloque2
    (60) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (125) empty -> .
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 44
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 118
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    expresiones                    shift and go to state 56
    declaration                    shift and go to state 60
    wherecondition                 shift and go to state 72
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    bloque2                        shift and go to state 128
    asign                          shift and go to state 69

state 49

    (65) expresion2 -> expresion3 . expresion2i
    (66) expresion2i -> . AND expresion2
    (67) expresion2i -> . empty
    (125) empty -> .

    AND             shift and go to state 129
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresion2i                    shift and go to state 130
    empty                          shift and go to state 131

state 50

    (62) expresion -> expresion2 . expresioni
    (63) expresioni -> . OR expresion
    (64) expresioni -> . empty
    (125) empty -> .

    OR              shift and go to state 133
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresioni                     shift and go to state 132
    empty                          shift and go to state 134

state 51

    (21) statement -> return .

    WHERE           reduce using rule 21 (statement -> return .)
    IF              reduce using rule 21 (statement -> return .)
    PRINT           reduce using rule 21 (statement -> return .)
    FOR             reduce using rule 21 (statement -> return .)
    RETURN          reduce using rule 21 (statement -> return .)
    BUILD           reduce using rule 21 (statement -> return .)
    CONDITION       reduce using rule 21 (statement -> return .)
    ID              reduce using rule 21 (statement -> return .)
    TINT            reduce using rule 21 (statement -> return .)
    TBOOL           reduce using rule 21 (statement -> return .)
    TFLOAT          reduce using rule 21 (statement -> return .)
    LPAREN          reduce using rule 21 (statement -> return .)
    NOT             reduce using rule 21 (statement -> return .)
    MM              reduce using rule 21 (statement -> return .)
    PP              reduce using rule 21 (statement -> return .)
    NEW             reduce using rule 21 (statement -> return .)
    CTEI            reduce using rule 21 (statement -> return .)
    CTEF            reduce using rule 21 (statement -> return .)
    RCURLY          reduce using rule 21 (statement -> return .)


state 52

    (68) expresion3 -> expresion4 . expresion3i
    (69) expresion3i -> . ORB expresion3
    (70) expresion3i -> . empty
    (125) empty -> .

    ORB             shift and go to state 136
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresion3i                    shift and go to state 135
    empty                          shift and go to state 137

state 53

    (42) ciclo -> FOR . ID IN DOT ID bloque

    ID              shift and go to state 138


state 54

    (74) expresion5 -> expresion6 . expresion5i
    (75) expresion5i -> . ANDB expresion5
    (76) expresion5i -> . empty
    (125) empty -> .

    ANDB            shift and go to state 140
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    expresion5i                    shift and go to state 139
    empty                          shift and go to state 141

state 55

    (81) expresion7 -> expresion8 . expresion7i
    (82) expresion7i -> . SHR expresion7
    (83) expresion7i -> . SHL expresion7
    (84) expresion7i -> . empty
    (125) empty -> .

    SHR             shift and go to state 142
    SHL             shift and go to state 144
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    empty                          shift and go to state 145
    expresion7i                    shift and go to state 143

state 56

    (28) asign -> expresiones .

    COMMA           reduce using rule 28 (asign -> expresiones .)
    RPAREN          reduce using rule 28 (asign -> expresiones .)
    WHERE           reduce using rule 28 (asign -> expresiones .)
    SEMIC           reduce using rule 28 (asign -> expresiones .)
    IF              reduce using rule 28 (asign -> expresiones .)
    PRINT           reduce using rule 28 (asign -> expresiones .)
    FOR             reduce using rule 28 (asign -> expresiones .)
    RETURN          reduce using rule 28 (asign -> expresiones .)
    BUILD           reduce using rule 28 (asign -> expresiones .)
    CONDITION       reduce using rule 28 (asign -> expresiones .)
    ID              reduce using rule 28 (asign -> expresiones .)
    TINT            reduce using rule 28 (asign -> expresiones .)
    TBOOL           reduce using rule 28 (asign -> expresiones .)
    TFLOAT          reduce using rule 28 (asign -> expresiones .)
    LPAREN          reduce using rule 28 (asign -> expresiones .)
    NOT             reduce using rule 28 (asign -> expresiones .)
    MM              reduce using rule 28 (asign -> expresiones .)
    PP              reduce using rule 28 (asign -> expresiones .)
    NEW             reduce using rule 28 (asign -> expresiones .)
    CTEI            reduce using rule 28 (asign -> expresiones .)
    CTEF            reduce using rule 28 (asign -> expresiones .)
    RCURLY          reduce using rule 28 (asign -> expresiones .)
    LCURLY          reduce using rule 28 (asign -> expresiones .)


state 57

    (77) expresion6 -> expresion7 . expresion6i
    (78) expresion6i -> . EQ expresion6
    (79) expresion6i -> . DIF expresion6
    (80) expresion6i -> . empty
    (125) empty -> .

    EQ              shift and go to state 148
    DIF             shift and go to state 147
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    empty                          shift and go to state 149
    expresion6i                    shift and go to state 146

state 58

    (13) build -> BUILD . expresion SEMIC
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 150

state 59

    (103) exponencial -> LPAREN . expresion RPAREN
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 151

state 60

    (16) statement -> declaration .

    WHERE           reduce using rule 16 (statement -> declaration .)
    IF              reduce using rule 16 (statement -> declaration .)
    PRINT           reduce using rule 16 (statement -> declaration .)
    FOR             reduce using rule 16 (statement -> declaration .)
    RETURN          reduce using rule 16 (statement -> declaration .)
    BUILD           reduce using rule 16 (statement -> declaration .)
    CONDITION       reduce using rule 16 (statement -> declaration .)
    ID              reduce using rule 16 (statement -> declaration .)
    TINT            reduce using rule 16 (statement -> declaration .)
    TBOOL           reduce using rule 16 (statement -> declaration .)
    TFLOAT          reduce using rule 16 (statement -> declaration .)
    LPAREN          reduce using rule 16 (statement -> declaration .)
    NOT             reduce using rule 16 (statement -> declaration .)
    MM              reduce using rule 16 (statement -> declaration .)
    PP              reduce using rule 16 (statement -> declaration .)
    NEW             reduce using rule 16 (statement -> declaration .)
    CTEI            reduce using rule 16 (statement -> declaration .)
    CTEF            reduce using rule 16 (statement -> declaration .)
    RCURLY          reduce using rule 16 (statement -> declaration .)


state 61

    (7) model -> optimize .
    (8) model -> optimize . where
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    IF              reduce using rule 7 (model -> optimize .)
    PRINT           reduce using rule 7 (model -> optimize .)
    FOR             reduce using rule 7 (model -> optimize .)
    RETURN          reduce using rule 7 (model -> optimize .)
    BUILD           reduce using rule 7 (model -> optimize .)
    CONDITION       reduce using rule 7 (model -> optimize .)
    ID              reduce using rule 7 (model -> optimize .)
    TINT            reduce using rule 7 (model -> optimize .)
    TBOOL           reduce using rule 7 (model -> optimize .)
    TFLOAT          reduce using rule 7 (model -> optimize .)
    LPAREN          reduce using rule 7 (model -> optimize .)
    NOT             reduce using rule 7 (model -> optimize .)
    MM              reduce using rule 7 (model -> optimize .)
    PP              reduce using rule 7 (model -> optimize .)
    NEW             reduce using rule 7 (model -> optimize .)
    RCURLY          reduce using rule 7 (model -> optimize .)
    CTEI            reduce using rule 7 (model -> optimize .)
    CTEF            reduce using rule 7 (model -> optimize .)
    WHERE           shift and go to state 153

    where                          shift and go to state 152

state 62

    (18) statement -> condition .

    WHERE           reduce using rule 18 (statement -> condition .)
    IF              reduce using rule 18 (statement -> condition .)
    PRINT           reduce using rule 18 (statement -> condition .)
    FOR             reduce using rule 18 (statement -> condition .)
    RETURN          reduce using rule 18 (statement -> condition .)
    BUILD           reduce using rule 18 (statement -> condition .)
    CONDITION       reduce using rule 18 (statement -> condition .)
    ID              reduce using rule 18 (statement -> condition .)
    TINT            reduce using rule 18 (statement -> condition .)
    TBOOL           reduce using rule 18 (statement -> condition .)
    TFLOAT          reduce using rule 18 (statement -> condition .)
    LPAREN          reduce using rule 18 (statement -> condition .)
    NOT             reduce using rule 18 (statement -> condition .)
    MM              reduce using rule 18 (statement -> condition .)
    PP              reduce using rule 18 (statement -> condition .)
    NEW             reduce using rule 18 (statement -> condition .)
    CTEI            reduce using rule 18 (statement -> condition .)
    CTEF            reduce using rule 18 (statement -> condition .)
    RCURLY          reduce using rule 18 (statement -> condition .)


state 63

    (36) condition -> IF . asign bloque condition1
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 154

state 64

    (29) expresiones -> expresion . COMMA expresiones
    (30) expresiones -> expresion .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 155
    IF              reduce using rule 30 (expresiones -> expresion .)
    PRINT           reduce using rule 30 (expresiones -> expresion .)
    FOR             reduce using rule 30 (expresiones -> expresion .)
    RETURN          reduce using rule 30 (expresiones -> expresion .)
    BUILD           reduce using rule 30 (expresiones -> expresion .)
    CONDITION       reduce using rule 30 (expresiones -> expresion .)
    ID              reduce using rule 30 (expresiones -> expresion .)
    TINT            reduce using rule 30 (expresiones -> expresion .)
    TBOOL           reduce using rule 30 (expresiones -> expresion .)
    TFLOAT          reduce using rule 30 (expresiones -> expresion .)
    LPAREN          reduce using rule 30 (expresiones -> expresion .)
    NOT             reduce using rule 30 (expresiones -> expresion .)
    MM              reduce using rule 30 (expresiones -> expresion .)
    PP              reduce using rule 30 (expresiones -> expresion .)
    NEW             reduce using rule 30 (expresiones -> expresion .)
    CTEI            reduce using rule 30 (expresiones -> expresion .)
    CTEF            reduce using rule 30 (expresiones -> expresion .)
    RCURLY          reduce using rule 30 (expresiones -> expresion .)
    WHERE           reduce using rule 30 (expresiones -> expresion .)
    SEMIC           reduce using rule 30 (expresiones -> expresion .)
    LCURLY          reduce using rule 30 (expresiones -> expresion .)
    RPAREN          reduce using rule 30 (expresiones -> expresion .)

  ! COMMA           [ reduce using rule 30 (expresiones -> expresion .) ]


state 65

    (9) model -> bloque2 .

    IF              reduce using rule 9 (model -> bloque2 .)
    PRINT           reduce using rule 9 (model -> bloque2 .)
    FOR             reduce using rule 9 (model -> bloque2 .)
    RETURN          reduce using rule 9 (model -> bloque2 .)
    BUILD           reduce using rule 9 (model -> bloque2 .)
    CONDITION       reduce using rule 9 (model -> bloque2 .)
    ID              reduce using rule 9 (model -> bloque2 .)
    TINT            reduce using rule 9 (model -> bloque2 .)
    TBOOL           reduce using rule 9 (model -> bloque2 .)
    TFLOAT          reduce using rule 9 (model -> bloque2 .)
    LPAREN          reduce using rule 9 (model -> bloque2 .)
    NOT             reduce using rule 9 (model -> bloque2 .)
    MM              reduce using rule 9 (model -> bloque2 .)
    PP              reduce using rule 9 (model -> bloque2 .)
    NEW             reduce using rule 9 (model -> bloque2 .)
    RCURLY          reduce using rule 9 (model -> bloque2 .)
    CTEI            reduce using rule 9 (model -> bloque2 .)
    CTEF            reduce using rule 9 (model -> bloque2 .)


state 66

    (107) exponencial2 -> PP .

    ID              reduce using rule 107 (exponencial2 -> PP .)
    CTEI            reduce using rule 107 (exponencial2 -> PP .)
    CTEF            reduce using rule 107 (exponencial2 -> PP .)


state 67

    (106) exponencial2 -> MM .

    ID              reduce using rule 106 (exponencial2 -> MM .)
    CTEI            reduce using rule 106 (exponencial2 -> MM .)
    CTEF            reduce using rule 106 (exponencial2 -> MM .)


state 68

    (12) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 156


state 69

    (17) statement -> asign .

    WHERE           reduce using rule 17 (statement -> asign .)
    IF              reduce using rule 17 (statement -> asign .)
    PRINT           reduce using rule 17 (statement -> asign .)
    FOR             reduce using rule 17 (statement -> asign .)
    RETURN          reduce using rule 17 (statement -> asign .)
    BUILD           reduce using rule 17 (statement -> asign .)
    CONDITION       reduce using rule 17 (statement -> asign .)
    ID              reduce using rule 17 (statement -> asign .)
    TINT            reduce using rule 17 (statement -> asign .)
    TBOOL           reduce using rule 17 (statement -> asign .)
    TFLOAT          reduce using rule 17 (statement -> asign .)
    LPAREN          reduce using rule 17 (statement -> asign .)
    NOT             reduce using rule 17 (statement -> asign .)
    MM              reduce using rule 17 (statement -> asign .)
    PP              reduce using rule 17 (statement -> asign .)
    NEW             reduce using rule 17 (statement -> asign .)
    CTEI            reduce using rule 17 (statement -> asign .)
    CTEF            reduce using rule 17 (statement -> asign .)
    RCURLY          reduce using rule 17 (statement -> asign .)


state 70

    (15) wherecondition -> CONDITION . expresion SEMIC
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 157

state 71

    (105) exponencial2 -> NOT .

    ID              reduce using rule 105 (exponencial2 -> NOT .)
    CTEI            reduce using rule 105 (exponencial2 -> NOT .)
    CTEF            reduce using rule 105 (exponencial2 -> NOT .)


state 72

    (23) statement -> wherecondition .

    WHERE           reduce using rule 23 (statement -> wherecondition .)
    IF              reduce using rule 23 (statement -> wherecondition .)
    PRINT           reduce using rule 23 (statement -> wherecondition .)
    FOR             reduce using rule 23 (statement -> wherecondition .)
    RETURN          reduce using rule 23 (statement -> wherecondition .)
    BUILD           reduce using rule 23 (statement -> wherecondition .)
    CONDITION       reduce using rule 23 (statement -> wherecondition .)
    ID              reduce using rule 23 (statement -> wherecondition .)
    TINT            reduce using rule 23 (statement -> wherecondition .)
    TBOOL           reduce using rule 23 (statement -> wherecondition .)
    TFLOAT          reduce using rule 23 (statement -> wherecondition .)
    LPAREN          reduce using rule 23 (statement -> wherecondition .)
    NOT             reduce using rule 23 (statement -> wherecondition .)
    MM              reduce using rule 23 (statement -> wherecondition .)
    PP              reduce using rule 23 (statement -> wherecondition .)
    NEW             reduce using rule 23 (statement -> wherecondition .)
    CTEI            reduce using rule 23 (statement -> wherecondition .)
    CTEF            reduce using rule 23 (statement -> wherecondition .)
    RCURLY          reduce using rule 23 (statement -> wherecondition .)


state 73

    (43) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 . bloque
    (58) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 158

    bloque                         shift and go to state 159

state 74

    (48) funcion3 -> LPAREN . type RPAREN
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 160

state 75

    (46) funcion2 -> COMMA . type ID funcion2
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 161

state 76

    (44) funcion1 -> type ID funcion2 .

    RPAREN          reduce using rule 44 (funcion1 -> type ID funcion2 .)


state 77

    (52) declaration -> typedeclaration POINTS . ID dec22 SEMIC

    ID              shift and go to state 162


state 78

    (6) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 6 (varblock -> VARS LCURLY lvars RCURLY .)


state 79

    (50) lvars -> declaration lvars .

    RCURLY          reduce using rule 50 (lvars -> declaration lvars .)


state 80

    (53) typedeclaration -> type dimensions .

    POINTS          reduce using rule 53 (typedeclaration -> type dimensions .)


state 81

    (54) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    expresion4                     shift and go to state 52
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 163

state 82

    (55) dimensions -> empty .

    POINTS          reduce using rule 55 (dimensions -> empty .)
    ASEQ            reduce using rule 55 (dimensions -> empty .)
    PLUSEQ          reduce using rule 55 (dimensions -> empty .)
    MINEQ           reduce using rule 55 (dimensions -> empty .)
    MULTEQ          reduce using rule 55 (dimensions -> empty .)
    DIVEQ           reduce using rule 55 (dimensions -> empty .)
    EXP             reduce using rule 55 (dimensions -> empty .)
    STAR            reduce using rule 55 (dimensions -> empty .)
    SLASH           reduce using rule 55 (dimensions -> empty .)
    MOD             reduce using rule 55 (dimensions -> empty .)
    PLUS            reduce using rule 55 (dimensions -> empty .)
    MINUS           reduce using rule 55 (dimensions -> empty .)
    GREATERTHAN     reduce using rule 55 (dimensions -> empty .)
    LESSTHAN        reduce using rule 55 (dimensions -> empty .)
    GREATEREQUAL    reduce using rule 55 (dimensions -> empty .)
    LESSEQUAL       reduce using rule 55 (dimensions -> empty .)
    SHR             reduce using rule 55 (dimensions -> empty .)
    SHL             reduce using rule 55 (dimensions -> empty .)
    EQ              reduce using rule 55 (dimensions -> empty .)
    DIF             reduce using rule 55 (dimensions -> empty .)
    ANDB            reduce using rule 55 (dimensions -> empty .)
    XOR             reduce using rule 55 (dimensions -> empty .)
    ORB             reduce using rule 55 (dimensions -> empty .)
    AND             reduce using rule 55 (dimensions -> empty .)
    OR              reduce using rule 55 (dimensions -> empty .)
    COMMA           reduce using rule 55 (dimensions -> empty .)
    IF              reduce using rule 55 (dimensions -> empty .)
    PRINT           reduce using rule 55 (dimensions -> empty .)
    FOR             reduce using rule 55 (dimensions -> empty .)
    RETURN          reduce using rule 55 (dimensions -> empty .)
    BUILD           reduce using rule 55 (dimensions -> empty .)
    CONDITION       reduce using rule 55 (dimensions -> empty .)
    ID              reduce using rule 55 (dimensions -> empty .)
    TINT            reduce using rule 55 (dimensions -> empty .)
    TBOOL           reduce using rule 55 (dimensions -> empty .)
    TFLOAT          reduce using rule 55 (dimensions -> empty .)
    LPAREN          reduce using rule 55 (dimensions -> empty .)
    NOT             reduce using rule 55 (dimensions -> empty .)
    MM              reduce using rule 55 (dimensions -> empty .)
    PP              reduce using rule 55 (dimensions -> empty .)
    NEW             reduce using rule 55 (dimensions -> empty .)
    CTEI            reduce using rule 55 (dimensions -> empty .)
    CTEF            reduce using rule 55 (dimensions -> empty .)
    RCURLY          reduce using rule 55 (dimensions -> empty .)
    WHERE           reduce using rule 55 (dimensions -> empty .)
    SEMIC           reduce using rule 55 (dimensions -> empty .)
    RPAREN          reduce using rule 55 (dimensions -> empty .)
    LCURLY          reduce using rule 55 (dimensions -> empty .)
    RBRACKET        reduce using rule 55 (dimensions -> empty .)


state 83

    (26) asignmany -> empty .
    (109) exponencial2 -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)
    ID              reduce using rule 109 (exponencial2 -> empty .)
    CTEI            reduce using rule 109 (exponencial2 -> empty .)
    CTEF            reduce using rule 109 (exponencial2 -> empty .)


state 84

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 164


state 85

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (125) empty -> .
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    expresion3                     shift and go to state 49
    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 83
    asignmany                      shift and go to state 165
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 85

state 86

    (109) exponencial2 -> empty .

    ID              reduce using rule 109 (exponencial2 -> empty .)
    CTEI            reduce using rule 109 (exponencial2 -> empty .)
    CTEF            reduce using rule 109 (exponencial2 -> empty .)


state 87

    (61) return -> RETURN asign .

    IF              reduce using rule 61 (return -> RETURN asign .)
    PRINT           reduce using rule 61 (return -> RETURN asign .)
    FOR             reduce using rule 61 (return -> RETURN asign .)
    RETURN          reduce using rule 61 (return -> RETURN asign .)
    BUILD           reduce using rule 61 (return -> RETURN asign .)
    CONDITION       reduce using rule 61 (return -> RETURN asign .)
    ID              reduce using rule 61 (return -> RETURN asign .)
    TINT            reduce using rule 61 (return -> RETURN asign .)
    TBOOL           reduce using rule 61 (return -> RETURN asign .)
    TFLOAT          reduce using rule 61 (return -> RETURN asign .)
    LPAREN          reduce using rule 61 (return -> RETURN asign .)
    NOT             reduce using rule 61 (return -> RETURN asign .)
    MM              reduce using rule 61 (return -> RETURN asign .)
    PP              reduce using rule 61 (return -> RETURN asign .)
    NEW             reduce using rule 61 (return -> RETURN asign .)
    CTEI            reduce using rule 61 (return -> RETURN asign .)
    CTEF            reduce using rule 61 (return -> RETURN asign .)
    RCURLY          reduce using rule 61 (return -> RETURN asign .)
    WHERE           reduce using rule 61 (return -> RETURN asign .)


state 88

    (11) optimize -> MIN LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    expresiones                    shift and go to state 56
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 166
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 60
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 89

    (88) expresion8i -> GREATEREQUAL . expresion8
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 167
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 90

    (85) expresion8 -> expresion9 expresion8i .

    SHR             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    SHL             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    EQ              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    DIF             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    ANDB            reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    XOR             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    ORB             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    AND             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    OR              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    COMMA           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    IF              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    PRINT           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    FOR             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    RETURN          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    BUILD           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    CONDITION       reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    ID              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    TINT            reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    TBOOL           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    TFLOAT          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    LPAREN          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    NOT             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    MM              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    PP              reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    NEW             reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    CTEI            reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    CTEF            reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    RCURLY          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    WHERE           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    SEMIC           reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    RPAREN          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    LCURLY          reduce using rule 85 (expresion8 -> expresion9 expresion8i .)
    RBRACKET        reduce using rule 85 (expresion8 -> expresion9 expresion8i .)


state 91

    (87) expresion8i -> LESSTHAN . expresion8
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 168
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 92

    (86) expresion8i -> GREATERTHAN . expresion8
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 169
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 93

    (89) expresion8i -> LESSEQUAL . expresion8
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 170
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 94

    (90) expresion8i -> empty .

    SHR             reduce using rule 90 (expresion8i -> empty .)
    SHL             reduce using rule 90 (expresion8i -> empty .)
    EQ              reduce using rule 90 (expresion8i -> empty .)
    DIF             reduce using rule 90 (expresion8i -> empty .)
    ANDB            reduce using rule 90 (expresion8i -> empty .)
    XOR             reduce using rule 90 (expresion8i -> empty .)
    ORB             reduce using rule 90 (expresion8i -> empty .)
    AND             reduce using rule 90 (expresion8i -> empty .)
    OR              reduce using rule 90 (expresion8i -> empty .)
    COMMA           reduce using rule 90 (expresion8i -> empty .)
    IF              reduce using rule 90 (expresion8i -> empty .)
    PRINT           reduce using rule 90 (expresion8i -> empty .)
    FOR             reduce using rule 90 (expresion8i -> empty .)
    RETURN          reduce using rule 90 (expresion8i -> empty .)
    BUILD           reduce using rule 90 (expresion8i -> empty .)
    CONDITION       reduce using rule 90 (expresion8i -> empty .)
    ID              reduce using rule 90 (expresion8i -> empty .)
    TINT            reduce using rule 90 (expresion8i -> empty .)
    TBOOL           reduce using rule 90 (expresion8i -> empty .)
    TFLOAT          reduce using rule 90 (expresion8i -> empty .)
    LPAREN          reduce using rule 90 (expresion8i -> empty .)
    NOT             reduce using rule 90 (expresion8i -> empty .)
    MM              reduce using rule 90 (expresion8i -> empty .)
    PP              reduce using rule 90 (expresion8i -> empty .)
    NEW             reduce using rule 90 (expresion8i -> empty .)
    CTEI            reduce using rule 90 (expresion8i -> empty .)
    CTEF            reduce using rule 90 (expresion8i -> empty .)
    RCURLY          reduce using rule 90 (expresion8i -> empty .)
    WHERE           reduce using rule 90 (expresion8i -> empty .)
    SEMIC           reduce using rule 90 (expresion8i -> empty .)
    RPAREN          reduce using rule 90 (expresion8i -> empty .)
    LCURLY          reduce using rule 90 (expresion8i -> empty .)
    RBRACKET        reduce using rule 90 (expresion8i -> empty .)


state 95

    (91) expresion9 -> termino expresion9i .

    GREATERTHAN     reduce using rule 91 (expresion9 -> termino expresion9i .)
    LESSTHAN        reduce using rule 91 (expresion9 -> termino expresion9i .)
    GREATEREQUAL    reduce using rule 91 (expresion9 -> termino expresion9i .)
    LESSEQUAL       reduce using rule 91 (expresion9 -> termino expresion9i .)
    SHR             reduce using rule 91 (expresion9 -> termino expresion9i .)
    SHL             reduce using rule 91 (expresion9 -> termino expresion9i .)
    EQ              reduce using rule 91 (expresion9 -> termino expresion9i .)
    DIF             reduce using rule 91 (expresion9 -> termino expresion9i .)
    ANDB            reduce using rule 91 (expresion9 -> termino expresion9i .)
    XOR             reduce using rule 91 (expresion9 -> termino expresion9i .)
    ORB             reduce using rule 91 (expresion9 -> termino expresion9i .)
    AND             reduce using rule 91 (expresion9 -> termino expresion9i .)
    OR              reduce using rule 91 (expresion9 -> termino expresion9i .)
    COMMA           reduce using rule 91 (expresion9 -> termino expresion9i .)
    IF              reduce using rule 91 (expresion9 -> termino expresion9i .)
    PRINT           reduce using rule 91 (expresion9 -> termino expresion9i .)
    FOR             reduce using rule 91 (expresion9 -> termino expresion9i .)
    RETURN          reduce using rule 91 (expresion9 -> termino expresion9i .)
    BUILD           reduce using rule 91 (expresion9 -> termino expresion9i .)
    CONDITION       reduce using rule 91 (expresion9 -> termino expresion9i .)
    ID              reduce using rule 91 (expresion9 -> termino expresion9i .)
    TINT            reduce using rule 91 (expresion9 -> termino expresion9i .)
    TBOOL           reduce using rule 91 (expresion9 -> termino expresion9i .)
    TFLOAT          reduce using rule 91 (expresion9 -> termino expresion9i .)
    LPAREN          reduce using rule 91 (expresion9 -> termino expresion9i .)
    NOT             reduce using rule 91 (expresion9 -> termino expresion9i .)
    MM              reduce using rule 91 (expresion9 -> termino expresion9i .)
    PP              reduce using rule 91 (expresion9 -> termino expresion9i .)
    NEW             reduce using rule 91 (expresion9 -> termino expresion9i .)
    CTEI            reduce using rule 91 (expresion9 -> termino expresion9i .)
    CTEF            reduce using rule 91 (expresion9 -> termino expresion9i .)
    RCURLY          reduce using rule 91 (expresion9 -> termino expresion9i .)
    WHERE           reduce using rule 91 (expresion9 -> termino expresion9i .)
    SEMIC           reduce using rule 91 (expresion9 -> termino expresion9i .)
    RPAREN          reduce using rule 91 (expresion9 -> termino expresion9i .)
    LCURLY          reduce using rule 91 (expresion9 -> termino expresion9i .)
    RBRACKET        reduce using rule 91 (expresion9 -> termino expresion9i .)


state 96

    (92) expresion9i -> PLUS . expresion9
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 171
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 97

    (93) expresion9i -> MINUS . expresion9
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion9                     shift and go to state 172
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 98

    (94) expresion9i -> empty .

    GREATERTHAN     reduce using rule 94 (expresion9i -> empty .)
    LESSTHAN        reduce using rule 94 (expresion9i -> empty .)
    GREATEREQUAL    reduce using rule 94 (expresion9i -> empty .)
    LESSEQUAL       reduce using rule 94 (expresion9i -> empty .)
    SHR             reduce using rule 94 (expresion9i -> empty .)
    SHL             reduce using rule 94 (expresion9i -> empty .)
    EQ              reduce using rule 94 (expresion9i -> empty .)
    DIF             reduce using rule 94 (expresion9i -> empty .)
    ANDB            reduce using rule 94 (expresion9i -> empty .)
    XOR             reduce using rule 94 (expresion9i -> empty .)
    ORB             reduce using rule 94 (expresion9i -> empty .)
    AND             reduce using rule 94 (expresion9i -> empty .)
    OR              reduce using rule 94 (expresion9i -> empty .)
    COMMA           reduce using rule 94 (expresion9i -> empty .)
    IF              reduce using rule 94 (expresion9i -> empty .)
    PRINT           reduce using rule 94 (expresion9i -> empty .)
    FOR             reduce using rule 94 (expresion9i -> empty .)
    RETURN          reduce using rule 94 (expresion9i -> empty .)
    BUILD           reduce using rule 94 (expresion9i -> empty .)
    CONDITION       reduce using rule 94 (expresion9i -> empty .)
    ID              reduce using rule 94 (expresion9i -> empty .)
    TINT            reduce using rule 94 (expresion9i -> empty .)
    TBOOL           reduce using rule 94 (expresion9i -> empty .)
    TFLOAT          reduce using rule 94 (expresion9i -> empty .)
    LPAREN          reduce using rule 94 (expresion9i -> empty .)
    NOT             reduce using rule 94 (expresion9i -> empty .)
    MM              reduce using rule 94 (expresion9i -> empty .)
    PP              reduce using rule 94 (expresion9i -> empty .)
    NEW             reduce using rule 94 (expresion9i -> empty .)
    CTEI            reduce using rule 94 (expresion9i -> empty .)
    CTEF            reduce using rule 94 (expresion9i -> empty .)
    RCURLY          reduce using rule 94 (expresion9i -> empty .)
    WHERE           reduce using rule 94 (expresion9i -> empty .)
    SEMIC           reduce using rule 94 (expresion9i -> empty .)
    RPAREN          reduce using rule 94 (expresion9i -> empty .)
    LCURLY          reduce using rule 94 (expresion9i -> empty .)
    RBRACKET        reduce using rule 94 (expresion9i -> empty .)


state 99

    (39) write -> PRINT asign . write2 SEMIC
    (40) write2 -> . COMMA asign write2
    (41) write2 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 174
    SEMIC           reduce using rule 125 (empty -> .)

    write2                         shift and go to state 173
    empty                          shift and go to state 175

state 100

    (72) expresion4i -> XOR . expresion4
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 176
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    empty                          shift and go to state 86
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46

state 101

    (73) expresion4i -> empty .

    ORB             reduce using rule 73 (expresion4i -> empty .)
    AND             reduce using rule 73 (expresion4i -> empty .)
    OR              reduce using rule 73 (expresion4i -> empty .)
    COMMA           reduce using rule 73 (expresion4i -> empty .)
    IF              reduce using rule 73 (expresion4i -> empty .)
    PRINT           reduce using rule 73 (expresion4i -> empty .)
    FOR             reduce using rule 73 (expresion4i -> empty .)
    RETURN          reduce using rule 73 (expresion4i -> empty .)
    BUILD           reduce using rule 73 (expresion4i -> empty .)
    CONDITION       reduce using rule 73 (expresion4i -> empty .)
    ID              reduce using rule 73 (expresion4i -> empty .)
    TINT            reduce using rule 73 (expresion4i -> empty .)
    TBOOL           reduce using rule 73 (expresion4i -> empty .)
    TFLOAT          reduce using rule 73 (expresion4i -> empty .)
    LPAREN          reduce using rule 73 (expresion4i -> empty .)
    NOT             reduce using rule 73 (expresion4i -> empty .)
    MM              reduce using rule 73 (expresion4i -> empty .)
    PP              reduce using rule 73 (expresion4i -> empty .)
    NEW             reduce using rule 73 (expresion4i -> empty .)
    CTEI            reduce using rule 73 (expresion4i -> empty .)
    CTEF            reduce using rule 73 (expresion4i -> empty .)
    RCURLY          reduce using rule 73 (expresion4i -> empty .)
    WHERE           reduce using rule 73 (expresion4i -> empty .)
    SEMIC           reduce using rule 73 (expresion4i -> empty .)
    RPAREN          reduce using rule 73 (expresion4i -> empty .)
    LCURLY          reduce using rule 73 (expresion4i -> empty .)
    RBRACKET        reduce using rule 73 (expresion4i -> empty .)


state 102

    (71) expresion4 -> expresion5 expresion4i .

    ORB             reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    AND             reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    OR              reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    COMMA           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    ID              reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    LPAREN          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    NOT             reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    MM              reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    PP              reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    NEW             reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    CTEI            reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    CTEF            reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    RCURLY          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    LCURLY          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    IF              reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    PRINT           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    FOR             reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    RETURN          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    BUILD           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    CONDITION       reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    TINT            reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    TBOOL           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    TFLOAT          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    RBRACKET        reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    SEMIC           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    WHERE           reduce using rule 71 (expresion4 -> expresion5 expresion4i .)
    RPAREN          reduce using rule 71 (expresion4 -> expresion5 expresion4i .)


state 103

    (32) asign_signo -> PLUSEQ .

    LPAREN          reduce using rule 32 (asign_signo -> PLUSEQ .)
    NOT             reduce using rule 32 (asign_signo -> PLUSEQ .)
    MM              reduce using rule 32 (asign_signo -> PLUSEQ .)
    PP              reduce using rule 32 (asign_signo -> PLUSEQ .)
    NEW             reduce using rule 32 (asign_signo -> PLUSEQ .)
    ID              reduce using rule 32 (asign_signo -> PLUSEQ .)
    CTEI            reduce using rule 32 (asign_signo -> PLUSEQ .)
    CTEF            reduce using rule 32 (asign_signo -> PLUSEQ .)


state 104

    (31) asign_signo -> ASEQ .

    LPAREN          reduce using rule 31 (asign_signo -> ASEQ .)
    NOT             reduce using rule 31 (asign_signo -> ASEQ .)
    MM              reduce using rule 31 (asign_signo -> ASEQ .)
    PP              reduce using rule 31 (asign_signo -> ASEQ .)
    NEW             reduce using rule 31 (asign_signo -> ASEQ .)
    ID              reduce using rule 31 (asign_signo -> ASEQ .)
    CTEI            reduce using rule 31 (asign_signo -> ASEQ .)
    CTEF            reduce using rule 31 (asign_signo -> ASEQ .)


state 105

    (33) asign_signo -> MINEQ .

    LPAREN          reduce using rule 33 (asign_signo -> MINEQ .)
    NOT             reduce using rule 33 (asign_signo -> MINEQ .)
    MM              reduce using rule 33 (asign_signo -> MINEQ .)
    PP              reduce using rule 33 (asign_signo -> MINEQ .)
    NEW             reduce using rule 33 (asign_signo -> MINEQ .)
    ID              reduce using rule 33 (asign_signo -> MINEQ .)
    CTEI            reduce using rule 33 (asign_signo -> MINEQ .)
    CTEF            reduce using rule 33 (asign_signo -> MINEQ .)


state 106

    (34) asign_signo -> MULTEQ .

    LPAREN          reduce using rule 34 (asign_signo -> MULTEQ .)
    NOT             reduce using rule 34 (asign_signo -> MULTEQ .)
    MM              reduce using rule 34 (asign_signo -> MULTEQ .)
    PP              reduce using rule 34 (asign_signo -> MULTEQ .)
    NEW             reduce using rule 34 (asign_signo -> MULTEQ .)
    ID              reduce using rule 34 (asign_signo -> MULTEQ .)
    CTEI            reduce using rule 34 (asign_signo -> MULTEQ .)
    CTEF            reduce using rule 34 (asign_signo -> MULTEQ .)


state 107

    (27) asign -> id asign_signo . expresiones SEMIC
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    expresiones                    shift and go to state 177
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64

state 108

    (35) asign_signo -> DIVEQ .

    LPAREN          reduce using rule 35 (asign_signo -> DIVEQ .)
    NOT             reduce using rule 35 (asign_signo -> DIVEQ .)
    MM              reduce using rule 35 (asign_signo -> DIVEQ .)
    PP              reduce using rule 35 (asign_signo -> DIVEQ .)
    NEW             reduce using rule 35 (asign_signo -> DIVEQ .)
    ID              reduce using rule 35 (asign_signo -> DIVEQ .)
    CTEI            reduce using rule 35 (asign_signo -> DIVEQ .)
    CTEF            reduce using rule 35 (asign_signo -> DIVEQ .)


state 109

    (111) valor -> int .

    EXP             reduce using rule 111 (valor -> int .)
    STAR            reduce using rule 111 (valor -> int .)
    SLASH           reduce using rule 111 (valor -> int .)
    MOD             reduce using rule 111 (valor -> int .)
    PLUS            reduce using rule 111 (valor -> int .)
    MINUS           reduce using rule 111 (valor -> int .)
    GREATERTHAN     reduce using rule 111 (valor -> int .)
    LESSTHAN        reduce using rule 111 (valor -> int .)
    GREATEREQUAL    reduce using rule 111 (valor -> int .)
    LESSEQUAL       reduce using rule 111 (valor -> int .)
    SHR             reduce using rule 111 (valor -> int .)
    SHL             reduce using rule 111 (valor -> int .)
    EQ              reduce using rule 111 (valor -> int .)
    DIF             reduce using rule 111 (valor -> int .)
    ANDB            reduce using rule 111 (valor -> int .)
    XOR             reduce using rule 111 (valor -> int .)
    ORB             reduce using rule 111 (valor -> int .)
    AND             reduce using rule 111 (valor -> int .)
    OR              reduce using rule 111 (valor -> int .)
    COMMA           reduce using rule 111 (valor -> int .)
    IF              reduce using rule 111 (valor -> int .)
    PRINT           reduce using rule 111 (valor -> int .)
    FOR             reduce using rule 111 (valor -> int .)
    RETURN          reduce using rule 111 (valor -> int .)
    BUILD           reduce using rule 111 (valor -> int .)
    CONDITION       reduce using rule 111 (valor -> int .)
    ID              reduce using rule 111 (valor -> int .)
    TINT            reduce using rule 111 (valor -> int .)
    TBOOL           reduce using rule 111 (valor -> int .)
    TFLOAT          reduce using rule 111 (valor -> int .)
    LPAREN          reduce using rule 111 (valor -> int .)
    NOT             reduce using rule 111 (valor -> int .)
    MM              reduce using rule 111 (valor -> int .)
    PP              reduce using rule 111 (valor -> int .)
    NEW             reduce using rule 111 (valor -> int .)
    CTEI            reduce using rule 111 (valor -> int .)
    CTEF            reduce using rule 111 (valor -> int .)
    RCURLY          reduce using rule 111 (valor -> int .)
    WHERE           reduce using rule 111 (valor -> int .)
    SEMIC           reduce using rule 111 (valor -> int .)
    RPAREN          reduce using rule 111 (valor -> int .)
    LCURLY          reduce using rule 111 (valor -> int .)
    RBRACKET        reduce using rule 111 (valor -> int .)


state 110

    (112) valor -> float .

    EXP             reduce using rule 112 (valor -> float .)
    STAR            reduce using rule 112 (valor -> float .)
    SLASH           reduce using rule 112 (valor -> float .)
    MOD             reduce using rule 112 (valor -> float .)
    PLUS            reduce using rule 112 (valor -> float .)
    MINUS           reduce using rule 112 (valor -> float .)
    GREATERTHAN     reduce using rule 112 (valor -> float .)
    LESSTHAN        reduce using rule 112 (valor -> float .)
    GREATEREQUAL    reduce using rule 112 (valor -> float .)
    LESSEQUAL       reduce using rule 112 (valor -> float .)
    SHR             reduce using rule 112 (valor -> float .)
    SHL             reduce using rule 112 (valor -> float .)
    EQ              reduce using rule 112 (valor -> float .)
    DIF             reduce using rule 112 (valor -> float .)
    ANDB            reduce using rule 112 (valor -> float .)
    XOR             reduce using rule 112 (valor -> float .)
    ORB             reduce using rule 112 (valor -> float .)
    AND             reduce using rule 112 (valor -> float .)
    OR              reduce using rule 112 (valor -> float .)
    COMMA           reduce using rule 112 (valor -> float .)
    IF              reduce using rule 112 (valor -> float .)
    PRINT           reduce using rule 112 (valor -> float .)
    FOR             reduce using rule 112 (valor -> float .)
    RETURN          reduce using rule 112 (valor -> float .)
    BUILD           reduce using rule 112 (valor -> float .)
    CONDITION       reduce using rule 112 (valor -> float .)
    ID              reduce using rule 112 (valor -> float .)
    TINT            reduce using rule 112 (valor -> float .)
    TBOOL           reduce using rule 112 (valor -> float .)
    TFLOAT          reduce using rule 112 (valor -> float .)
    LPAREN          reduce using rule 112 (valor -> float .)
    NOT             reduce using rule 112 (valor -> float .)
    MM              reduce using rule 112 (valor -> float .)
    PP              reduce using rule 112 (valor -> float .)
    NEW             reduce using rule 112 (valor -> float .)
    CTEI            reduce using rule 112 (valor -> float .)
    CTEF            reduce using rule 112 (valor -> float .)
    RCURLY          reduce using rule 112 (valor -> float .)
    WHERE           reduce using rule 112 (valor -> float .)
    SEMIC           reduce using rule 112 (valor -> float .)
    RPAREN          reduce using rule 112 (valor -> float .)
    LCURLY          reduce using rule 112 (valor -> float .)
    RBRACKET        reduce using rule 112 (valor -> float .)


state 111

    (110) valor -> id .

    EXP             reduce using rule 110 (valor -> id .)
    STAR            reduce using rule 110 (valor -> id .)
    SLASH           reduce using rule 110 (valor -> id .)
    MOD             reduce using rule 110 (valor -> id .)
    PLUS            reduce using rule 110 (valor -> id .)
    MINUS           reduce using rule 110 (valor -> id .)
    GREATERTHAN     reduce using rule 110 (valor -> id .)
    LESSTHAN        reduce using rule 110 (valor -> id .)
    GREATEREQUAL    reduce using rule 110 (valor -> id .)
    LESSEQUAL       reduce using rule 110 (valor -> id .)
    SHR             reduce using rule 110 (valor -> id .)
    SHL             reduce using rule 110 (valor -> id .)
    EQ              reduce using rule 110 (valor -> id .)
    DIF             reduce using rule 110 (valor -> id .)
    ANDB            reduce using rule 110 (valor -> id .)
    XOR             reduce using rule 110 (valor -> id .)
    ORB             reduce using rule 110 (valor -> id .)
    AND             reduce using rule 110 (valor -> id .)
    OR              reduce using rule 110 (valor -> id .)
    COMMA           reduce using rule 110 (valor -> id .)
    IF              reduce using rule 110 (valor -> id .)
    PRINT           reduce using rule 110 (valor -> id .)
    FOR             reduce using rule 110 (valor -> id .)
    RETURN          reduce using rule 110 (valor -> id .)
    BUILD           reduce using rule 110 (valor -> id .)
    CONDITION       reduce using rule 110 (valor -> id .)
    ID              reduce using rule 110 (valor -> id .)
    TINT            reduce using rule 110 (valor -> id .)
    TBOOL           reduce using rule 110 (valor -> id .)
    TFLOAT          reduce using rule 110 (valor -> id .)
    LPAREN          reduce using rule 110 (valor -> id .)
    NOT             reduce using rule 110 (valor -> id .)
    MM              reduce using rule 110 (valor -> id .)
    PP              reduce using rule 110 (valor -> id .)
    NEW             reduce using rule 110 (valor -> id .)
    CTEI            reduce using rule 110 (valor -> id .)
    CTEF            reduce using rule 110 (valor -> id .)
    RCURLY          reduce using rule 110 (valor -> id .)
    WHERE           reduce using rule 110 (valor -> id .)
    SEMIC           reduce using rule 110 (valor -> id .)
    RPAREN          reduce using rule 110 (valor -> id .)
    LCURLY          reduce using rule 110 (valor -> id .)
    RBRACKET        reduce using rule 110 (valor -> id .)


state 112

    (116) float -> CTEF .

    EXP             reduce using rule 116 (float -> CTEF .)
    STAR            reduce using rule 116 (float -> CTEF .)
    SLASH           reduce using rule 116 (float -> CTEF .)
    MOD             reduce using rule 116 (float -> CTEF .)
    PLUS            reduce using rule 116 (float -> CTEF .)
    MINUS           reduce using rule 116 (float -> CTEF .)
    GREATERTHAN     reduce using rule 116 (float -> CTEF .)
    LESSTHAN        reduce using rule 116 (float -> CTEF .)
    GREATEREQUAL    reduce using rule 116 (float -> CTEF .)
    LESSEQUAL       reduce using rule 116 (float -> CTEF .)
    SHR             reduce using rule 116 (float -> CTEF .)
    SHL             reduce using rule 116 (float -> CTEF .)
    EQ              reduce using rule 116 (float -> CTEF .)
    DIF             reduce using rule 116 (float -> CTEF .)
    ANDB            reduce using rule 116 (float -> CTEF .)
    XOR             reduce using rule 116 (float -> CTEF .)
    ORB             reduce using rule 116 (float -> CTEF .)
    AND             reduce using rule 116 (float -> CTEF .)
    OR              reduce using rule 116 (float -> CTEF .)
    COMMA           reduce using rule 116 (float -> CTEF .)
    IF              reduce using rule 116 (float -> CTEF .)
    PRINT           reduce using rule 116 (float -> CTEF .)
    FOR             reduce using rule 116 (float -> CTEF .)
    RETURN          reduce using rule 116 (float -> CTEF .)
    BUILD           reduce using rule 116 (float -> CTEF .)
    CONDITION       reduce using rule 116 (float -> CTEF .)
    ID              reduce using rule 116 (float -> CTEF .)
    TINT            reduce using rule 116 (float -> CTEF .)
    TBOOL           reduce using rule 116 (float -> CTEF .)
    TFLOAT          reduce using rule 116 (float -> CTEF .)
    LPAREN          reduce using rule 116 (float -> CTEF .)
    NOT             reduce using rule 116 (float -> CTEF .)
    MM              reduce using rule 116 (float -> CTEF .)
    PP              reduce using rule 116 (float -> CTEF .)
    NEW             reduce using rule 116 (float -> CTEF .)
    CTEI            reduce using rule 116 (float -> CTEF .)
    CTEF            reduce using rule 116 (float -> CTEF .)
    RCURLY          reduce using rule 116 (float -> CTEF .)
    WHERE           reduce using rule 116 (float -> CTEF .)
    SEMIC           reduce using rule 116 (float -> CTEF .)
    RPAREN          reduce using rule 116 (float -> CTEF .)
    LCURLY          reduce using rule 116 (float -> CTEF .)
    RBRACKET        reduce using rule 116 (float -> CTEF .)


state 113

    (104) exponencial -> exponencial2 valor .

    EXP             reduce using rule 104 (exponencial -> exponencial2 valor .)
    STAR            reduce using rule 104 (exponencial -> exponencial2 valor .)
    SLASH           reduce using rule 104 (exponencial -> exponencial2 valor .)
    MOD             reduce using rule 104 (exponencial -> exponencial2 valor .)
    PLUS            reduce using rule 104 (exponencial -> exponencial2 valor .)
    MINUS           reduce using rule 104 (exponencial -> exponencial2 valor .)
    GREATERTHAN     reduce using rule 104 (exponencial -> exponencial2 valor .)
    LESSTHAN        reduce using rule 104 (exponencial -> exponencial2 valor .)
    GREATEREQUAL    reduce using rule 104 (exponencial -> exponencial2 valor .)
    LESSEQUAL       reduce using rule 104 (exponencial -> exponencial2 valor .)
    SHR             reduce using rule 104 (exponencial -> exponencial2 valor .)
    SHL             reduce using rule 104 (exponencial -> exponencial2 valor .)
    EQ              reduce using rule 104 (exponencial -> exponencial2 valor .)
    DIF             reduce using rule 104 (exponencial -> exponencial2 valor .)
    ANDB            reduce using rule 104 (exponencial -> exponencial2 valor .)
    XOR             reduce using rule 104 (exponencial -> exponencial2 valor .)
    ORB             reduce using rule 104 (exponencial -> exponencial2 valor .)
    AND             reduce using rule 104 (exponencial -> exponencial2 valor .)
    OR              reduce using rule 104 (exponencial -> exponencial2 valor .)
    COMMA           reduce using rule 104 (exponencial -> exponencial2 valor .)
    IF              reduce using rule 104 (exponencial -> exponencial2 valor .)
    PRINT           reduce using rule 104 (exponencial -> exponencial2 valor .)
    FOR             reduce using rule 104 (exponencial -> exponencial2 valor .)
    RETURN          reduce using rule 104 (exponencial -> exponencial2 valor .)
    BUILD           reduce using rule 104 (exponencial -> exponencial2 valor .)
    CONDITION       reduce using rule 104 (exponencial -> exponencial2 valor .)
    ID              reduce using rule 104 (exponencial -> exponencial2 valor .)
    TINT            reduce using rule 104 (exponencial -> exponencial2 valor .)
    TBOOL           reduce using rule 104 (exponencial -> exponencial2 valor .)
    TFLOAT          reduce using rule 104 (exponencial -> exponencial2 valor .)
    LPAREN          reduce using rule 104 (exponencial -> exponencial2 valor .)
    NOT             reduce using rule 104 (exponencial -> exponencial2 valor .)
    MM              reduce using rule 104 (exponencial -> exponencial2 valor .)
    PP              reduce using rule 104 (exponencial -> exponencial2 valor .)
    NEW             reduce using rule 104 (exponencial -> exponencial2 valor .)
    CTEI            reduce using rule 104 (exponencial -> exponencial2 valor .)
    CTEF            reduce using rule 104 (exponencial -> exponencial2 valor .)
    RCURLY          reduce using rule 104 (exponencial -> exponencial2 valor .)
    WHERE           reduce using rule 104 (exponencial -> exponencial2 valor .)
    SEMIC           reduce using rule 104 (exponencial -> exponencial2 valor .)
    RPAREN          reduce using rule 104 (exponencial -> exponencial2 valor .)
    LCURLY          reduce using rule 104 (exponencial -> exponencial2 valor .)
    RBRACKET        reduce using rule 104 (exponencial -> exponencial2 valor .)


state 114

    (113) int -> CTEI .

    EXP             reduce using rule 113 (int -> CTEI .)
    STAR            reduce using rule 113 (int -> CTEI .)
    SLASH           reduce using rule 113 (int -> CTEI .)
    MOD             reduce using rule 113 (int -> CTEI .)
    PLUS            reduce using rule 113 (int -> CTEI .)
    MINUS           reduce using rule 113 (int -> CTEI .)
    GREATERTHAN     reduce using rule 113 (int -> CTEI .)
    LESSTHAN        reduce using rule 113 (int -> CTEI .)
    GREATEREQUAL    reduce using rule 113 (int -> CTEI .)
    LESSEQUAL       reduce using rule 113 (int -> CTEI .)
    SHR             reduce using rule 113 (int -> CTEI .)
    SHL             reduce using rule 113 (int -> CTEI .)
    EQ              reduce using rule 113 (int -> CTEI .)
    DIF             reduce using rule 113 (int -> CTEI .)
    ANDB            reduce using rule 113 (int -> CTEI .)
    XOR             reduce using rule 113 (int -> CTEI .)
    ORB             reduce using rule 113 (int -> CTEI .)
    AND             reduce using rule 113 (int -> CTEI .)
    OR              reduce using rule 113 (int -> CTEI .)
    COMMA           reduce using rule 113 (int -> CTEI .)
    IF              reduce using rule 113 (int -> CTEI .)
    PRINT           reduce using rule 113 (int -> CTEI .)
    FOR             reduce using rule 113 (int -> CTEI .)
    RETURN          reduce using rule 113 (int -> CTEI .)
    BUILD           reduce using rule 113 (int -> CTEI .)
    CONDITION       reduce using rule 113 (int -> CTEI .)
    ID              reduce using rule 113 (int -> CTEI .)
    TINT            reduce using rule 113 (int -> CTEI .)
    TBOOL           reduce using rule 113 (int -> CTEI .)
    TFLOAT          reduce using rule 113 (int -> CTEI .)
    LPAREN          reduce using rule 113 (int -> CTEI .)
    NOT             reduce using rule 113 (int -> CTEI .)
    MM              reduce using rule 113 (int -> CTEI .)
    PP              reduce using rule 113 (int -> CTEI .)
    NEW             reduce using rule 113 (int -> CTEI .)
    CTEI            reduce using rule 113 (int -> CTEI .)
    CTEF            reduce using rule 113 (int -> CTEI .)
    RCURLY          reduce using rule 113 (int -> CTEI .)
    WHERE           reduce using rule 113 (int -> CTEI .)
    SEMIC           reduce using rule 113 (int -> CTEI .)
    RPAREN          reduce using rule 113 (int -> CTEI .)
    LCURLY          reduce using rule 113 (int -> CTEI .)
    RBRACKET        reduce using rule 113 (int -> CTEI .)


state 115

    (115) id -> ID dimensions .

    ASEQ            reduce using rule 115 (id -> ID dimensions .)
    PLUSEQ          reduce using rule 115 (id -> ID dimensions .)
    MINEQ           reduce using rule 115 (id -> ID dimensions .)
    MULTEQ          reduce using rule 115 (id -> ID dimensions .)
    DIVEQ           reduce using rule 115 (id -> ID dimensions .)
    EXP             reduce using rule 115 (id -> ID dimensions .)
    STAR            reduce using rule 115 (id -> ID dimensions .)
    SLASH           reduce using rule 115 (id -> ID dimensions .)
    MOD             reduce using rule 115 (id -> ID dimensions .)
    PLUS            reduce using rule 115 (id -> ID dimensions .)
    MINUS           reduce using rule 115 (id -> ID dimensions .)
    GREATERTHAN     reduce using rule 115 (id -> ID dimensions .)
    LESSTHAN        reduce using rule 115 (id -> ID dimensions .)
    GREATEREQUAL    reduce using rule 115 (id -> ID dimensions .)
    LESSEQUAL       reduce using rule 115 (id -> ID dimensions .)
    SHR             reduce using rule 115 (id -> ID dimensions .)
    SHL             reduce using rule 115 (id -> ID dimensions .)
    EQ              reduce using rule 115 (id -> ID dimensions .)
    DIF             reduce using rule 115 (id -> ID dimensions .)
    ANDB            reduce using rule 115 (id -> ID dimensions .)
    XOR             reduce using rule 115 (id -> ID dimensions .)
    ORB             reduce using rule 115 (id -> ID dimensions .)
    AND             reduce using rule 115 (id -> ID dimensions .)
    OR              reduce using rule 115 (id -> ID dimensions .)
    COMMA           reduce using rule 115 (id -> ID dimensions .)
    IF              reduce using rule 115 (id -> ID dimensions .)
    PRINT           reduce using rule 115 (id -> ID dimensions .)
    FOR             reduce using rule 115 (id -> ID dimensions .)
    RETURN          reduce using rule 115 (id -> ID dimensions .)
    BUILD           reduce using rule 115 (id -> ID dimensions .)
    CONDITION       reduce using rule 115 (id -> ID dimensions .)
    ID              reduce using rule 115 (id -> ID dimensions .)
    TINT            reduce using rule 115 (id -> ID dimensions .)
    TBOOL           reduce using rule 115 (id -> ID dimensions .)
    TFLOAT          reduce using rule 115 (id -> ID dimensions .)
    LPAREN          reduce using rule 115 (id -> ID dimensions .)
    NOT             reduce using rule 115 (id -> ID dimensions .)
    MM              reduce using rule 115 (id -> ID dimensions .)
    PP              reduce using rule 115 (id -> ID dimensions .)
    NEW             reduce using rule 115 (id -> ID dimensions .)
    CTEI            reduce using rule 115 (id -> ID dimensions .)
    CTEF            reduce using rule 115 (id -> ID dimensions .)
    RCURLY          reduce using rule 115 (id -> ID dimensions .)
    WHERE           reduce using rule 115 (id -> ID dimensions .)
    SEMIC           reduce using rule 115 (id -> ID dimensions .)
    RPAREN          reduce using rule 115 (id -> ID dimensions .)
    LCURLY          reduce using rule 115 (id -> ID dimensions .)
    RBRACKET        reduce using rule 115 (id -> ID dimensions .)


state 116

    (114) id -> ID llamarfuncion .

    ASEQ            reduce using rule 114 (id -> ID llamarfuncion .)
    PLUSEQ          reduce using rule 114 (id -> ID llamarfuncion .)
    MINEQ           reduce using rule 114 (id -> ID llamarfuncion .)
    MULTEQ          reduce using rule 114 (id -> ID llamarfuncion .)
    DIVEQ           reduce using rule 114 (id -> ID llamarfuncion .)
    EXP             reduce using rule 114 (id -> ID llamarfuncion .)
    STAR            reduce using rule 114 (id -> ID llamarfuncion .)
    SLASH           reduce using rule 114 (id -> ID llamarfuncion .)
    MOD             reduce using rule 114 (id -> ID llamarfuncion .)
    PLUS            reduce using rule 114 (id -> ID llamarfuncion .)
    MINUS           reduce using rule 114 (id -> ID llamarfuncion .)
    GREATERTHAN     reduce using rule 114 (id -> ID llamarfuncion .)
    LESSTHAN        reduce using rule 114 (id -> ID llamarfuncion .)
    GREATEREQUAL    reduce using rule 114 (id -> ID llamarfuncion .)
    LESSEQUAL       reduce using rule 114 (id -> ID llamarfuncion .)
    SHR             reduce using rule 114 (id -> ID llamarfuncion .)
    SHL             reduce using rule 114 (id -> ID llamarfuncion .)
    EQ              reduce using rule 114 (id -> ID llamarfuncion .)
    DIF             reduce using rule 114 (id -> ID llamarfuncion .)
    ANDB            reduce using rule 114 (id -> ID llamarfuncion .)
    XOR             reduce using rule 114 (id -> ID llamarfuncion .)
    ORB             reduce using rule 114 (id -> ID llamarfuncion .)
    AND             reduce using rule 114 (id -> ID llamarfuncion .)
    OR              reduce using rule 114 (id -> ID llamarfuncion .)
    COMMA           reduce using rule 114 (id -> ID llamarfuncion .)
    IF              reduce using rule 114 (id -> ID llamarfuncion .)
    PRINT           reduce using rule 114 (id -> ID llamarfuncion .)
    FOR             reduce using rule 114 (id -> ID llamarfuncion .)
    RETURN          reduce using rule 114 (id -> ID llamarfuncion .)
    BUILD           reduce using rule 114 (id -> ID llamarfuncion .)
    CONDITION       reduce using rule 114 (id -> ID llamarfuncion .)
    ID              reduce using rule 114 (id -> ID llamarfuncion .)
    TINT            reduce using rule 114 (id -> ID llamarfuncion .)
    TBOOL           reduce using rule 114 (id -> ID llamarfuncion .)
    TFLOAT          reduce using rule 114 (id -> ID llamarfuncion .)
    LPAREN          reduce using rule 114 (id -> ID llamarfuncion .)
    NOT             reduce using rule 114 (id -> ID llamarfuncion .)
    MM              reduce using rule 114 (id -> ID llamarfuncion .)
    PP              reduce using rule 114 (id -> ID llamarfuncion .)
    NEW             reduce using rule 114 (id -> ID llamarfuncion .)
    CTEI            reduce using rule 114 (id -> ID llamarfuncion .)
    CTEF            reduce using rule 114 (id -> ID llamarfuncion .)
    RCURLY          reduce using rule 114 (id -> ID llamarfuncion .)
    WHERE           reduce using rule 114 (id -> ID llamarfuncion .)
    SEMIC           reduce using rule 114 (id -> ID llamarfuncion .)
    RPAREN          reduce using rule 114 (id -> ID llamarfuncion .)
    LCURLY          reduce using rule 114 (id -> ID llamarfuncion .)
    RBRACKET        reduce using rule 114 (id -> ID llamarfuncion .)


state 117

    (117) llamarfuncion -> LPAREN . llamarfuncion3 RPAREN
    (118) llamarfuncion3 -> . asign llamarfuncion33
    (119) llamarfuncion3 -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (125) empty -> .
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RPAREN          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    expresion9                     shift and go to state 33
    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    llamarfuncion3                 shift and go to state 178
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 179
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 180

state 118

    (60) bloque2 -> empty .
    (109) exponencial2 -> empty .

  ! reduce/reduce conflict for ID resolved using rule 60 (bloque2 -> empty .)
  ! reduce/reduce conflict for CTEI resolved using rule 60 (bloque2 -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 60 (bloque2 -> empty .)
    RCURLY          reduce using rule 60 (bloque2 -> empty .)
    IF              reduce using rule 60 (bloque2 -> empty .)
    PRINT           reduce using rule 60 (bloque2 -> empty .)
    FOR             reduce using rule 60 (bloque2 -> empty .)
    RETURN          reduce using rule 60 (bloque2 -> empty .)
    BUILD           reduce using rule 60 (bloque2 -> empty .)
    CONDITION       reduce using rule 60 (bloque2 -> empty .)
    ID              reduce using rule 60 (bloque2 -> empty .)
    TINT            reduce using rule 60 (bloque2 -> empty .)
    TBOOL           reduce using rule 60 (bloque2 -> empty .)
    TFLOAT          reduce using rule 60 (bloque2 -> empty .)
    LPAREN          reduce using rule 60 (bloque2 -> empty .)
    NOT             reduce using rule 60 (bloque2 -> empty .)
    MM              reduce using rule 60 (bloque2 -> empty .)
    PP              reduce using rule 60 (bloque2 -> empty .)
    NEW             reduce using rule 60 (bloque2 -> empty .)
    CTEI            reduce using rule 60 (bloque2 -> empty .)
    CTEF            reduce using rule 60 (bloque2 -> empty .)

  ! ID              [ reduce using rule 109 (exponencial2 -> empty .) ]
  ! CTEI            [ reduce using rule 109 (exponencial2 -> empty .) ]
  ! CTEF            [ reduce using rule 109 (exponencial2 -> empty .) ]


state 119

    (59) bloque2 -> statement bloque2 .

    IF              reduce using rule 59 (bloque2 -> statement bloque2 .)
    PRINT           reduce using rule 59 (bloque2 -> statement bloque2 .)
    FOR             reduce using rule 59 (bloque2 -> statement bloque2 .)
    RETURN          reduce using rule 59 (bloque2 -> statement bloque2 .)
    BUILD           reduce using rule 59 (bloque2 -> statement bloque2 .)
    CONDITION       reduce using rule 59 (bloque2 -> statement bloque2 .)
    ID              reduce using rule 59 (bloque2 -> statement bloque2 .)
    TINT            reduce using rule 59 (bloque2 -> statement bloque2 .)
    TBOOL           reduce using rule 59 (bloque2 -> statement bloque2 .)
    TFLOAT          reduce using rule 59 (bloque2 -> statement bloque2 .)
    LPAREN          reduce using rule 59 (bloque2 -> statement bloque2 .)
    NOT             reduce using rule 59 (bloque2 -> statement bloque2 .)
    MM              reduce using rule 59 (bloque2 -> statement bloque2 .)
    PP              reduce using rule 59 (bloque2 -> statement bloque2 .)
    NEW             reduce using rule 59 (bloque2 -> statement bloque2 .)
    RCURLY          reduce using rule 59 (bloque2 -> statement bloque2 .)
    CTEI            reduce using rule 59 (bloque2 -> statement bloque2 .)
    CTEF            reduce using rule 59 (bloque2 -> statement bloque2 .)


state 120

    (96) termino2 -> STAR . termino
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    exponencial2                   shift and go to state 40
    termino                        shift and go to state 181
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 121

    (95) termino -> factor termino2 .

    PLUS            reduce using rule 95 (termino -> factor termino2 .)
    MINUS           reduce using rule 95 (termino -> factor termino2 .)
    GREATERTHAN     reduce using rule 95 (termino -> factor termino2 .)
    LESSTHAN        reduce using rule 95 (termino -> factor termino2 .)
    GREATEREQUAL    reduce using rule 95 (termino -> factor termino2 .)
    LESSEQUAL       reduce using rule 95 (termino -> factor termino2 .)
    SHR             reduce using rule 95 (termino -> factor termino2 .)
    SHL             reduce using rule 95 (termino -> factor termino2 .)
    EQ              reduce using rule 95 (termino -> factor termino2 .)
    DIF             reduce using rule 95 (termino -> factor termino2 .)
    ANDB            reduce using rule 95 (termino -> factor termino2 .)
    XOR             reduce using rule 95 (termino -> factor termino2 .)
    ORB             reduce using rule 95 (termino -> factor termino2 .)
    AND             reduce using rule 95 (termino -> factor termino2 .)
    OR              reduce using rule 95 (termino -> factor termino2 .)
    COMMA           reduce using rule 95 (termino -> factor termino2 .)
    IF              reduce using rule 95 (termino -> factor termino2 .)
    PRINT           reduce using rule 95 (termino -> factor termino2 .)
    FOR             reduce using rule 95 (termino -> factor termino2 .)
    RETURN          reduce using rule 95 (termino -> factor termino2 .)
    BUILD           reduce using rule 95 (termino -> factor termino2 .)
    CONDITION       reduce using rule 95 (termino -> factor termino2 .)
    ID              reduce using rule 95 (termino -> factor termino2 .)
    TINT            reduce using rule 95 (termino -> factor termino2 .)
    TBOOL           reduce using rule 95 (termino -> factor termino2 .)
    TFLOAT          reduce using rule 95 (termino -> factor termino2 .)
    LPAREN          reduce using rule 95 (termino -> factor termino2 .)
    NOT             reduce using rule 95 (termino -> factor termino2 .)
    MM              reduce using rule 95 (termino -> factor termino2 .)
    PP              reduce using rule 95 (termino -> factor termino2 .)
    NEW             reduce using rule 95 (termino -> factor termino2 .)
    CTEI            reduce using rule 95 (termino -> factor termino2 .)
    CTEF            reduce using rule 95 (termino -> factor termino2 .)
    RCURLY          reduce using rule 95 (termino -> factor termino2 .)
    WHERE           reduce using rule 95 (termino -> factor termino2 .)
    SEMIC           reduce using rule 95 (termino -> factor termino2 .)
    RPAREN          reduce using rule 95 (termino -> factor termino2 .)
    LCURLY          reduce using rule 95 (termino -> factor termino2 .)
    RBRACKET        reduce using rule 95 (termino -> factor termino2 .)


state 122

    (97) termino2 -> SLASH . termino
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    exponencial2                   shift and go to state 40
    termino                        shift and go to state 182
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 123

    (99) termino2 -> empty .

    PLUS            reduce using rule 99 (termino2 -> empty .)
    MINUS           reduce using rule 99 (termino2 -> empty .)
    GREATERTHAN     reduce using rule 99 (termino2 -> empty .)
    LESSTHAN        reduce using rule 99 (termino2 -> empty .)
    GREATEREQUAL    reduce using rule 99 (termino2 -> empty .)
    LESSEQUAL       reduce using rule 99 (termino2 -> empty .)
    SHR             reduce using rule 99 (termino2 -> empty .)
    SHL             reduce using rule 99 (termino2 -> empty .)
    EQ              reduce using rule 99 (termino2 -> empty .)
    DIF             reduce using rule 99 (termino2 -> empty .)
    ANDB            reduce using rule 99 (termino2 -> empty .)
    XOR             reduce using rule 99 (termino2 -> empty .)
    ORB             reduce using rule 99 (termino2 -> empty .)
    AND             reduce using rule 99 (termino2 -> empty .)
    OR              reduce using rule 99 (termino2 -> empty .)
    COMMA           reduce using rule 99 (termino2 -> empty .)
    IF              reduce using rule 99 (termino2 -> empty .)
    PRINT           reduce using rule 99 (termino2 -> empty .)
    FOR             reduce using rule 99 (termino2 -> empty .)
    RETURN          reduce using rule 99 (termino2 -> empty .)
    BUILD           reduce using rule 99 (termino2 -> empty .)
    CONDITION       reduce using rule 99 (termino2 -> empty .)
    ID              reduce using rule 99 (termino2 -> empty .)
    TINT            reduce using rule 99 (termino2 -> empty .)
    TBOOL           reduce using rule 99 (termino2 -> empty .)
    TFLOAT          reduce using rule 99 (termino2 -> empty .)
    LPAREN          reduce using rule 99 (termino2 -> empty .)
    NOT             reduce using rule 99 (termino2 -> empty .)
    MM              reduce using rule 99 (termino2 -> empty .)
    PP              reduce using rule 99 (termino2 -> empty .)
    NEW             reduce using rule 99 (termino2 -> empty .)
    CTEI            reduce using rule 99 (termino2 -> empty .)
    CTEF            reduce using rule 99 (termino2 -> empty .)
    RCURLY          reduce using rule 99 (termino2 -> empty .)
    WHERE           reduce using rule 99 (termino2 -> empty .)
    SEMIC           reduce using rule 99 (termino2 -> empty .)
    RPAREN          reduce using rule 99 (termino2 -> empty .)
    LCURLY          reduce using rule 99 (termino2 -> empty .)
    RBRACKET        reduce using rule 99 (termino2 -> empty .)


state 124

    (98) termino2 -> MOD . termino
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    exponencial2                   shift and go to state 40
    termino                        shift and go to state 183
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 125

    (102) factor2 -> empty .

    STAR            reduce using rule 102 (factor2 -> empty .)
    SLASH           reduce using rule 102 (factor2 -> empty .)
    MOD             reduce using rule 102 (factor2 -> empty .)
    PLUS            reduce using rule 102 (factor2 -> empty .)
    MINUS           reduce using rule 102 (factor2 -> empty .)
    GREATERTHAN     reduce using rule 102 (factor2 -> empty .)
    LESSTHAN        reduce using rule 102 (factor2 -> empty .)
    GREATEREQUAL    reduce using rule 102 (factor2 -> empty .)
    LESSEQUAL       reduce using rule 102 (factor2 -> empty .)
    SHR             reduce using rule 102 (factor2 -> empty .)
    SHL             reduce using rule 102 (factor2 -> empty .)
    EQ              reduce using rule 102 (factor2 -> empty .)
    DIF             reduce using rule 102 (factor2 -> empty .)
    ANDB            reduce using rule 102 (factor2 -> empty .)
    XOR             reduce using rule 102 (factor2 -> empty .)
    ORB             reduce using rule 102 (factor2 -> empty .)
    AND             reduce using rule 102 (factor2 -> empty .)
    OR              reduce using rule 102 (factor2 -> empty .)
    COMMA           reduce using rule 102 (factor2 -> empty .)
    IF              reduce using rule 102 (factor2 -> empty .)
    PRINT           reduce using rule 102 (factor2 -> empty .)
    FOR             reduce using rule 102 (factor2 -> empty .)
    RETURN          reduce using rule 102 (factor2 -> empty .)
    BUILD           reduce using rule 102 (factor2 -> empty .)
    CONDITION       reduce using rule 102 (factor2 -> empty .)
    ID              reduce using rule 102 (factor2 -> empty .)
    TINT            reduce using rule 102 (factor2 -> empty .)
    TBOOL           reduce using rule 102 (factor2 -> empty .)
    TFLOAT          reduce using rule 102 (factor2 -> empty .)
    LPAREN          reduce using rule 102 (factor2 -> empty .)
    NOT             reduce using rule 102 (factor2 -> empty .)
    MM              reduce using rule 102 (factor2 -> empty .)
    PP              reduce using rule 102 (factor2 -> empty .)
    NEW             reduce using rule 102 (factor2 -> empty .)
    CTEI            reduce using rule 102 (factor2 -> empty .)
    CTEF            reduce using rule 102 (factor2 -> empty .)
    RCURLY          reduce using rule 102 (factor2 -> empty .)
    WHERE           reduce using rule 102 (factor2 -> empty .)
    SEMIC           reduce using rule 102 (factor2 -> empty .)
    RPAREN          reduce using rule 102 (factor2 -> empty .)
    LCURLY          reduce using rule 102 (factor2 -> empty .)
    RBRACKET        reduce using rule 102 (factor2 -> empty .)


state 126

    (101) factor2 -> EXP . factor
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    factor                         shift and go to state 184
    exponencial2                   shift and go to state 40
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 127

    (100) factor -> exponencial factor2 .

    STAR            reduce using rule 100 (factor -> exponencial factor2 .)
    SLASH           reduce using rule 100 (factor -> exponencial factor2 .)
    MOD             reduce using rule 100 (factor -> exponencial factor2 .)
    PLUS            reduce using rule 100 (factor -> exponencial factor2 .)
    MINUS           reduce using rule 100 (factor -> exponencial factor2 .)
    GREATERTHAN     reduce using rule 100 (factor -> exponencial factor2 .)
    LESSTHAN        reduce using rule 100 (factor -> exponencial factor2 .)
    GREATEREQUAL    reduce using rule 100 (factor -> exponencial factor2 .)
    LESSEQUAL       reduce using rule 100 (factor -> exponencial factor2 .)
    SHR             reduce using rule 100 (factor -> exponencial factor2 .)
    SHL             reduce using rule 100 (factor -> exponencial factor2 .)
    EQ              reduce using rule 100 (factor -> exponencial factor2 .)
    DIF             reduce using rule 100 (factor -> exponencial factor2 .)
    ANDB            reduce using rule 100 (factor -> exponencial factor2 .)
    XOR             reduce using rule 100 (factor -> exponencial factor2 .)
    ORB             reduce using rule 100 (factor -> exponencial factor2 .)
    AND             reduce using rule 100 (factor -> exponencial factor2 .)
    OR              reduce using rule 100 (factor -> exponencial factor2 .)
    COMMA           reduce using rule 100 (factor -> exponencial factor2 .)
    IF              reduce using rule 100 (factor -> exponencial factor2 .)
    PRINT           reduce using rule 100 (factor -> exponencial factor2 .)
    FOR             reduce using rule 100 (factor -> exponencial factor2 .)
    RETURN          reduce using rule 100 (factor -> exponencial factor2 .)
    BUILD           reduce using rule 100 (factor -> exponencial factor2 .)
    CONDITION       reduce using rule 100 (factor -> exponencial factor2 .)
    ID              reduce using rule 100 (factor -> exponencial factor2 .)
    TINT            reduce using rule 100 (factor -> exponencial factor2 .)
    TBOOL           reduce using rule 100 (factor -> exponencial factor2 .)
    TFLOAT          reduce using rule 100 (factor -> exponencial factor2 .)
    LPAREN          reduce using rule 100 (factor -> exponencial factor2 .)
    NOT             reduce using rule 100 (factor -> exponencial factor2 .)
    MM              reduce using rule 100 (factor -> exponencial factor2 .)
    PP              reduce using rule 100 (factor -> exponencial factor2 .)
    NEW             reduce using rule 100 (factor -> exponencial factor2 .)
    CTEI            reduce using rule 100 (factor -> exponencial factor2 .)
    CTEF            reduce using rule 100 (factor -> exponencial factor2 .)
    RCURLY          reduce using rule 100 (factor -> exponencial factor2 .)
    WHERE           reduce using rule 100 (factor -> exponencial factor2 .)
    SEMIC           reduce using rule 100 (factor -> exponencial factor2 .)
    RPAREN          reduce using rule 100 (factor -> exponencial factor2 .)
    LCURLY          reduce using rule 100 (factor -> exponencial factor2 .)
    RBRACKET        reduce using rule 100 (factor -> exponencial factor2 .)


state 128

    (1) program -> functions MODEL LCURLY vars data model bloque2 . RCURLY

    RCURLY          shift and go to state 185


state 129

    (66) expresion2i -> AND . expresion2
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 186
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55

state 130

    (65) expresion2 -> expresion3 expresion2i .

    OR              reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    SEMIC           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    COMMA           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    IF              reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    PRINT           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    FOR             reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    RETURN          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    BUILD           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    CONDITION       reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    ID              reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    TINT            reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    TBOOL           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    TFLOAT          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    LPAREN          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    NOT             reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    MM              reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    PP              reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    NEW             reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    CTEI            reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    CTEF            reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    RCURLY          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    WHERE           reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    RPAREN          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    LCURLY          reduce using rule 65 (expresion2 -> expresion3 expresion2i .)
    RBRACKET        reduce using rule 65 (expresion2 -> expresion3 expresion2i .)


state 131

    (67) expresion2i -> empty .

    OR              reduce using rule 67 (expresion2i -> empty .)
    COMMA           reduce using rule 67 (expresion2i -> empty .)
    IF              reduce using rule 67 (expresion2i -> empty .)
    PRINT           reduce using rule 67 (expresion2i -> empty .)
    FOR             reduce using rule 67 (expresion2i -> empty .)
    RETURN          reduce using rule 67 (expresion2i -> empty .)
    BUILD           reduce using rule 67 (expresion2i -> empty .)
    CONDITION       reduce using rule 67 (expresion2i -> empty .)
    ID              reduce using rule 67 (expresion2i -> empty .)
    TINT            reduce using rule 67 (expresion2i -> empty .)
    TBOOL           reduce using rule 67 (expresion2i -> empty .)
    TFLOAT          reduce using rule 67 (expresion2i -> empty .)
    LPAREN          reduce using rule 67 (expresion2i -> empty .)
    NOT             reduce using rule 67 (expresion2i -> empty .)
    MM              reduce using rule 67 (expresion2i -> empty .)
    PP              reduce using rule 67 (expresion2i -> empty .)
    NEW             reduce using rule 67 (expresion2i -> empty .)
    CTEI            reduce using rule 67 (expresion2i -> empty .)
    CTEF            reduce using rule 67 (expresion2i -> empty .)
    RCURLY          reduce using rule 67 (expresion2i -> empty .)
    WHERE           reduce using rule 67 (expresion2i -> empty .)
    SEMIC           reduce using rule 67 (expresion2i -> empty .)
    RPAREN          reduce using rule 67 (expresion2i -> empty .)
    LCURLY          reduce using rule 67 (expresion2i -> empty .)
    RBRACKET        reduce using rule 67 (expresion2i -> empty .)


state 132

    (62) expresion -> expresion2 expresioni .

    SEMIC           reduce using rule 62 (expresion -> expresion2 expresioni .)
    COMMA           reduce using rule 62 (expresion -> expresion2 expresioni .)
    ID              reduce using rule 62 (expresion -> expresion2 expresioni .)
    LPAREN          reduce using rule 62 (expresion -> expresion2 expresioni .)
    NOT             reduce using rule 62 (expresion -> expresion2 expresioni .)
    MM              reduce using rule 62 (expresion -> expresion2 expresioni .)
    PP              reduce using rule 62 (expresion -> expresion2 expresioni .)
    NEW             reduce using rule 62 (expresion -> expresion2 expresioni .)
    CTEI            reduce using rule 62 (expresion -> expresion2 expresioni .)
    CTEF            reduce using rule 62 (expresion -> expresion2 expresioni .)
    RCURLY          reduce using rule 62 (expresion -> expresion2 expresioni .)
    IF              reduce using rule 62 (expresion -> expresion2 expresioni .)
    PRINT           reduce using rule 62 (expresion -> expresion2 expresioni .)
    FOR             reduce using rule 62 (expresion -> expresion2 expresioni .)
    RETURN          reduce using rule 62 (expresion -> expresion2 expresioni .)
    BUILD           reduce using rule 62 (expresion -> expresion2 expresioni .)
    CONDITION       reduce using rule 62 (expresion -> expresion2 expresioni .)
    TINT            reduce using rule 62 (expresion -> expresion2 expresioni .)
    TBOOL           reduce using rule 62 (expresion -> expresion2 expresioni .)
    TFLOAT          reduce using rule 62 (expresion -> expresion2 expresioni .)
    RBRACKET        reduce using rule 62 (expresion -> expresion2 expresioni .)
    WHERE           reduce using rule 62 (expresion -> expresion2 expresioni .)
    LCURLY          reduce using rule 62 (expresion -> expresion2 expresioni .)
    RPAREN          reduce using rule 62 (expresion -> expresion2 expresioni .)


state 133

    (63) expresioni -> OR . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 187

state 134

    (64) expresioni -> empty .

    COMMA           reduce using rule 64 (expresioni -> empty .)
    IF              reduce using rule 64 (expresioni -> empty .)
    PRINT           reduce using rule 64 (expresioni -> empty .)
    FOR             reduce using rule 64 (expresioni -> empty .)
    RETURN          reduce using rule 64 (expresioni -> empty .)
    BUILD           reduce using rule 64 (expresioni -> empty .)
    CONDITION       reduce using rule 64 (expresioni -> empty .)
    ID              reduce using rule 64 (expresioni -> empty .)
    TINT            reduce using rule 64 (expresioni -> empty .)
    TBOOL           reduce using rule 64 (expresioni -> empty .)
    TFLOAT          reduce using rule 64 (expresioni -> empty .)
    LPAREN          reduce using rule 64 (expresioni -> empty .)
    NOT             reduce using rule 64 (expresioni -> empty .)
    MM              reduce using rule 64 (expresioni -> empty .)
    PP              reduce using rule 64 (expresioni -> empty .)
    NEW             reduce using rule 64 (expresioni -> empty .)
    CTEI            reduce using rule 64 (expresioni -> empty .)
    CTEF            reduce using rule 64 (expresioni -> empty .)
    RCURLY          reduce using rule 64 (expresioni -> empty .)
    WHERE           reduce using rule 64 (expresioni -> empty .)
    SEMIC           reduce using rule 64 (expresioni -> empty .)
    RPAREN          reduce using rule 64 (expresioni -> empty .)
    LCURLY          reduce using rule 64 (expresioni -> empty .)
    RBRACKET        reduce using rule 64 (expresioni -> empty .)


state 135

    (68) expresion3 -> expresion4 expresion3i .

    AND             reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    OR              reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    COMMA           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    SEMIC           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    LCURLY          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    IF              reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    PRINT           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    FOR             reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    RETURN          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    BUILD           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    CONDITION       reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    ID              reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    TINT            reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    TBOOL           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    TFLOAT          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    LPAREN          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    NOT             reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    MM              reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    PP              reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    NEW             reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    CTEI            reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    CTEF            reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    RCURLY          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    WHERE           reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    RPAREN          reduce using rule 68 (expresion3 -> expresion4 expresion3i .)
    RBRACKET        reduce using rule 68 (expresion3 -> expresion4 expresion3i .)


state 136

    (69) expresion3i -> ORB . expresion3
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    exponencial2                   shift and go to state 40
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 188
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    factor                         shift and go to state 45

state 137

    (70) expresion3i -> empty .

    AND             reduce using rule 70 (expresion3i -> empty .)
    OR              reduce using rule 70 (expresion3i -> empty .)
    COMMA           reduce using rule 70 (expresion3i -> empty .)
    IF              reduce using rule 70 (expresion3i -> empty .)
    PRINT           reduce using rule 70 (expresion3i -> empty .)
    FOR             reduce using rule 70 (expresion3i -> empty .)
    RETURN          reduce using rule 70 (expresion3i -> empty .)
    BUILD           reduce using rule 70 (expresion3i -> empty .)
    CONDITION       reduce using rule 70 (expresion3i -> empty .)
    ID              reduce using rule 70 (expresion3i -> empty .)
    TINT            reduce using rule 70 (expresion3i -> empty .)
    TBOOL           reduce using rule 70 (expresion3i -> empty .)
    TFLOAT          reduce using rule 70 (expresion3i -> empty .)
    LPAREN          reduce using rule 70 (expresion3i -> empty .)
    NOT             reduce using rule 70 (expresion3i -> empty .)
    MM              reduce using rule 70 (expresion3i -> empty .)
    PP              reduce using rule 70 (expresion3i -> empty .)
    NEW             reduce using rule 70 (expresion3i -> empty .)
    CTEI            reduce using rule 70 (expresion3i -> empty .)
    CTEF            reduce using rule 70 (expresion3i -> empty .)
    RCURLY          reduce using rule 70 (expresion3i -> empty .)
    WHERE           reduce using rule 70 (expresion3i -> empty .)
    SEMIC           reduce using rule 70 (expresion3i -> empty .)
    RPAREN          reduce using rule 70 (expresion3i -> empty .)
    LCURLY          reduce using rule 70 (expresion3i -> empty .)
    RBRACKET        reduce using rule 70 (expresion3i -> empty .)


state 138

    (42) ciclo -> FOR ID . IN DOT ID bloque

    IN              shift and go to state 189


state 139

    (74) expresion5 -> expresion6 expresion5i .

    XOR             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    ORB             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    AND             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    OR              reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    COMMA           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    WHERE           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    RPAREN          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    IF              reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    PRINT           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    FOR             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    RETURN          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    BUILD           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    CONDITION       reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    ID              reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    TINT            reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    TBOOL           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    TFLOAT          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    LPAREN          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    NOT             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    MM              reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    PP              reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    NEW             reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    CTEI            reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    CTEF            reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    RCURLY          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    SEMIC           reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    LCURLY          reduce using rule 74 (expresion5 -> expresion6 expresion5i .)
    RBRACKET        reduce using rule 74 (expresion5 -> expresion6 expresion5i .)


state 140

    (75) expresion5i -> ANDB . expresion5
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion5                     shift and go to state 190
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    empty                          shift and go to state 86
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46

state 141

    (76) expresion5i -> empty .

    XOR             reduce using rule 76 (expresion5i -> empty .)
    ORB             reduce using rule 76 (expresion5i -> empty .)
    AND             reduce using rule 76 (expresion5i -> empty .)
    OR              reduce using rule 76 (expresion5i -> empty .)
    COMMA           reduce using rule 76 (expresion5i -> empty .)
    IF              reduce using rule 76 (expresion5i -> empty .)
    PRINT           reduce using rule 76 (expresion5i -> empty .)
    FOR             reduce using rule 76 (expresion5i -> empty .)
    RETURN          reduce using rule 76 (expresion5i -> empty .)
    BUILD           reduce using rule 76 (expresion5i -> empty .)
    CONDITION       reduce using rule 76 (expresion5i -> empty .)
    ID              reduce using rule 76 (expresion5i -> empty .)
    TINT            reduce using rule 76 (expresion5i -> empty .)
    TBOOL           reduce using rule 76 (expresion5i -> empty .)
    TFLOAT          reduce using rule 76 (expresion5i -> empty .)
    LPAREN          reduce using rule 76 (expresion5i -> empty .)
    NOT             reduce using rule 76 (expresion5i -> empty .)
    MM              reduce using rule 76 (expresion5i -> empty .)
    PP              reduce using rule 76 (expresion5i -> empty .)
    NEW             reduce using rule 76 (expresion5i -> empty .)
    CTEI            reduce using rule 76 (expresion5i -> empty .)
    CTEF            reduce using rule 76 (expresion5i -> empty .)
    RCURLY          reduce using rule 76 (expresion5i -> empty .)
    WHERE           reduce using rule 76 (expresion5i -> empty .)
    SEMIC           reduce using rule 76 (expresion5i -> empty .)
    RPAREN          reduce using rule 76 (expresion5i -> empty .)
    LCURLY          reduce using rule 76 (expresion5i -> empty .)
    RBRACKET        reduce using rule 76 (expresion5i -> empty .)


state 142

    (82) expresion7i -> SHR . expresion7
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion7                     shift and go to state 191
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 143

    (81) expresion7 -> expresion8 expresion7i .

    EQ              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    DIF             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    ANDB            reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    XOR             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    ORB             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    AND             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    OR              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    COMMA           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    IF              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    PRINT           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    FOR             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    RETURN          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    BUILD           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    CONDITION       reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    ID              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    TINT            reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    TBOOL           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    TFLOAT          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    LPAREN          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    NOT             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    MM              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    PP              reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    NEW             reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    CTEI            reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    CTEF            reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    RCURLY          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    SEMIC           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    WHERE           reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    RPAREN          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    LCURLY          reduce using rule 81 (expresion7 -> expresion8 expresion7i .)
    RBRACKET        reduce using rule 81 (expresion7 -> expresion8 expresion7i .)


state 144

    (83) expresion7i -> SHL . expresion7
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion7                     shift and go to state 192
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 145

    (84) expresion7i -> empty .

    EQ              reduce using rule 84 (expresion7i -> empty .)
    DIF             reduce using rule 84 (expresion7i -> empty .)
    ANDB            reduce using rule 84 (expresion7i -> empty .)
    XOR             reduce using rule 84 (expresion7i -> empty .)
    ORB             reduce using rule 84 (expresion7i -> empty .)
    AND             reduce using rule 84 (expresion7i -> empty .)
    OR              reduce using rule 84 (expresion7i -> empty .)
    COMMA           reduce using rule 84 (expresion7i -> empty .)
    IF              reduce using rule 84 (expresion7i -> empty .)
    PRINT           reduce using rule 84 (expresion7i -> empty .)
    FOR             reduce using rule 84 (expresion7i -> empty .)
    RETURN          reduce using rule 84 (expresion7i -> empty .)
    BUILD           reduce using rule 84 (expresion7i -> empty .)
    CONDITION       reduce using rule 84 (expresion7i -> empty .)
    ID              reduce using rule 84 (expresion7i -> empty .)
    TINT            reduce using rule 84 (expresion7i -> empty .)
    TBOOL           reduce using rule 84 (expresion7i -> empty .)
    TFLOAT          reduce using rule 84 (expresion7i -> empty .)
    LPAREN          reduce using rule 84 (expresion7i -> empty .)
    NOT             reduce using rule 84 (expresion7i -> empty .)
    MM              reduce using rule 84 (expresion7i -> empty .)
    PP              reduce using rule 84 (expresion7i -> empty .)
    NEW             reduce using rule 84 (expresion7i -> empty .)
    CTEI            reduce using rule 84 (expresion7i -> empty .)
    CTEF            reduce using rule 84 (expresion7i -> empty .)
    RCURLY          reduce using rule 84 (expresion7i -> empty .)
    WHERE           reduce using rule 84 (expresion7i -> empty .)
    SEMIC           reduce using rule 84 (expresion7i -> empty .)
    RPAREN          reduce using rule 84 (expresion7i -> empty .)
    LCURLY          reduce using rule 84 (expresion7i -> empty .)
    RBRACKET        reduce using rule 84 (expresion7i -> empty .)


state 146

    (77) expresion6 -> expresion7 expresion6i .

    ANDB            reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    XOR             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    ORB             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    AND             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    OR              reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    COMMA           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    IF              reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    PRINT           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    FOR             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    RETURN          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    BUILD           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    CONDITION       reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    ID              reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    TINT            reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    TBOOL           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    TFLOAT          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    LPAREN          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    NOT             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    MM              reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    PP              reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    NEW             reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    CTEI            reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    CTEF            reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    RCURLY          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    RBRACKET        reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    SEMIC           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    WHERE           reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    LCURLY          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)
    RPAREN          reduce using rule 77 (expresion6 -> expresion7 expresion6i .)


state 147

    (79) expresion6i -> DIF . expresion6
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion6                     shift and go to state 193
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    expresion7                     shift and go to state 57
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 148

    (78) expresion6i -> EQ . expresion6
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    expresion6                     shift and go to state 194
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    exponencial2                   shift and go to state 40
    expresion7                     shift and go to state 57
    termino                        shift and go to state 34
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86

state 149

    (80) expresion6i -> empty .

    ANDB            reduce using rule 80 (expresion6i -> empty .)
    XOR             reduce using rule 80 (expresion6i -> empty .)
    ORB             reduce using rule 80 (expresion6i -> empty .)
    AND             reduce using rule 80 (expresion6i -> empty .)
    OR              reduce using rule 80 (expresion6i -> empty .)
    COMMA           reduce using rule 80 (expresion6i -> empty .)
    IF              reduce using rule 80 (expresion6i -> empty .)
    PRINT           reduce using rule 80 (expresion6i -> empty .)
    FOR             reduce using rule 80 (expresion6i -> empty .)
    RETURN          reduce using rule 80 (expresion6i -> empty .)
    BUILD           reduce using rule 80 (expresion6i -> empty .)
    CONDITION       reduce using rule 80 (expresion6i -> empty .)
    ID              reduce using rule 80 (expresion6i -> empty .)
    TINT            reduce using rule 80 (expresion6i -> empty .)
    TBOOL           reduce using rule 80 (expresion6i -> empty .)
    TFLOAT          reduce using rule 80 (expresion6i -> empty .)
    LPAREN          reduce using rule 80 (expresion6i -> empty .)
    NOT             reduce using rule 80 (expresion6i -> empty .)
    MM              reduce using rule 80 (expresion6i -> empty .)
    PP              reduce using rule 80 (expresion6i -> empty .)
    NEW             reduce using rule 80 (expresion6i -> empty .)
    CTEI            reduce using rule 80 (expresion6i -> empty .)
    CTEF            reduce using rule 80 (expresion6i -> empty .)
    RCURLY          reduce using rule 80 (expresion6i -> empty .)
    WHERE           reduce using rule 80 (expresion6i -> empty .)
    SEMIC           reduce using rule 80 (expresion6i -> empty .)
    RPAREN          reduce using rule 80 (expresion6i -> empty .)
    LCURLY          reduce using rule 80 (expresion6i -> empty .)
    RBRACKET        reduce using rule 80 (expresion6i -> empty .)


state 150

    (13) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 195


state 151

    (103) exponencial -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 196


state 152

    (8) model -> optimize where .

    IF              reduce using rule 8 (model -> optimize where .)
    PRINT           reduce using rule 8 (model -> optimize where .)
    FOR             reduce using rule 8 (model -> optimize where .)
    RETURN          reduce using rule 8 (model -> optimize where .)
    BUILD           reduce using rule 8 (model -> optimize where .)
    CONDITION       reduce using rule 8 (model -> optimize where .)
    ID              reduce using rule 8 (model -> optimize where .)
    TINT            reduce using rule 8 (model -> optimize where .)
    TBOOL           reduce using rule 8 (model -> optimize where .)
    TFLOAT          reduce using rule 8 (model -> optimize where .)
    LPAREN          reduce using rule 8 (model -> optimize where .)
    NOT             reduce using rule 8 (model -> optimize where .)
    MM              reduce using rule 8 (model -> optimize where .)
    PP              reduce using rule 8 (model -> optimize where .)
    NEW             reduce using rule 8 (model -> optimize where .)
    RCURLY          reduce using rule 8 (model -> optimize where .)
    CTEI            reduce using rule 8 (model -> optimize where .)
    CTEF            reduce using rule 8 (model -> optimize where .)


state 153

    (14) where -> WHERE . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 197


state 154

    (36) condition -> IF asign . bloque condition1
    (58) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 158

    bloque                         shift and go to state 198

state 155

    (29) expresiones -> expresion COMMA . expresiones
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    ID              reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

    termino                        shift and go to state 34
    expresiones                    shift and go to state 199
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion9                     shift and go to state 33
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64

state 156

    (12) optimize -> MAX LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    expresiones                    shift and go to state 56
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 200
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 60
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 157

    (15) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 201


state 158

    (58) bloque -> LCURLY . bloque2 RCURLY
    (59) bloque2 -> . statement bloque2
    (60) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (125) empty -> .
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    expresiones                    shift and go to state 56
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 44
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 118
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 60
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    bloque2                        shift and go to state 202
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 159

    (43) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .

    FUNC            reduce using rule 43 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)
    MODEL           reduce using rule 43 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)


state 160

    (48) funcion3 -> LPAREN type . RPAREN

    RPAREN          shift and go to state 203


state 161

    (46) funcion2 -> COMMA type . ID funcion2

    ID              shift and go to state 204


state 162

    (52) declaration -> typedeclaration POINTS ID . dec22 SEMIC
    (56) dec22 -> . COMMA ID dec22
    (57) dec22 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 205
    SEMIC           reduce using rule 125 (empty -> .)

    dec22                          shift and go to state 206
    empty                          shift and go to state 207

state 163

    (54) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 208


state 164

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TINT            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TBOOL           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TFLOAT          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    LPAREN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    NOT             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MM              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PP              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    NEW             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEI            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CTEF            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 165

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 166

    (11) optimize -> MIN LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 153

    where                          shift and go to state 209

state 167

    (88) expresion8i -> GREATEREQUAL expresion8 .

    SHR             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    SHL             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    EQ              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    DIF             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    ANDB            reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    XOR             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    ORB             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    AND             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    OR              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    COMMA           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    IF              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    PRINT           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    FOR             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    RETURN          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    BUILD           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    CONDITION       reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    ID              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    TINT            reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    TBOOL           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    TFLOAT          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    LPAREN          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    NOT             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    MM              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    PP              reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    NEW             reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    CTEI            reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    CTEF            reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    RCURLY          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    WHERE           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    SEMIC           reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    RPAREN          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    LCURLY          reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)
    RBRACKET        reduce using rule 88 (expresion8i -> GREATEREQUAL expresion8 .)


state 168

    (87) expresion8i -> LESSTHAN expresion8 .

    SHR             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    SHL             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    EQ              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    DIF             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    ANDB            reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    XOR             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    ORB             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    AND             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    OR              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    COMMA           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    IF              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    PRINT           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    FOR             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    RETURN          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    BUILD           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    CONDITION       reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    ID              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    TINT            reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    TBOOL           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    TFLOAT          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    LPAREN          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    NOT             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    MM              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    PP              reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    NEW             reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    CTEI            reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    CTEF            reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    RCURLY          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    WHERE           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    SEMIC           reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    RPAREN          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    LCURLY          reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)
    RBRACKET        reduce using rule 87 (expresion8i -> LESSTHAN expresion8 .)


state 169

    (86) expresion8i -> GREATERTHAN expresion8 .

    SHR             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    SHL             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    EQ              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    DIF             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    ANDB            reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    XOR             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    ORB             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    AND             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    OR              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    COMMA           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    IF              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    PRINT           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    FOR             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    RETURN          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    BUILD           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    CONDITION       reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    ID              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    TINT            reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    TBOOL           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    TFLOAT          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    LPAREN          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    NOT             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    MM              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    PP              reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    NEW             reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    CTEI            reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    CTEF            reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    RCURLY          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    WHERE           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    SEMIC           reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    RPAREN          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    LCURLY          reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)
    RBRACKET        reduce using rule 86 (expresion8i -> GREATERTHAN expresion8 .)


state 170

    (89) expresion8i -> LESSEQUAL expresion8 .

    SHR             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    SHL             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    EQ              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    DIF             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    ANDB            reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    XOR             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    ORB             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    AND             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    OR              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    COMMA           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    IF              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    PRINT           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    FOR             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    RETURN          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    BUILD           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    CONDITION       reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    ID              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    TINT            reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    TBOOL           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    TFLOAT          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    LPAREN          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    NOT             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    MM              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    PP              reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    NEW             reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    CTEI            reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    CTEF            reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    RCURLY          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    WHERE           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    SEMIC           reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    RPAREN          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    LCURLY          reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)
    RBRACKET        reduce using rule 89 (expresion8i -> LESSEQUAL expresion8 .)


state 171

    (92) expresion9i -> PLUS expresion9 .

    GREATERTHAN     reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    LESSTHAN        reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    GREATEREQUAL    reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    LESSEQUAL       reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    SHR             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    SHL             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    EQ              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    DIF             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    ANDB            reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    XOR             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    ORB             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    AND             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    OR              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    COMMA           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    IF              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    PRINT           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    FOR             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    RETURN          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    BUILD           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    CONDITION       reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    ID              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    TINT            reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    TBOOL           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    TFLOAT          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    LPAREN          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    NOT             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    MM              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    PP              reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    NEW             reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    CTEI            reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    CTEF            reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    RCURLY          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    WHERE           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    SEMIC           reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    RPAREN          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    LCURLY          reduce using rule 92 (expresion9i -> PLUS expresion9 .)
    RBRACKET        reduce using rule 92 (expresion9i -> PLUS expresion9 .)


state 172

    (93) expresion9i -> MINUS expresion9 .

    GREATERTHAN     reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    LESSTHAN        reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    GREATEREQUAL    reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    LESSEQUAL       reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    SHR             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    SHL             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    EQ              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    DIF             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    ANDB            reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    XOR             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    ORB             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    AND             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    OR              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    COMMA           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    IF              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    PRINT           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    FOR             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    RETURN          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    BUILD           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    CONDITION       reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    ID              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    TINT            reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    TBOOL           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    TFLOAT          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    LPAREN          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    NOT             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    MM              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    PP              reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    NEW             reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    CTEI            reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    CTEF            reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    RCURLY          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    WHERE           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    SEMIC           reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    RPAREN          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    LCURLY          reduce using rule 93 (expresion9i -> MINUS expresion9 .)
    RBRACKET        reduce using rule 93 (expresion9i -> MINUS expresion9 .)


state 173

    (39) write -> PRINT asign write2 . SEMIC

    SEMIC           shift and go to state 210


state 174

    (40) write2 -> COMMA . asign write2
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    expresion9                     shift and go to state 33
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 211

state 175

    (41) write2 -> empty .

    SEMIC           reduce using rule 41 (write2 -> empty .)


state 176

    (72) expresion4i -> XOR expresion4 .

    ORB             reduce using rule 72 (expresion4i -> XOR expresion4 .)
    AND             reduce using rule 72 (expresion4i -> XOR expresion4 .)
    OR              reduce using rule 72 (expresion4i -> XOR expresion4 .)
    COMMA           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    IF              reduce using rule 72 (expresion4i -> XOR expresion4 .)
    PRINT           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    FOR             reduce using rule 72 (expresion4i -> XOR expresion4 .)
    RETURN          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    BUILD           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    CONDITION       reduce using rule 72 (expresion4i -> XOR expresion4 .)
    ID              reduce using rule 72 (expresion4i -> XOR expresion4 .)
    TINT            reduce using rule 72 (expresion4i -> XOR expresion4 .)
    TBOOL           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    TFLOAT          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    LPAREN          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    NOT             reduce using rule 72 (expresion4i -> XOR expresion4 .)
    MM              reduce using rule 72 (expresion4i -> XOR expresion4 .)
    PP              reduce using rule 72 (expresion4i -> XOR expresion4 .)
    NEW             reduce using rule 72 (expresion4i -> XOR expresion4 .)
    CTEI            reduce using rule 72 (expresion4i -> XOR expresion4 .)
    CTEF            reduce using rule 72 (expresion4i -> XOR expresion4 .)
    RCURLY          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    WHERE           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    SEMIC           reduce using rule 72 (expresion4i -> XOR expresion4 .)
    RPAREN          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    LCURLY          reduce using rule 72 (expresion4i -> XOR expresion4 .)
    RBRACKET        reduce using rule 72 (expresion4i -> XOR expresion4 .)


state 177

    (27) asign -> id asign_signo expresiones . SEMIC

    SEMIC           shift and go to state 212


state 178

    (117) llamarfuncion -> LPAREN llamarfuncion3 . RPAREN

    RPAREN          shift and go to state 213


state 179

    (119) llamarfuncion3 -> empty .
    (109) exponencial2 -> empty .

    RPAREN          reduce using rule 119 (llamarfuncion3 -> empty .)
    ID              reduce using rule 109 (exponencial2 -> empty .)
    CTEI            reduce using rule 109 (exponencial2 -> empty .)
    CTEF            reduce using rule 109 (exponencial2 -> empty .)


state 180

    (118) llamarfuncion3 -> asign . llamarfuncion33
    (120) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (121) llamarfuncion33 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 215
    RPAREN          reduce using rule 125 (empty -> .)

    llamarfuncion33                shift and go to state 214
    empty                          shift and go to state 216

state 181

    (96) termino2 -> STAR termino .

    PLUS            reduce using rule 96 (termino2 -> STAR termino .)
    MINUS           reduce using rule 96 (termino2 -> STAR termino .)
    GREATERTHAN     reduce using rule 96 (termino2 -> STAR termino .)
    LESSTHAN        reduce using rule 96 (termino2 -> STAR termino .)
    GREATEREQUAL    reduce using rule 96 (termino2 -> STAR termino .)
    LESSEQUAL       reduce using rule 96 (termino2 -> STAR termino .)
    SHR             reduce using rule 96 (termino2 -> STAR termino .)
    SHL             reduce using rule 96 (termino2 -> STAR termino .)
    EQ              reduce using rule 96 (termino2 -> STAR termino .)
    DIF             reduce using rule 96 (termino2 -> STAR termino .)
    ANDB            reduce using rule 96 (termino2 -> STAR termino .)
    XOR             reduce using rule 96 (termino2 -> STAR termino .)
    ORB             reduce using rule 96 (termino2 -> STAR termino .)
    AND             reduce using rule 96 (termino2 -> STAR termino .)
    OR              reduce using rule 96 (termino2 -> STAR termino .)
    COMMA           reduce using rule 96 (termino2 -> STAR termino .)
    IF              reduce using rule 96 (termino2 -> STAR termino .)
    PRINT           reduce using rule 96 (termino2 -> STAR termino .)
    FOR             reduce using rule 96 (termino2 -> STAR termino .)
    RETURN          reduce using rule 96 (termino2 -> STAR termino .)
    BUILD           reduce using rule 96 (termino2 -> STAR termino .)
    CONDITION       reduce using rule 96 (termino2 -> STAR termino .)
    ID              reduce using rule 96 (termino2 -> STAR termino .)
    TINT            reduce using rule 96 (termino2 -> STAR termino .)
    TBOOL           reduce using rule 96 (termino2 -> STAR termino .)
    TFLOAT          reduce using rule 96 (termino2 -> STAR termino .)
    LPAREN          reduce using rule 96 (termino2 -> STAR termino .)
    NOT             reduce using rule 96 (termino2 -> STAR termino .)
    MM              reduce using rule 96 (termino2 -> STAR termino .)
    PP              reduce using rule 96 (termino2 -> STAR termino .)
    NEW             reduce using rule 96 (termino2 -> STAR termino .)
    CTEI            reduce using rule 96 (termino2 -> STAR termino .)
    CTEF            reduce using rule 96 (termino2 -> STAR termino .)
    RCURLY          reduce using rule 96 (termino2 -> STAR termino .)
    WHERE           reduce using rule 96 (termino2 -> STAR termino .)
    SEMIC           reduce using rule 96 (termino2 -> STAR termino .)
    RPAREN          reduce using rule 96 (termino2 -> STAR termino .)
    LCURLY          reduce using rule 96 (termino2 -> STAR termino .)
    RBRACKET        reduce using rule 96 (termino2 -> STAR termino .)


state 182

    (97) termino2 -> SLASH termino .

    PLUS            reduce using rule 97 (termino2 -> SLASH termino .)
    MINUS           reduce using rule 97 (termino2 -> SLASH termino .)
    GREATERTHAN     reduce using rule 97 (termino2 -> SLASH termino .)
    LESSTHAN        reduce using rule 97 (termino2 -> SLASH termino .)
    GREATEREQUAL    reduce using rule 97 (termino2 -> SLASH termino .)
    LESSEQUAL       reduce using rule 97 (termino2 -> SLASH termino .)
    SHR             reduce using rule 97 (termino2 -> SLASH termino .)
    SHL             reduce using rule 97 (termino2 -> SLASH termino .)
    EQ              reduce using rule 97 (termino2 -> SLASH termino .)
    DIF             reduce using rule 97 (termino2 -> SLASH termino .)
    ANDB            reduce using rule 97 (termino2 -> SLASH termino .)
    XOR             reduce using rule 97 (termino2 -> SLASH termino .)
    ORB             reduce using rule 97 (termino2 -> SLASH termino .)
    AND             reduce using rule 97 (termino2 -> SLASH termino .)
    OR              reduce using rule 97 (termino2 -> SLASH termino .)
    COMMA           reduce using rule 97 (termino2 -> SLASH termino .)
    IF              reduce using rule 97 (termino2 -> SLASH termino .)
    PRINT           reduce using rule 97 (termino2 -> SLASH termino .)
    FOR             reduce using rule 97 (termino2 -> SLASH termino .)
    RETURN          reduce using rule 97 (termino2 -> SLASH termino .)
    BUILD           reduce using rule 97 (termino2 -> SLASH termino .)
    CONDITION       reduce using rule 97 (termino2 -> SLASH termino .)
    ID              reduce using rule 97 (termino2 -> SLASH termino .)
    TINT            reduce using rule 97 (termino2 -> SLASH termino .)
    TBOOL           reduce using rule 97 (termino2 -> SLASH termino .)
    TFLOAT          reduce using rule 97 (termino2 -> SLASH termino .)
    LPAREN          reduce using rule 97 (termino2 -> SLASH termino .)
    NOT             reduce using rule 97 (termino2 -> SLASH termino .)
    MM              reduce using rule 97 (termino2 -> SLASH termino .)
    PP              reduce using rule 97 (termino2 -> SLASH termino .)
    NEW             reduce using rule 97 (termino2 -> SLASH termino .)
    CTEI            reduce using rule 97 (termino2 -> SLASH termino .)
    CTEF            reduce using rule 97 (termino2 -> SLASH termino .)
    RCURLY          reduce using rule 97 (termino2 -> SLASH termino .)
    WHERE           reduce using rule 97 (termino2 -> SLASH termino .)
    SEMIC           reduce using rule 97 (termino2 -> SLASH termino .)
    RPAREN          reduce using rule 97 (termino2 -> SLASH termino .)
    LCURLY          reduce using rule 97 (termino2 -> SLASH termino .)
    RBRACKET        reduce using rule 97 (termino2 -> SLASH termino .)


state 183

    (98) termino2 -> MOD termino .

    PLUS            reduce using rule 98 (termino2 -> MOD termino .)
    MINUS           reduce using rule 98 (termino2 -> MOD termino .)
    GREATERTHAN     reduce using rule 98 (termino2 -> MOD termino .)
    LESSTHAN        reduce using rule 98 (termino2 -> MOD termino .)
    GREATEREQUAL    reduce using rule 98 (termino2 -> MOD termino .)
    LESSEQUAL       reduce using rule 98 (termino2 -> MOD termino .)
    SHR             reduce using rule 98 (termino2 -> MOD termino .)
    SHL             reduce using rule 98 (termino2 -> MOD termino .)
    EQ              reduce using rule 98 (termino2 -> MOD termino .)
    DIF             reduce using rule 98 (termino2 -> MOD termino .)
    ANDB            reduce using rule 98 (termino2 -> MOD termino .)
    XOR             reduce using rule 98 (termino2 -> MOD termino .)
    ORB             reduce using rule 98 (termino2 -> MOD termino .)
    AND             reduce using rule 98 (termino2 -> MOD termino .)
    OR              reduce using rule 98 (termino2 -> MOD termino .)
    COMMA           reduce using rule 98 (termino2 -> MOD termino .)
    IF              reduce using rule 98 (termino2 -> MOD termino .)
    PRINT           reduce using rule 98 (termino2 -> MOD termino .)
    FOR             reduce using rule 98 (termino2 -> MOD termino .)
    RETURN          reduce using rule 98 (termino2 -> MOD termino .)
    BUILD           reduce using rule 98 (termino2 -> MOD termino .)
    CONDITION       reduce using rule 98 (termino2 -> MOD termino .)
    ID              reduce using rule 98 (termino2 -> MOD termino .)
    TINT            reduce using rule 98 (termino2 -> MOD termino .)
    TBOOL           reduce using rule 98 (termino2 -> MOD termino .)
    TFLOAT          reduce using rule 98 (termino2 -> MOD termino .)
    LPAREN          reduce using rule 98 (termino2 -> MOD termino .)
    NOT             reduce using rule 98 (termino2 -> MOD termino .)
    MM              reduce using rule 98 (termino2 -> MOD termino .)
    PP              reduce using rule 98 (termino2 -> MOD termino .)
    NEW             reduce using rule 98 (termino2 -> MOD termino .)
    CTEI            reduce using rule 98 (termino2 -> MOD termino .)
    CTEF            reduce using rule 98 (termino2 -> MOD termino .)
    RCURLY          reduce using rule 98 (termino2 -> MOD termino .)
    WHERE           reduce using rule 98 (termino2 -> MOD termino .)
    SEMIC           reduce using rule 98 (termino2 -> MOD termino .)
    RPAREN          reduce using rule 98 (termino2 -> MOD termino .)
    LCURLY          reduce using rule 98 (termino2 -> MOD termino .)
    RBRACKET        reduce using rule 98 (termino2 -> MOD termino .)


state 184

    (101) factor2 -> EXP factor .

    STAR            reduce using rule 101 (factor2 -> EXP factor .)
    SLASH           reduce using rule 101 (factor2 -> EXP factor .)
    MOD             reduce using rule 101 (factor2 -> EXP factor .)
    PLUS            reduce using rule 101 (factor2 -> EXP factor .)
    MINUS           reduce using rule 101 (factor2 -> EXP factor .)
    GREATERTHAN     reduce using rule 101 (factor2 -> EXP factor .)
    LESSTHAN        reduce using rule 101 (factor2 -> EXP factor .)
    GREATEREQUAL    reduce using rule 101 (factor2 -> EXP factor .)
    LESSEQUAL       reduce using rule 101 (factor2 -> EXP factor .)
    SHR             reduce using rule 101 (factor2 -> EXP factor .)
    SHL             reduce using rule 101 (factor2 -> EXP factor .)
    EQ              reduce using rule 101 (factor2 -> EXP factor .)
    DIF             reduce using rule 101 (factor2 -> EXP factor .)
    ANDB            reduce using rule 101 (factor2 -> EXP factor .)
    XOR             reduce using rule 101 (factor2 -> EXP factor .)
    ORB             reduce using rule 101 (factor2 -> EXP factor .)
    AND             reduce using rule 101 (factor2 -> EXP factor .)
    OR              reduce using rule 101 (factor2 -> EXP factor .)
    COMMA           reduce using rule 101 (factor2 -> EXP factor .)
    IF              reduce using rule 101 (factor2 -> EXP factor .)
    PRINT           reduce using rule 101 (factor2 -> EXP factor .)
    FOR             reduce using rule 101 (factor2 -> EXP factor .)
    RETURN          reduce using rule 101 (factor2 -> EXP factor .)
    BUILD           reduce using rule 101 (factor2 -> EXP factor .)
    CONDITION       reduce using rule 101 (factor2 -> EXP factor .)
    ID              reduce using rule 101 (factor2 -> EXP factor .)
    TINT            reduce using rule 101 (factor2 -> EXP factor .)
    TBOOL           reduce using rule 101 (factor2 -> EXP factor .)
    TFLOAT          reduce using rule 101 (factor2 -> EXP factor .)
    LPAREN          reduce using rule 101 (factor2 -> EXP factor .)
    NOT             reduce using rule 101 (factor2 -> EXP factor .)
    MM              reduce using rule 101 (factor2 -> EXP factor .)
    PP              reduce using rule 101 (factor2 -> EXP factor .)
    NEW             reduce using rule 101 (factor2 -> EXP factor .)
    CTEI            reduce using rule 101 (factor2 -> EXP factor .)
    CTEF            reduce using rule 101 (factor2 -> EXP factor .)
    RCURLY          reduce using rule 101 (factor2 -> EXP factor .)
    WHERE           reduce using rule 101 (factor2 -> EXP factor .)
    SEMIC           reduce using rule 101 (factor2 -> EXP factor .)
    RPAREN          reduce using rule 101 (factor2 -> EXP factor .)
    LCURLY          reduce using rule 101 (factor2 -> EXP factor .)
    RBRACKET        reduce using rule 101 (factor2 -> EXP factor .)


state 185

    (1) program -> functions MODEL LCURLY vars data model bloque2 RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model bloque2 RCURLY .)


state 186

    (66) expresion2i -> AND expresion2 .

    OR              reduce using rule 66 (expresion2i -> AND expresion2 .)
    COMMA           reduce using rule 66 (expresion2i -> AND expresion2 .)
    IF              reduce using rule 66 (expresion2i -> AND expresion2 .)
    PRINT           reduce using rule 66 (expresion2i -> AND expresion2 .)
    FOR             reduce using rule 66 (expresion2i -> AND expresion2 .)
    RETURN          reduce using rule 66 (expresion2i -> AND expresion2 .)
    BUILD           reduce using rule 66 (expresion2i -> AND expresion2 .)
    CONDITION       reduce using rule 66 (expresion2i -> AND expresion2 .)
    ID              reduce using rule 66 (expresion2i -> AND expresion2 .)
    TINT            reduce using rule 66 (expresion2i -> AND expresion2 .)
    TBOOL           reduce using rule 66 (expresion2i -> AND expresion2 .)
    TFLOAT          reduce using rule 66 (expresion2i -> AND expresion2 .)
    LPAREN          reduce using rule 66 (expresion2i -> AND expresion2 .)
    NOT             reduce using rule 66 (expresion2i -> AND expresion2 .)
    MM              reduce using rule 66 (expresion2i -> AND expresion2 .)
    PP              reduce using rule 66 (expresion2i -> AND expresion2 .)
    NEW             reduce using rule 66 (expresion2i -> AND expresion2 .)
    CTEI            reduce using rule 66 (expresion2i -> AND expresion2 .)
    CTEF            reduce using rule 66 (expresion2i -> AND expresion2 .)
    RCURLY          reduce using rule 66 (expresion2i -> AND expresion2 .)
    WHERE           reduce using rule 66 (expresion2i -> AND expresion2 .)
    SEMIC           reduce using rule 66 (expresion2i -> AND expresion2 .)
    RPAREN          reduce using rule 66 (expresion2i -> AND expresion2 .)
    LCURLY          reduce using rule 66 (expresion2i -> AND expresion2 .)
    RBRACKET        reduce using rule 66 (expresion2i -> AND expresion2 .)


state 187

    (63) expresioni -> OR expresion .

    COMMA           reduce using rule 63 (expresioni -> OR expresion .)
    IF              reduce using rule 63 (expresioni -> OR expresion .)
    PRINT           reduce using rule 63 (expresioni -> OR expresion .)
    FOR             reduce using rule 63 (expresioni -> OR expresion .)
    RETURN          reduce using rule 63 (expresioni -> OR expresion .)
    BUILD           reduce using rule 63 (expresioni -> OR expresion .)
    CONDITION       reduce using rule 63 (expresioni -> OR expresion .)
    ID              reduce using rule 63 (expresioni -> OR expresion .)
    TINT            reduce using rule 63 (expresioni -> OR expresion .)
    TBOOL           reduce using rule 63 (expresioni -> OR expresion .)
    TFLOAT          reduce using rule 63 (expresioni -> OR expresion .)
    LPAREN          reduce using rule 63 (expresioni -> OR expresion .)
    NOT             reduce using rule 63 (expresioni -> OR expresion .)
    MM              reduce using rule 63 (expresioni -> OR expresion .)
    PP              reduce using rule 63 (expresioni -> OR expresion .)
    NEW             reduce using rule 63 (expresioni -> OR expresion .)
    CTEI            reduce using rule 63 (expresioni -> OR expresion .)
    CTEF            reduce using rule 63 (expresioni -> OR expresion .)
    RCURLY          reduce using rule 63 (expresioni -> OR expresion .)
    WHERE           reduce using rule 63 (expresioni -> OR expresion .)
    SEMIC           reduce using rule 63 (expresioni -> OR expresion .)
    RPAREN          reduce using rule 63 (expresioni -> OR expresion .)
    LCURLY          reduce using rule 63 (expresioni -> OR expresion .)
    RBRACKET        reduce using rule 63 (expresioni -> OR expresion .)


state 188

    (69) expresion3i -> ORB expresion3 .

    AND             reduce using rule 69 (expresion3i -> ORB expresion3 .)
    OR              reduce using rule 69 (expresion3i -> ORB expresion3 .)
    COMMA           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    IF              reduce using rule 69 (expresion3i -> ORB expresion3 .)
    PRINT           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    FOR             reduce using rule 69 (expresion3i -> ORB expresion3 .)
    RETURN          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    BUILD           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    CONDITION       reduce using rule 69 (expresion3i -> ORB expresion3 .)
    ID              reduce using rule 69 (expresion3i -> ORB expresion3 .)
    TINT            reduce using rule 69 (expresion3i -> ORB expresion3 .)
    TBOOL           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    TFLOAT          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    LPAREN          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    NOT             reduce using rule 69 (expresion3i -> ORB expresion3 .)
    MM              reduce using rule 69 (expresion3i -> ORB expresion3 .)
    PP              reduce using rule 69 (expresion3i -> ORB expresion3 .)
    NEW             reduce using rule 69 (expresion3i -> ORB expresion3 .)
    CTEI            reduce using rule 69 (expresion3i -> ORB expresion3 .)
    CTEF            reduce using rule 69 (expresion3i -> ORB expresion3 .)
    RCURLY          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    WHERE           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    SEMIC           reduce using rule 69 (expresion3i -> ORB expresion3 .)
    RPAREN          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    LCURLY          reduce using rule 69 (expresion3i -> ORB expresion3 .)
    RBRACKET        reduce using rule 69 (expresion3i -> ORB expresion3 .)


state 189

    (42) ciclo -> FOR ID IN . DOT ID bloque

    DOT             shift and go to state 217


state 190

    (75) expresion5i -> ANDB expresion5 .

    XOR             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    ORB             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    AND             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    OR              reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    COMMA           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    IF              reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    PRINT           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    FOR             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    RETURN          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    BUILD           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    CONDITION       reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    ID              reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    TINT            reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    TBOOL           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    TFLOAT          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    LPAREN          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    NOT             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    MM              reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    PP              reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    NEW             reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    CTEI            reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    CTEF            reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    RCURLY          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    WHERE           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    SEMIC           reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    RPAREN          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    LCURLY          reduce using rule 75 (expresion5i -> ANDB expresion5 .)
    RBRACKET        reduce using rule 75 (expresion5i -> ANDB expresion5 .)


state 191

    (82) expresion7i -> SHR expresion7 .

    EQ              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    DIF             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    ANDB            reduce using rule 82 (expresion7i -> SHR expresion7 .)
    XOR             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    ORB             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    AND             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    OR              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    COMMA           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    IF              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    PRINT           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    FOR             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    RETURN          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    BUILD           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    CONDITION       reduce using rule 82 (expresion7i -> SHR expresion7 .)
    ID              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    TINT            reduce using rule 82 (expresion7i -> SHR expresion7 .)
    TBOOL           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    TFLOAT          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    LPAREN          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    NOT             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    MM              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    PP              reduce using rule 82 (expresion7i -> SHR expresion7 .)
    NEW             reduce using rule 82 (expresion7i -> SHR expresion7 .)
    CTEI            reduce using rule 82 (expresion7i -> SHR expresion7 .)
    CTEF            reduce using rule 82 (expresion7i -> SHR expresion7 .)
    RCURLY          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    WHERE           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    SEMIC           reduce using rule 82 (expresion7i -> SHR expresion7 .)
    RPAREN          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    LCURLY          reduce using rule 82 (expresion7i -> SHR expresion7 .)
    RBRACKET        reduce using rule 82 (expresion7i -> SHR expresion7 .)


state 192

    (83) expresion7i -> SHL expresion7 .

    EQ              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    DIF             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    ANDB            reduce using rule 83 (expresion7i -> SHL expresion7 .)
    XOR             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    ORB             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    AND             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    OR              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    COMMA           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    IF              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    PRINT           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    FOR             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    RETURN          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    BUILD           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    CONDITION       reduce using rule 83 (expresion7i -> SHL expresion7 .)
    ID              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    TINT            reduce using rule 83 (expresion7i -> SHL expresion7 .)
    TBOOL           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    TFLOAT          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    LPAREN          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    NOT             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    MM              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    PP              reduce using rule 83 (expresion7i -> SHL expresion7 .)
    NEW             reduce using rule 83 (expresion7i -> SHL expresion7 .)
    CTEI            reduce using rule 83 (expresion7i -> SHL expresion7 .)
    CTEF            reduce using rule 83 (expresion7i -> SHL expresion7 .)
    RCURLY          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    WHERE           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    SEMIC           reduce using rule 83 (expresion7i -> SHL expresion7 .)
    RPAREN          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    LCURLY          reduce using rule 83 (expresion7i -> SHL expresion7 .)
    RBRACKET        reduce using rule 83 (expresion7i -> SHL expresion7 .)


state 193

    (79) expresion6i -> DIF expresion6 .

    ANDB            reduce using rule 79 (expresion6i -> DIF expresion6 .)
    XOR             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    ORB             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    AND             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    OR              reduce using rule 79 (expresion6i -> DIF expresion6 .)
    COMMA           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    IF              reduce using rule 79 (expresion6i -> DIF expresion6 .)
    PRINT           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    FOR             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    RETURN          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    BUILD           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    CONDITION       reduce using rule 79 (expresion6i -> DIF expresion6 .)
    ID              reduce using rule 79 (expresion6i -> DIF expresion6 .)
    TINT            reduce using rule 79 (expresion6i -> DIF expresion6 .)
    TBOOL           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    TFLOAT          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    LPAREN          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    NOT             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    MM              reduce using rule 79 (expresion6i -> DIF expresion6 .)
    PP              reduce using rule 79 (expresion6i -> DIF expresion6 .)
    NEW             reduce using rule 79 (expresion6i -> DIF expresion6 .)
    CTEI            reduce using rule 79 (expresion6i -> DIF expresion6 .)
    CTEF            reduce using rule 79 (expresion6i -> DIF expresion6 .)
    RCURLY          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    WHERE           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    SEMIC           reduce using rule 79 (expresion6i -> DIF expresion6 .)
    RPAREN          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    LCURLY          reduce using rule 79 (expresion6i -> DIF expresion6 .)
    RBRACKET        reduce using rule 79 (expresion6i -> DIF expresion6 .)


state 194

    (78) expresion6i -> EQ expresion6 .

    ANDB            reduce using rule 78 (expresion6i -> EQ expresion6 .)
    XOR             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    ORB             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    AND             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    OR              reduce using rule 78 (expresion6i -> EQ expresion6 .)
    COMMA           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    IF              reduce using rule 78 (expresion6i -> EQ expresion6 .)
    PRINT           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    FOR             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    RETURN          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    BUILD           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    CONDITION       reduce using rule 78 (expresion6i -> EQ expresion6 .)
    ID              reduce using rule 78 (expresion6i -> EQ expresion6 .)
    TINT            reduce using rule 78 (expresion6i -> EQ expresion6 .)
    TBOOL           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    TFLOAT          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    LPAREN          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    NOT             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    MM              reduce using rule 78 (expresion6i -> EQ expresion6 .)
    PP              reduce using rule 78 (expresion6i -> EQ expresion6 .)
    NEW             reduce using rule 78 (expresion6i -> EQ expresion6 .)
    CTEI            reduce using rule 78 (expresion6i -> EQ expresion6 .)
    CTEF            reduce using rule 78 (expresion6i -> EQ expresion6 .)
    RCURLY          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    WHERE           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    SEMIC           reduce using rule 78 (expresion6i -> EQ expresion6 .)
    RPAREN          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    LCURLY          reduce using rule 78 (expresion6i -> EQ expresion6 .)
    RBRACKET        reduce using rule 78 (expresion6i -> EQ expresion6 .)


state 195

    (13) build -> BUILD expresion SEMIC .

    WHERE           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    IF              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 13 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TINT            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TBOOL           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TFLOAT          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    LPAREN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    NOT             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    MM              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PP              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    NEW             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CTEI            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CTEF            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 13 (build -> BUILD expresion SEMIC .)


state 196

    (103) exponencial -> LPAREN expresion RPAREN .

    EXP             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    STAR            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    SHR             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    SHL             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    DIF             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    ANDB            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    ORB             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    AND             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    OR              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    IF              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    BUILD           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    CONDITION       reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    ID              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    TINT            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    TBOOL           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    TFLOAT          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    NOT             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    MM              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    PP              reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    NEW             reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    CTEI            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    WHERE           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    LCURLY          reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 103 (exponencial -> LPAREN expresion RPAREN .)


state 197

    (14) where -> WHERE LCURLY . bloque2 RCURLY
    (59) bloque2 -> . statement bloque2
    (60) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (125) empty -> .
    (52) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (36) condition -> . IF asign bloque condition1
    (39) write -> . PRINT asign write2 SEMIC
    (42) ciclo -> . FOR ID IN DOT ID bloque
    (61) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (53) typedeclaration -> . type dimensions
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (122) type -> . TINT
    (123) type -> . TBOOL
    (124) type -> . TFLOAT
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty

  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    IF              shift and go to state 63
    PRINT           shift and go to state 36
    FOR             shift and go to state 53
    RETURN          shift and go to state 31
    BUILD           shift and go to state 58
    CONDITION       shift and go to state 70
    ID              shift and go to state 41
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35

  ! ID              [ reduce using rule 125 (empty -> .) ]

    termino                        shift and go to state 34
    expresion5                     shift and go to state 37
    id                             shift and go to state 38
    expresiones                    shift and go to state 56
    ciclo                          shift and go to state 39
    exponencial2                   shift and go to state 40
    write                          shift and go to state 42
    expresion9                     shift and go to state 33
    build                          shift and go to state 43
    statement                      shift and go to state 44
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    type                           shift and go to state 28
    empty                          shift and go to state 118
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    return                         shift and go to state 51
    expresion4                     shift and go to state 52
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 60
    condition                      shift and go to state 62
    expresion                      shift and go to state 64
    bloque2                        shift and go to state 218
    asign                          shift and go to state 69
    wherecondition                 shift and go to state 72

state 198

    (36) condition -> IF asign bloque . condition1
    (37) condition1 -> . ELSE bloque
    (38) condition1 -> . empty
    (125) empty -> .

    ELSE            shift and go to state 220
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)

    empty                          shift and go to state 221
    condition1                     shift and go to state 219

state 199

    (29) expresiones -> expresion COMMA expresiones .

    IF              reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    PRINT           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    FOR             reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    RETURN          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    BUILD           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    CONDITION       reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    ID              reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    TINT            reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    TBOOL           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    TFLOAT          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    LPAREN          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    NOT             reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    MM              reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    PP              reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    NEW             reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    CTEI            reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    CTEF            reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    RCURLY          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    WHERE           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    COMMA           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    SEMIC           reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    LCURLY          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)
    RPAREN          reduce using rule 29 (expresiones -> expresion COMMA expresiones .)


state 200

    (12) optimize -> MAX LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 153

    where                          shift and go to state 222

state 201

    (15) wherecondition -> CONDITION expresion SEMIC .

    WHERE           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    IF              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TINT            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TBOOL           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TFLOAT          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    LPAREN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    NOT             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    MM              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PP              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    NEW             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CTEI            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CTEF            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)


state 202

    (58) bloque -> LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 223


state 203

    (48) funcion3 -> LPAREN type RPAREN .

    LCURLY          reduce using rule 48 (funcion3 -> LPAREN type RPAREN .)


state 204

    (46) funcion2 -> COMMA type ID . funcion2
    (46) funcion2 -> . COMMA type ID funcion2
    (47) funcion2 -> .

    COMMA           shift and go to state 75
    RPAREN          reduce using rule 47 (funcion2 -> .)

    funcion2                       shift and go to state 224

state 205

    (56) dec22 -> COMMA . ID dec22

    ID              shift and go to state 225


state 206

    (52) declaration -> typedeclaration POINTS ID dec22 . SEMIC

    SEMIC           shift and go to state 226


state 207

    (57) dec22 -> empty .

    SEMIC           reduce using rule 57 (dec22 -> empty .)


state 208

    (54) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (54) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (55) dimensions -> . empty
    (125) empty -> .

    LBRACKET        shift and go to state 81
    POINTS          reduce using rule 125 (empty -> .)
    ASEQ            reduce using rule 125 (empty -> .)
    PLUSEQ          reduce using rule 125 (empty -> .)
    MINEQ           reduce using rule 125 (empty -> .)
    MULTEQ          reduce using rule 125 (empty -> .)
    DIVEQ           reduce using rule 125 (empty -> .)
    EXP             reduce using rule 125 (empty -> .)
    STAR            reduce using rule 125 (empty -> .)
    SLASH           reduce using rule 125 (empty -> .)
    MOD             reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GREATERTHAN     reduce using rule 125 (empty -> .)
    LESSTHAN        reduce using rule 125 (empty -> .)
    GREATEREQUAL    reduce using rule 125 (empty -> .)
    LESSEQUAL       reduce using rule 125 (empty -> .)
    SHR             reduce using rule 125 (empty -> .)
    SHL             reduce using rule 125 (empty -> .)
    EQ              reduce using rule 125 (empty -> .)
    DIF             reduce using rule 125 (empty -> .)
    ANDB            reduce using rule 125 (empty -> .)
    XOR             reduce using rule 125 (empty -> .)
    ORB             reduce using rule 125 (empty -> .)
    AND             reduce using rule 125 (empty -> .)
    OR              reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    IF              reduce using rule 125 (empty -> .)
    PRINT           reduce using rule 125 (empty -> .)
    FOR             reduce using rule 125 (empty -> .)
    RETURN          reduce using rule 125 (empty -> .)
    BUILD           reduce using rule 125 (empty -> .)
    CONDITION       reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    TINT            reduce using rule 125 (empty -> .)
    TBOOL           reduce using rule 125 (empty -> .)
    TFLOAT          reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NOT             reduce using rule 125 (empty -> .)
    MM              reduce using rule 125 (empty -> .)
    PP              reduce using rule 125 (empty -> .)
    NEW             reduce using rule 125 (empty -> .)
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    RCURLY          reduce using rule 125 (empty -> .)
    WHERE           reduce using rule 125 (empty -> .)
    SEMIC           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    LCURLY          reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)

    dimensions                     shift and go to state 227
    empty                          shift and go to state 82

state 209

    (11) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 228


state 210

    (39) write -> PRINT asign write2 SEMIC .

    IF              reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    PRINT           reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    FOR             reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    RETURN          reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    BUILD           reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    CONDITION       reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    ID              reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    TINT            reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    TBOOL           reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    TFLOAT          reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    LPAREN          reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    NOT             reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    MM              reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    PP              reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    NEW             reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    CTEI            reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    CTEF            reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    RCURLY          reduce using rule 39 (write -> PRINT asign write2 SEMIC .)
    WHERE           reduce using rule 39 (write -> PRINT asign write2 SEMIC .)


state 211

    (40) write2 -> COMMA asign . write2
    (40) write2 -> . COMMA asign write2
    (41) write2 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 174
    SEMIC           reduce using rule 125 (empty -> .)

    write2                         shift and go to state 229
    empty                          shift and go to state 175

state 212

    (27) asign -> id asign_signo expresiones SEMIC .

    COMMA           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RPAREN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    WHERE           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    SEMIC           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    IF              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    PRINT           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    FOR             reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RETURN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    BUILD           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    CONDITION       reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    ID              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TINT            reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TBOOL           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TFLOAT          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    LPAREN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    NOT             reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    MM              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    PP              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    NEW             reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    CTEI            reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    CTEF            reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    LCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)


state 213

    (117) llamarfuncion -> LPAREN llamarfuncion3 RPAREN .

    ASEQ            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUSEQ          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINEQ           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MULTEQ          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIVEQ           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EXP             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    STAR            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SLASH           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MOD             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUS            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINUS           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATERTHAN     reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSTHAN        reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATEREQUAL    reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSEQUAL       reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHR             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHL             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EQ              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIF             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ANDB            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    XOR             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ORB             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    AND             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    OR              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    COMMA           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    IF              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PRINT           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    FOR             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RETURN          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    BUILD           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    CONDITION       reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ID              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    TINT            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    TBOOL           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    TFLOAT          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LPAREN          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    NOT             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MM              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PP              reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    NEW             reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    CTEI            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    CTEF            reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RCURLY          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    WHERE           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SEMIC           reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RPAREN          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LCURLY          reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RBRACKET        reduce using rule 117 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)


state 214

    (118) llamarfuncion3 -> asign llamarfuncion33 .

    RPAREN          reduce using rule 118 (llamarfuncion3 -> asign llamarfuncion33 .)


state 215

    (120) llamarfuncion33 -> COMMA . asign llamarfuncion33
    (27) asign -> . id asign_signo expresiones SEMIC
    (28) asign -> . expresiones
    (114) id -> . ID llamarfuncion
    (115) id -> . ID dimensions
    (29) expresiones -> . expresion COMMA expresiones
    (30) expresiones -> . expresion
    (62) expresion -> . expresion2 expresioni
    (65) expresion2 -> . expresion3 expresion2i
    (68) expresion3 -> . expresion4 expresion3i
    (71) expresion4 -> . expresion5 expresion4i
    (74) expresion5 -> . expresion6 expresion5i
    (77) expresion6 -> . expresion7 expresion6i
    (81) expresion7 -> . expresion8 expresion7i
    (85) expresion8 -> . expresion9 expresion8i
    (91) expresion9 -> . termino expresion9i
    (95) termino -> . factor termino2
    (100) factor -> . exponencial factor2
    (103) exponencial -> . LPAREN expresion RPAREN
    (104) exponencial -> . exponencial2 valor
    (105) exponencial2 -> . NOT
    (106) exponencial2 -> . MM
    (107) exponencial2 -> . PP
    (108) exponencial2 -> . NEW
    (109) exponencial2 -> . empty
    (125) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 41
    LPAREN          shift and go to state 59
    NOT             shift and go to state 71
    MM              shift and go to state 67
    PP              shift and go to state 66
    NEW             shift and go to state 35
    CTEI            reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)

  ! ID              [ reduce using rule 125 (empty -> .) ]

    expresion9                     shift and go to state 33
    termino                        shift and go to state 34
    id                             shift and go to state 38
    expresion4                     shift and go to state 52
    expresiones                    shift and go to state 56
    exponencial2                   shift and go to state 40
    factor                         shift and go to state 45
    exponencial                    shift and go to state 46
    empty                          shift and go to state 86
    expresion3                     shift and go to state 49
    expresion2                     shift and go to state 50
    expresion5                     shift and go to state 37
    expresion7                     shift and go to state 57
    expresion6                     shift and go to state 54
    expresion8                     shift and go to state 55
    expresion                      shift and go to state 64
    asign                          shift and go to state 230

state 216

    (121) llamarfuncion33 -> empty .

    RPAREN          reduce using rule 121 (llamarfuncion33 -> empty .)


state 217

    (42) ciclo -> FOR ID IN DOT . ID bloque

    ID              shift and go to state 231


state 218

    (14) where -> WHERE LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 232


state 219

    (36) condition -> IF asign bloque condition1 .

    IF              reduce using rule 36 (condition -> IF asign bloque condition1 .)
    PRINT           reduce using rule 36 (condition -> IF asign bloque condition1 .)
    FOR             reduce using rule 36 (condition -> IF asign bloque condition1 .)
    RETURN          reduce using rule 36 (condition -> IF asign bloque condition1 .)
    BUILD           reduce using rule 36 (condition -> IF asign bloque condition1 .)
    CONDITION       reduce using rule 36 (condition -> IF asign bloque condition1 .)
    ID              reduce using rule 36 (condition -> IF asign bloque condition1 .)
    TINT            reduce using rule 36 (condition -> IF asign bloque condition1 .)
    TBOOL           reduce using rule 36 (condition -> IF asign bloque condition1 .)
    TFLOAT          reduce using rule 36 (condition -> IF asign bloque condition1 .)
    LPAREN          reduce using rule 36 (condition -> IF asign bloque condition1 .)
    NOT             reduce using rule 36 (condition -> IF asign bloque condition1 .)
    MM              reduce using rule 36 (condition -> IF asign bloque condition1 .)
    PP              reduce using rule 36 (condition -> IF asign bloque condition1 .)
    NEW             reduce using rule 36 (condition -> IF asign bloque condition1 .)
    CTEI            reduce using rule 36 (condition -> IF asign bloque condition1 .)
    CTEF            reduce using rule 36 (condition -> IF asign bloque condition1 .)
    RCURLY          reduce using rule 36 (condition -> IF asign bloque condition1 .)
    WHERE           reduce using rule 36 (condition -> IF asign bloque condition1 .)


state 220

    (37) condition1 -> ELSE . bloque
    (58) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 158

    bloque                         shift and go to state 233

state 221

    (38) condition1 -> empty .

    IF              reduce using rule 38 (condition1 -> empty .)
    PRINT           reduce using rule 38 (condition1 -> empty .)
    FOR             reduce using rule 38 (condition1 -> empty .)
    RETURN          reduce using rule 38 (condition1 -> empty .)
    BUILD           reduce using rule 38 (condition1 -> empty .)
    CONDITION       reduce using rule 38 (condition1 -> empty .)
    ID              reduce using rule 38 (condition1 -> empty .)
    TINT            reduce using rule 38 (condition1 -> empty .)
    TBOOL           reduce using rule 38 (condition1 -> empty .)
    TFLOAT          reduce using rule 38 (condition1 -> empty .)
    LPAREN          reduce using rule 38 (condition1 -> empty .)
    NOT             reduce using rule 38 (condition1 -> empty .)
    MM              reduce using rule 38 (condition1 -> empty .)
    PP              reduce using rule 38 (condition1 -> empty .)
    NEW             reduce using rule 38 (condition1 -> empty .)
    CTEI            reduce using rule 38 (condition1 -> empty .)
    CTEF            reduce using rule 38 (condition1 -> empty .)
    RCURLY          reduce using rule 38 (condition1 -> empty .)
    WHERE           reduce using rule 38 (condition1 -> empty .)


state 222

    (12) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 234


state 223

    (58) bloque -> LCURLY bloque2 RCURLY .

    FUNC            reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    MODEL           reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    ELSE            reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    IF              reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    ID              reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    LPAREN          reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    NOT             reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    MM              reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    PP              reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    NEW             reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    CTEI            reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    CTEF            reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)
    WHERE           reduce using rule 58 (bloque -> LCURLY bloque2 RCURLY .)


state 224

    (46) funcion2 -> COMMA type ID funcion2 .

    RPAREN          reduce using rule 46 (funcion2 -> COMMA type ID funcion2 .)


state 225

    (56) dec22 -> COMMA ID . dec22
    (56) dec22 -> . COMMA ID dec22
    (57) dec22 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 205
    SEMIC           reduce using rule 125 (empty -> .)

    dec22                          shift and go to state 235
    empty                          shift and go to state 207

state 226

    (52) declaration -> typedeclaration POINTS ID dec22 SEMIC .

    TINT            reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TBOOL           reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TFLOAT          reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RCURLY          reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    IF              reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    PRINT           reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    FOR             reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RETURN          reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    BUILD           reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    CONDITION       reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    ID              reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    LPAREN          reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    NOT             reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    MM              reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    PP              reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    NEW             reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    CTEI            reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    CTEF            reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    WHERE           reduce using rule 52 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)


state 227

    (54) dimensions -> LBRACKET expresion RBRACKET dimensions .

    POINTS          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ASEQ            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUSEQ          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINEQ           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MULTEQ          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIVEQ           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EXP             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    STAR            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SLASH           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MOD             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUS            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINUS           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATERTHAN     reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSTHAN        reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATEREQUAL    reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSEQUAL       reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHR             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHL             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EQ              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIF             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ANDB            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    XOR             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ORB             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    AND             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    OR              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    COMMA           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    IF              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PRINT           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    FOR             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RETURN          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    BUILD           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CONDITION       reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ID              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    TINT            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    TBOOL           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    TFLOAT          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LPAREN          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    NOT             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MM              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PP              reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    NEW             reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEI            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    CTEF            reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RCURLY          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    WHERE           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SEMIC           reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RPAREN          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LCURLY          reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RBRACKET        reduce using rule 54 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 228

    (11) optimize -> MIN LCURLY statement where RCURLY .

    WHERE           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    ID              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TINT            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    NOT             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    MM              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PP              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    NEW             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEI            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CTEF            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)


state 229

    (40) write2 -> COMMA asign write2 .

    SEMIC           reduce using rule 40 (write2 -> COMMA asign write2 .)


state 230

    (120) llamarfuncion33 -> COMMA asign . llamarfuncion33
    (120) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (121) llamarfuncion33 -> . empty
    (125) empty -> .

    COMMA           shift and go to state 215
    RPAREN          reduce using rule 125 (empty -> .)

    llamarfuncion33                shift and go to state 236
    empty                          shift and go to state 216

state 231

    (42) ciclo -> FOR ID IN DOT ID . bloque
    (58) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 158

    bloque                         shift and go to state 237

state 232

    (14) where -> WHERE LCURLY bloque2 RCURLY .

    IF              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    ID              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    LPAREN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    NOT             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    MM              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PP              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    NEW             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CTEI            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CTEF            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)


state 233

    (37) condition1 -> ELSE bloque .

    IF              reduce using rule 37 (condition1 -> ELSE bloque .)
    PRINT           reduce using rule 37 (condition1 -> ELSE bloque .)
    FOR             reduce using rule 37 (condition1 -> ELSE bloque .)
    RETURN          reduce using rule 37 (condition1 -> ELSE bloque .)
    BUILD           reduce using rule 37 (condition1 -> ELSE bloque .)
    CONDITION       reduce using rule 37 (condition1 -> ELSE bloque .)
    ID              reduce using rule 37 (condition1 -> ELSE bloque .)
    TINT            reduce using rule 37 (condition1 -> ELSE bloque .)
    TBOOL           reduce using rule 37 (condition1 -> ELSE bloque .)
    TFLOAT          reduce using rule 37 (condition1 -> ELSE bloque .)
    LPAREN          reduce using rule 37 (condition1 -> ELSE bloque .)
    NOT             reduce using rule 37 (condition1 -> ELSE bloque .)
    MM              reduce using rule 37 (condition1 -> ELSE bloque .)
    PP              reduce using rule 37 (condition1 -> ELSE bloque .)
    NEW             reduce using rule 37 (condition1 -> ELSE bloque .)
    CTEI            reduce using rule 37 (condition1 -> ELSE bloque .)
    CTEF            reduce using rule 37 (condition1 -> ELSE bloque .)
    RCURLY          reduce using rule 37 (condition1 -> ELSE bloque .)
    WHERE           reduce using rule 37 (condition1 -> ELSE bloque .)


state 234

    (12) optimize -> MAX LCURLY statement where RCURLY .

    WHERE           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    ID              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TINT            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    LPAREN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    NOT             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    MM              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PP              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    NEW             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEI            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CTEF            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)


state 235

    (56) dec22 -> COMMA ID dec22 .

    SEMIC           reduce using rule 56 (dec22 -> COMMA ID dec22 .)


state 236

    (120) llamarfuncion33 -> COMMA asign llamarfuncion33 .

    RPAREN          reduce using rule 120 (llamarfuncion33 -> COMMA asign llamarfuncion33 .)


state 237

    (42) ciclo -> FOR ID IN DOT ID bloque .

    IF              reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    PRINT           reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    FOR             reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    RETURN          reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    BUILD           reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    CONDITION       reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    ID              reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    TINT            reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    TBOOL           reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    TFLOAT          reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    LPAREN          reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    NOT             reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    MM              reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    PP              reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    NEW             reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    CTEI            reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    CTEF            reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    RCURLY          reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)
    WHERE           reduce using rule 42 (ciclo -> FOR ID IN DOT ID bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 22 resolved as shift
WARNING: shift/reduce conflict for FOR in state 22 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 22 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 22 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for TINT in state 22 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 22 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 22 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 22 resolved as shift
WARNING: shift/reduce conflict for NOT in state 22 resolved as shift
WARNING: shift/reduce conflict for MM in state 22 resolved as shift
WARNING: shift/reduce conflict for PP in state 22 resolved as shift
WARNING: shift/reduce conflict for NEW in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 30 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 41 resolved as shift
WARNING: shift/reduce conflict for IF in state 44 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 44 resolved as shift
WARNING: shift/reduce conflict for FOR in state 44 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 44 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 44 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 44 resolved as shift
WARNING: shift/reduce conflict for TINT in state 44 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 44 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 44 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 44 resolved as shift
WARNING: shift/reduce conflict for NOT in state 44 resolved as shift
WARNING: shift/reduce conflict for MM in state 44 resolved as shift
WARNING: shift/reduce conflict for PP in state 44 resolved as shift
WARNING: shift/reduce conflict for NEW in state 44 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 158 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: reduce/reduce conflict in state 47 resolved using rule (model -> empty)
WARNING: rejected rule (bloque2 -> empty) in state 47
WARNING: reduce/reduce conflict in state 47 resolved using rule (model -> empty)
WARNING: rejected rule (exponencial2 -> empty) in state 47
WARNING: reduce/reduce conflict in state 118 resolved using rule (bloque2 -> empty)
WARNING: rejected rule (exponencial2 -> empty) in state 118
