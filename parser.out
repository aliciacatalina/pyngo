Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CTESTRING
    SUM
    BETWEEN
    CTEBOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model bloque2 RCURLY
Rule 2     functions -> funcion functions
Rule 3     functions -> empty
Rule 4     vars -> varblock
Rule 5     vars -> empty
Rule 6     varblock -> VARS LCURLY lvars RCURLY
Rule 7     model -> optimize
Rule 8     model -> optimize where
Rule 9     model -> bloque2
Rule 10    model -> empty
Rule 11    optimize -> MIN LCURLY statement where RCURLY
Rule 12    optimize -> MAX LCURLY statement where RCURLY
Rule 13    build -> BUILD expresion SEMIC
Rule 14    where -> WHERE LCURLY bloque2 RCURLY
Rule 15    wherecondition -> CONDITION expresion SEMIC
Rule 16    statement -> declaration
Rule 17    statement -> asign
Rule 18    statement -> condition
Rule 19    statement -> write
Rule 20    statement -> ciclo
Rule 21    statement -> return
Rule 22    statement -> build
Rule 23    statement -> wherecondition
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> id asign_signo expresiones SEMIC
Rule 28    expresiones -> expresion COMMA expresiones
Rule 29    expresiones -> expresion
Rule 30    asign_signo -> ASEQ
Rule 31    asign_signo -> PLUSEQ
Rule 32    asign_signo -> MINEQ
Rule 33    asign_signo -> MULTEQ
Rule 34    asign_signo -> DIVEQ
Rule 35    condition -> IF asign bloque condition1
Rule 36    condition1 -> ELSE bloque
Rule 37    condition1 -> empty
Rule 38    write -> PRINT asign write2 SEMIC
Rule 39    write2 -> COMMA asign write2
Rule 40    write2 -> empty
Rule 41    ciclo -> FOR ID IN DOT ID bloque
Rule 42    ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
Rule 43    ciclo1 -> asign
Rule 44    ciclo1 -> <empty>
Rule 45    ciclo2 -> asign
Rule 46    ciclo2 -> <empty>
Rule 47    ciclo3 -> asign
Rule 48    ciclo3 -> <empty>
Rule 49    funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
Rule 50    funcion1 -> type ID funcion2
Rule 51    funcion1 -> <empty>
Rule 52    funcion2 -> COMMA type ID funcion2
Rule 53    funcion2 -> <empty>
Rule 54    funcion3 -> LPAREN type RPAREN
Rule 55    funcion3 -> <empty>
Rule 56    lvars -> declaration lvars
Rule 57    lvars -> empty
Rule 58    declaration -> type dimensions POINTS ID dec22 SEMIC
Rule 59    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 60    dimensions -> empty
Rule 61    dec22 -> COMMA ID dec22
Rule 62    dec22 -> empty
Rule 63    bloque -> LCURLY bloque2 RCURLY
Rule 64    bloque2 -> statement bloque2
Rule 65    bloque2 -> empty
Rule 66    return -> RETURN asign
Rule 67    expresion -> expresion2 expresioni
Rule 68    expresioni -> OR expresion
Rule 69    expresioni -> empty
Rule 70    expresion2 -> expresion3 expresion2i
Rule 71    expresion2i -> AND expresion2
Rule 72    expresion2i -> empty
Rule 73    expresion3 -> expresion4 expresion3i
Rule 74    expresion3i -> ORB expresion3
Rule 75    expresion3i -> empty
Rule 76    expresion4 -> expresion5 expresion4i
Rule 77    expresion4i -> XOR expresion4
Rule 78    expresion4i -> empty
Rule 79    expresion5 -> expresion6 expresion5i
Rule 80    expresion5i -> ANDB expresion5
Rule 81    expresion5i -> empty
Rule 82    expresion6 -> expresion7 expresion6i
Rule 83    expresion6i -> EQ expresion6
Rule 84    expresion6i -> DIF expresion6
Rule 85    expresion6i -> empty
Rule 86    expresion7 -> expresion8 expresion7i
Rule 87    expresion7i -> SHR expresion7
Rule 88    expresion7i -> SHL expresion7
Rule 89    expresion7i -> empty
Rule 90    expresion8 -> expresion9 expresion8i
Rule 91    expresion8i -> GREATERTHAN expresion8
Rule 92    expresion8i -> LESSTHAN expresion8
Rule 93    expresion8i -> GREATEREQUAL expresion8
Rule 94    expresion8i -> LESSEQUAL expresion8
Rule 95    expresion8i -> empty
Rule 96    expresion9 -> termino expresion9i
Rule 97    expresion9i -> PLUS expresion9
Rule 98    expresion9i -> MINUS expresion9
Rule 99    expresion9i -> empty
Rule 100   termino -> factor termino2
Rule 101   termino2 -> STAR termino
Rule 102   termino2 -> SLASH termino
Rule 103   termino2 -> MOD termino
Rule 104   termino2 -> empty
Rule 105   factor -> exponencial factor2
Rule 106   factor2 -> EXP factor
Rule 107   factor2 -> empty
Rule 108   exponencial -> LPAREN expresion RPAREN
Rule 109   exponencial -> exponencial2 valor
Rule 110   exponencial2 -> NOT
Rule 111   exponencial2 -> MM
Rule 112   exponencial2 -> PP
Rule 113   exponencial2 -> NEW
Rule 114   exponencial2 -> empty
Rule 115   valor -> id
Rule 116   valor -> int
Rule 117   valor -> float
Rule 118   int -> CTEI
Rule 119   id -> ID llamarfuncion
Rule 120   id -> ID
Rule 121   float -> CTEF
Rule 122   llamarfuncion -> LPAREN llamarfuncion3 RPAREN
Rule 123   llamarfuncion3 -> asign llamarfuncion33
Rule 124   llamarfuncion3 -> empty
Rule 125   llamarfuncion33 -> COMMA asign llamarfuncion33
Rule 126   llamarfuncion33 -> empty
Rule 127   type -> TINT
Rule 128   type -> TBOOL
Rule 129   type -> TFLOAT
Rule 130   empty -> <empty>

Terminals, with rules where they appear

AND                  : 71
ANDB                 : 80
ASEQ                 : 30
BETWEEN              : 
BUILD                : 13
COMMA                : 28 39 52 61 125
CONDITION            : 15
CTEBOOL              : 
CTEF                 : 121
CTEI                 : 118
CTESTRING            : 
DATA                 : 24
DIF                  : 84
DIVEQ                : 34
DOT                  : 41
ELSE                 : 36
EQ                   : 83
EXP                  : 106
FOR                  : 41 42
FUNC                 : 49
GREATEREQUAL         : 93
GREATERTHAN          : 91
ID                   : 41 41 49 50 52 58 61 119 120
IF                   : 35
IN                   : 41
LBRACKET             : 59
LCURLY               : 1 6 11 12 14 24 63
LESSEQUAL            : 94
LESSTHAN             : 92
LPAREN               : 49 54 108 122
MAX                  : 12
MIN                  : 11
MINEQ                : 32
MINUS                : 98
MM                   : 111
MOD                  : 103
MODEL                : 1
MULTEQ               : 33
NEW                  : 113
NOT                  : 110
OR                   : 68
ORB                  : 74
PLUS                 : 97
PLUSEQ               : 31
POINTS               : 58
PP                   : 112
PRINT                : 38
RBRACKET             : 59
RCURLY               : 1 6 11 12 14 24 63
RETURN               : 66
RPAREN               : 49 54 108 122
SEMIC                : 13 15 27 38 42 42 58
SHL                  : 88
SHR                  : 87
SLASH                : 102
STAR                 : 101
SUM                  : 
TBOOL                : 128
TFLOAT               : 129
TINT                 : 127
VARS                 : 6
WHERE                : 14
XOR                  : 77
error                : 

Nonterminals, with rules where they appear

asign                : 17 25 35 38 39 43 45 47 66 123 125
asign_signo          : 27
asignmany            : 24 25
bloque               : 35 36 41 42 49
bloque2              : 1 9 14 63 64
build                : 22
ciclo                : 20
ciclo1               : 42
ciclo2               : 42
ciclo3               : 42
condition            : 18
condition1           : 35
data                 : 1
dec22                : 58 61
declaration          : 16 56
dimensions           : 58 59
empty                : 3 5 10 26 37 40 57 60 62 65 69 72 75 78 81 85 89 95 99 104 107 114 124 126
exponencial          : 105
exponencial2         : 109
expresion            : 13 15 28 29 59 68 108
expresion2           : 67 71
expresion2i          : 70
expresion3           : 70 74
expresion3i          : 73
expresion4           : 73 77
expresion4i          : 76
expresion5           : 76 80
expresion5i          : 79
expresion6           : 79 83 84
expresion6i          : 82
expresion7           : 82 87 88
expresion7i          : 86
expresion8           : 86 91 92 93 94
expresion8i          : 90
expresion9           : 90 97 98
expresion9i          : 96
expresiones          : 27 28
expresioni           : 67
factor               : 100 106
factor2              : 105
float                : 117
funcion              : 2
funcion1             : 49
funcion2             : 50 52
funcion3             : 49
functions            : 1 2
id                   : 27 115
int                  : 116
llamarfuncion        : 119
llamarfuncion3       : 122
llamarfuncion33      : 123 125
lvars                : 6 56
model                : 1
optimize             : 7 8
program              : 0
return               : 21
statement            : 11 12 64
termino              : 96 101 102 103
termino2             : 100
type                 : 50 52 54 58
valor                : 109
varblock             : 4
vars                 : 1
where                : 8 11 12
wherecondition       : 23
write                : 19
write2               : 38 39

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model bloque2 RCURLY
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (49) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (130) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 130 (empty -> .)

    functions                      shift and go to state 1
    program                        shift and go to state 2
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 1

    (1) program -> functions . MODEL LCURLY vars data model bloque2 RCURLY

    MODEL           shift and go to state 6


state 2

    (0) S' -> program .



state 3

    (49) funcion -> FUNC . ID LPAREN funcion1 RPAREN funcion3 bloque

    ID              shift and go to state 7


state 4

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 5

    (2) functions -> funcion . functions
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (49) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (130) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 130 (empty -> .)

    functions                      shift and go to state 8
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 6

    (1) program -> functions MODEL . LCURLY vars data model bloque2 RCURLY

    LCURLY          shift and go to state 9


state 7

    (49) funcion -> FUNC ID . LPAREN funcion1 RPAREN funcion3 bloque

    LPAREN          shift and go to state 10


state 8

    (2) functions -> funcion functions .

    MODEL           reduce using rule 2 (functions -> funcion functions .)


state 9

    (1) program -> functions MODEL LCURLY . vars data model bloque2 RCURLY
    (4) vars -> . varblock
    (5) vars -> . empty
    (6) varblock -> . VARS LCURLY lvars RCURLY
    (130) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 130 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (49) funcion -> FUNC ID LPAREN . funcion1 RPAREN funcion3 bloque
    (50) funcion1 -> . type ID funcion2
    (51) funcion1 -> .
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT

    RPAREN          reduce using rule 51 (funcion1 -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    funcion1                       shift and go to state 17
    type                           shift and go to state 19

state 11

    (6) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 20


state 12

    (1) program -> functions MODEL LCURLY vars . data model bloque2 RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 21

    data                           shift and go to state 22

state 13

    (4) vars -> varblock .

    DATA            reduce using rule 4 (vars -> varblock .)


state 14

    (5) vars -> empty .

    DATA            reduce using rule 5 (vars -> empty .)


state 15

    (127) type -> TINT .

    LBRACKET        reduce using rule 127 (type -> TINT .)
    POINTS          reduce using rule 127 (type -> TINT .)
    RPAREN          reduce using rule 127 (type -> TINT .)
    ID              reduce using rule 127 (type -> TINT .)


state 16

    (129) type -> TFLOAT .

    LBRACKET        reduce using rule 129 (type -> TFLOAT .)
    POINTS          reduce using rule 129 (type -> TFLOAT .)
    RPAREN          reduce using rule 129 (type -> TFLOAT .)
    ID              reduce using rule 129 (type -> TFLOAT .)


state 17

    (49) funcion -> FUNC ID LPAREN funcion1 . RPAREN funcion3 bloque

    RPAREN          shift and go to state 23


state 18

    (128) type -> TBOOL .

    LBRACKET        reduce using rule 128 (type -> TBOOL .)
    POINTS          reduce using rule 128 (type -> TBOOL .)
    RPAREN          reduce using rule 128 (type -> TBOOL .)
    ID              reduce using rule 128 (type -> TBOOL .)


state 19

    (50) funcion1 -> type . ID funcion2

    ID              shift and go to state 24


state 20

    (6) varblock -> VARS LCURLY . lvars RCURLY
    (56) lvars -> . declaration lvars
    (57) lvars -> . empty
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (130) empty -> .
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT

    RCURLY          reduce using rule 130 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    lvars                          shift and go to state 25
    declaration                    shift and go to state 26
    type                           shift and go to state 27
    empty                          shift and go to state 28

state 21

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 29


state 22

    (1) program -> functions MODEL LCURLY vars data . model bloque2 RCURLY
    (7) model -> . optimize
    (8) model -> . optimize where
    (9) model -> . bloque2
    (10) model -> . empty
    (11) optimize -> . MIN LCURLY statement where RCURLY
    (12) optimize -> . MAX LCURLY statement where RCURLY
    (64) bloque2 -> . statement bloque2
    (65) bloque2 -> . empty
    (130) empty -> .
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    MIN             shift and go to state 31
    MAX             shift and go to state 48
    RCURLY          reduce using rule 130 (empty -> .)
    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

  ! IF              [ reduce using rule 130 (empty -> .) ]
  ! PRINT           [ reduce using rule 130 (empty -> .) ]
  ! FOR             [ reduce using rule 130 (empty -> .) ]
  ! RETURN          [ reduce using rule 130 (empty -> .) ]
  ! BUILD           [ reduce using rule 130 (empty -> .) ]
  ! CONDITION       [ reduce using rule 130 (empty -> .) ]
  ! TINT            [ reduce using rule 130 (empty -> .) ]
  ! TBOOL           [ reduce using rule 130 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 130 (empty -> .) ]
  ! ID              [ reduce using rule 130 (empty -> .) ]

    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    optimize                       shift and go to state 45
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 38
    type                           shift and go to state 27
    empty                          shift and go to state 40
    return                         shift and go to state 42
    declaration                    shift and go to state 44
    model                          shift and go to state 41
    condition                      shift and go to state 46
    bloque2                        shift and go to state 47
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 23

    (49) funcion -> FUNC ID LPAREN funcion1 RPAREN . funcion3 bloque
    (54) funcion3 -> . LPAREN type RPAREN
    (55) funcion3 -> .

    LPAREN          shift and go to state 54
    LCURLY          reduce using rule 55 (funcion3 -> .)

    funcion3                       shift and go to state 53

state 24

    (50) funcion1 -> type ID . funcion2
    (52) funcion2 -> . COMMA type ID funcion2
    (53) funcion2 -> .

    COMMA           shift and go to state 55
    RPAREN          reduce using rule 53 (funcion2 -> .)

    funcion2                       shift and go to state 56

state 25

    (6) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 57


state 26

    (56) lvars -> declaration . lvars
    (56) lvars -> . declaration lvars
    (57) lvars -> . empty
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (130) empty -> .
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT

    RCURLY          reduce using rule 130 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    lvars                          shift and go to state 58
    declaration                    shift and go to state 26
    type                           shift and go to state 27
    empty                          shift and go to state 28

state 27

    (58) declaration -> type . dimensions POINTS ID dec22 SEMIC
    (59) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (60) dimensions -> . empty
    (130) empty -> .

    LBRACKET        shift and go to state 60
    POINTS          reduce using rule 130 (empty -> .)

    dimensions                     shift and go to state 59
    empty                          shift and go to state 61

state 28

    (57) lvars -> empty .

    RCURLY          reduce using rule 57 (lvars -> empty .)


state 29

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (130) empty -> .
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RCURLY          reduce using rule 130 (empty -> .)
    ID              shift and go to state 35

    asignmany                      shift and go to state 62
    asign                          shift and go to state 63
    id                             shift and go to state 33
    empty                          shift and go to state 64

state 30

    (66) return -> RETURN . asign
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 35

    id                             shift and go to state 33
    asign                          shift and go to state 65

state 31

    (11) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 66


state 32

    (38) write -> PRINT . asign write2 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 35

    asign                          shift and go to state 67
    id                             shift and go to state 33

state 33

    (27) asign -> id . asign_signo expresiones SEMIC
    (30) asign_signo -> . ASEQ
    (31) asign_signo -> . PLUSEQ
    (32) asign_signo -> . MINEQ
    (33) asign_signo -> . MULTEQ
    (34) asign_signo -> . DIVEQ

    ASEQ            shift and go to state 69
    PLUSEQ          shift and go to state 68
    MINEQ           shift and go to state 70
    MULTEQ          shift and go to state 71
    DIVEQ           shift and go to state 73

    asign_signo                    shift and go to state 72

state 34

    (20) statement -> ciclo .

    WHERE           reduce using rule 20 (statement -> ciclo .)
    IF              reduce using rule 20 (statement -> ciclo .)
    PRINT           reduce using rule 20 (statement -> ciclo .)
    FOR             reduce using rule 20 (statement -> ciclo .)
    RETURN          reduce using rule 20 (statement -> ciclo .)
    BUILD           reduce using rule 20 (statement -> ciclo .)
    CONDITION       reduce using rule 20 (statement -> ciclo .)
    TINT            reduce using rule 20 (statement -> ciclo .)
    TBOOL           reduce using rule 20 (statement -> ciclo .)
    TFLOAT          reduce using rule 20 (statement -> ciclo .)
    ID              reduce using rule 20 (statement -> ciclo .)
    RCURLY          reduce using rule 20 (statement -> ciclo .)


state 35

    (119) id -> ID . llamarfuncion
    (120) id -> ID .
    (122) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN

    EXP             reduce using rule 120 (id -> ID .)
    STAR            reduce using rule 120 (id -> ID .)
    SLASH           reduce using rule 120 (id -> ID .)
    MOD             reduce using rule 120 (id -> ID .)
    PLUS            reduce using rule 120 (id -> ID .)
    MINUS           reduce using rule 120 (id -> ID .)
    GREATERTHAN     reduce using rule 120 (id -> ID .)
    LESSTHAN        reduce using rule 120 (id -> ID .)
    GREATEREQUAL    reduce using rule 120 (id -> ID .)
    LESSEQUAL       reduce using rule 120 (id -> ID .)
    SHR             reduce using rule 120 (id -> ID .)
    SHL             reduce using rule 120 (id -> ID .)
    EQ              reduce using rule 120 (id -> ID .)
    DIF             reduce using rule 120 (id -> ID .)
    ANDB            reduce using rule 120 (id -> ID .)
    XOR             reduce using rule 120 (id -> ID .)
    ORB             reduce using rule 120 (id -> ID .)
    AND             reduce using rule 120 (id -> ID .)
    OR              reduce using rule 120 (id -> ID .)
    SEMIC           reduce using rule 120 (id -> ID .)
    RBRACKET        reduce using rule 120 (id -> ID .)
    COMMA           reduce using rule 120 (id -> ID .)
    RPAREN          reduce using rule 120 (id -> ID .)
    ASEQ            reduce using rule 120 (id -> ID .)
    PLUSEQ          reduce using rule 120 (id -> ID .)
    MINEQ           reduce using rule 120 (id -> ID .)
    MULTEQ          reduce using rule 120 (id -> ID .)
    DIVEQ           reduce using rule 120 (id -> ID .)
    LPAREN          shift and go to state 75

    llamarfuncion                  shift and go to state 74

state 36

    (19) statement -> write .

    WHERE           reduce using rule 19 (statement -> write .)
    IF              reduce using rule 19 (statement -> write .)
    PRINT           reduce using rule 19 (statement -> write .)
    FOR             reduce using rule 19 (statement -> write .)
    RETURN          reduce using rule 19 (statement -> write .)
    BUILD           reduce using rule 19 (statement -> write .)
    CONDITION       reduce using rule 19 (statement -> write .)
    TINT            reduce using rule 19 (statement -> write .)
    TBOOL           reduce using rule 19 (statement -> write .)
    TFLOAT          reduce using rule 19 (statement -> write .)
    ID              reduce using rule 19 (statement -> write .)
    RCURLY          reduce using rule 19 (statement -> write .)


state 37

    (22) statement -> build .

    WHERE           reduce using rule 22 (statement -> build .)
    IF              reduce using rule 22 (statement -> build .)
    PRINT           reduce using rule 22 (statement -> build .)
    FOR             reduce using rule 22 (statement -> build .)
    RETURN          reduce using rule 22 (statement -> build .)
    BUILD           reduce using rule 22 (statement -> build .)
    CONDITION       reduce using rule 22 (statement -> build .)
    TINT            reduce using rule 22 (statement -> build .)
    TBOOL           reduce using rule 22 (statement -> build .)
    TFLOAT          reduce using rule 22 (statement -> build .)
    ID              reduce using rule 22 (statement -> build .)
    RCURLY          reduce using rule 22 (statement -> build .)


state 38

    (64) bloque2 -> statement . bloque2
    (64) bloque2 -> . statement bloque2
    (65) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (130) empty -> .
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    RCURLY          reduce using rule 130 (empty -> .)
    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

  ! IF              [ reduce using rule 130 (empty -> .) ]
  ! PRINT           [ reduce using rule 130 (empty -> .) ]
  ! FOR             [ reduce using rule 130 (empty -> .) ]
  ! RETURN          [ reduce using rule 130 (empty -> .) ]
  ! BUILD           [ reduce using rule 130 (empty -> .) ]
  ! CONDITION       [ reduce using rule 130 (empty -> .) ]
  ! TINT            [ reduce using rule 130 (empty -> .) ]
  ! TBOOL           [ reduce using rule 130 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 130 (empty -> .) ]
  ! ID              [ reduce using rule 130 (empty -> .) ]

    declaration                    shift and go to state 44
    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 38
    type                           shift and go to state 27
    empty                          shift and go to state 76
    return                         shift and go to state 42
    condition                      shift and go to state 46
    bloque2                        shift and go to state 77
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 39

    (35) condition -> IF . asign bloque condition1
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 35

    id                             shift and go to state 33
    asign                          shift and go to state 78

state 40

    (10) model -> empty .
    (65) bloque2 -> empty .

  ! reduce/reduce conflict for IF resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for BUILD resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CONDITION resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TBOOL resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TFLOAT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RCURLY resolved using rule 10 (model -> empty .)
    IF              reduce using rule 10 (model -> empty .)
    PRINT           reduce using rule 10 (model -> empty .)
    FOR             reduce using rule 10 (model -> empty .)
    RETURN          reduce using rule 10 (model -> empty .)
    BUILD           reduce using rule 10 (model -> empty .)
    CONDITION       reduce using rule 10 (model -> empty .)
    TINT            reduce using rule 10 (model -> empty .)
    TBOOL           reduce using rule 10 (model -> empty .)
    TFLOAT          reduce using rule 10 (model -> empty .)
    ID              reduce using rule 10 (model -> empty .)
    RCURLY          reduce using rule 10 (model -> empty .)

  ! IF              [ reduce using rule 65 (bloque2 -> empty .) ]
  ! PRINT           [ reduce using rule 65 (bloque2 -> empty .) ]
  ! FOR             [ reduce using rule 65 (bloque2 -> empty .) ]
  ! RETURN          [ reduce using rule 65 (bloque2 -> empty .) ]
  ! BUILD           [ reduce using rule 65 (bloque2 -> empty .) ]
  ! CONDITION       [ reduce using rule 65 (bloque2 -> empty .) ]
  ! TINT            [ reduce using rule 65 (bloque2 -> empty .) ]
  ! TBOOL           [ reduce using rule 65 (bloque2 -> empty .) ]
  ! TFLOAT          [ reduce using rule 65 (bloque2 -> empty .) ]
  ! ID              [ reduce using rule 65 (bloque2 -> empty .) ]
  ! RCURLY          [ reduce using rule 65 (bloque2 -> empty .) ]


state 41

    (1) program -> functions MODEL LCURLY vars data model . bloque2 RCURLY
    (64) bloque2 -> . statement bloque2
    (65) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (130) empty -> .
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RCURLY          reduce using rule 130 (empty -> .)
    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 38
    type                           shift and go to state 27
    empty                          shift and go to state 76
    return                         shift and go to state 42
    declaration                    shift and go to state 44
    wherecondition                 shift and go to state 51
    condition                      shift and go to state 46
    bloque2                        shift and go to state 79
    asign                          shift and go to state 49

state 42

    (21) statement -> return .

    WHERE           reduce using rule 21 (statement -> return .)
    IF              reduce using rule 21 (statement -> return .)
    PRINT           reduce using rule 21 (statement -> return .)
    FOR             reduce using rule 21 (statement -> return .)
    RETURN          reduce using rule 21 (statement -> return .)
    BUILD           reduce using rule 21 (statement -> return .)
    CONDITION       reduce using rule 21 (statement -> return .)
    TINT            reduce using rule 21 (statement -> return .)
    TBOOL           reduce using rule 21 (statement -> return .)
    TFLOAT          reduce using rule 21 (statement -> return .)
    ID              reduce using rule 21 (statement -> return .)
    RCURLY          reduce using rule 21 (statement -> return .)


state 43

    (41) ciclo -> FOR . ID IN DOT ID bloque
    (42) ciclo -> FOR . ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (43) ciclo1 -> . asign
    (44) ciclo1 -> .
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 82
    SEMIC           reduce using rule 44 (ciclo1 -> .)

    asign                          shift and go to state 80
    ciclo1                         shift and go to state 81
    id                             shift and go to state 33

state 44

    (16) statement -> declaration .

    WHERE           reduce using rule 16 (statement -> declaration .)
    IF              reduce using rule 16 (statement -> declaration .)
    PRINT           reduce using rule 16 (statement -> declaration .)
    FOR             reduce using rule 16 (statement -> declaration .)
    RETURN          reduce using rule 16 (statement -> declaration .)
    BUILD           reduce using rule 16 (statement -> declaration .)
    CONDITION       reduce using rule 16 (statement -> declaration .)
    TINT            reduce using rule 16 (statement -> declaration .)
    TBOOL           reduce using rule 16 (statement -> declaration .)
    TFLOAT          reduce using rule 16 (statement -> declaration .)
    ID              reduce using rule 16 (statement -> declaration .)
    RCURLY          reduce using rule 16 (statement -> declaration .)


state 45

    (7) model -> optimize .
    (8) model -> optimize . where
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    IF              reduce using rule 7 (model -> optimize .)
    PRINT           reduce using rule 7 (model -> optimize .)
    FOR             reduce using rule 7 (model -> optimize .)
    RETURN          reduce using rule 7 (model -> optimize .)
    BUILD           reduce using rule 7 (model -> optimize .)
    CONDITION       reduce using rule 7 (model -> optimize .)
    TINT            reduce using rule 7 (model -> optimize .)
    TBOOL           reduce using rule 7 (model -> optimize .)
    TFLOAT          reduce using rule 7 (model -> optimize .)
    ID              reduce using rule 7 (model -> optimize .)
    RCURLY          reduce using rule 7 (model -> optimize .)
    WHERE           shift and go to state 84

    where                          shift and go to state 83

state 46

    (18) statement -> condition .

    WHERE           reduce using rule 18 (statement -> condition .)
    IF              reduce using rule 18 (statement -> condition .)
    PRINT           reduce using rule 18 (statement -> condition .)
    FOR             reduce using rule 18 (statement -> condition .)
    RETURN          reduce using rule 18 (statement -> condition .)
    BUILD           reduce using rule 18 (statement -> condition .)
    CONDITION       reduce using rule 18 (statement -> condition .)
    TINT            reduce using rule 18 (statement -> condition .)
    TBOOL           reduce using rule 18 (statement -> condition .)
    TFLOAT          reduce using rule 18 (statement -> condition .)
    ID              reduce using rule 18 (statement -> condition .)
    RCURLY          reduce using rule 18 (statement -> condition .)


state 47

    (9) model -> bloque2 .

    IF              reduce using rule 9 (model -> bloque2 .)
    PRINT           reduce using rule 9 (model -> bloque2 .)
    FOR             reduce using rule 9 (model -> bloque2 .)
    RETURN          reduce using rule 9 (model -> bloque2 .)
    BUILD           reduce using rule 9 (model -> bloque2 .)
    CONDITION       reduce using rule 9 (model -> bloque2 .)
    TINT            reduce using rule 9 (model -> bloque2 .)
    TBOOL           reduce using rule 9 (model -> bloque2 .)
    TFLOAT          reduce using rule 9 (model -> bloque2 .)
    ID              reduce using rule 9 (model -> bloque2 .)
    RCURLY          reduce using rule 9 (model -> bloque2 .)


state 48

    (12) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 85


state 49

    (17) statement -> asign .

    WHERE           reduce using rule 17 (statement -> asign .)
    IF              reduce using rule 17 (statement -> asign .)
    PRINT           reduce using rule 17 (statement -> asign .)
    FOR             reduce using rule 17 (statement -> asign .)
    RETURN          reduce using rule 17 (statement -> asign .)
    BUILD           reduce using rule 17 (statement -> asign .)
    CONDITION       reduce using rule 17 (statement -> asign .)
    TINT            reduce using rule 17 (statement -> asign .)
    TBOOL           reduce using rule 17 (statement -> asign .)
    TFLOAT          reduce using rule 17 (statement -> asign .)
    ID              reduce using rule 17 (statement -> asign .)
    RCURLY          reduce using rule 17 (statement -> asign .)


state 50

    (15) wherecondition -> CONDITION . expresion SEMIC
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 101

state 51

    (23) statement -> wherecondition .

    WHERE           reduce using rule 23 (statement -> wherecondition .)
    IF              reduce using rule 23 (statement -> wherecondition .)
    PRINT           reduce using rule 23 (statement -> wherecondition .)
    FOR             reduce using rule 23 (statement -> wherecondition .)
    RETURN          reduce using rule 23 (statement -> wherecondition .)
    BUILD           reduce using rule 23 (statement -> wherecondition .)
    CONDITION       reduce using rule 23 (statement -> wherecondition .)
    TINT            reduce using rule 23 (statement -> wherecondition .)
    TBOOL           reduce using rule 23 (statement -> wherecondition .)
    TFLOAT          reduce using rule 23 (statement -> wherecondition .)
    ID              reduce using rule 23 (statement -> wherecondition .)
    RCURLY          reduce using rule 23 (statement -> wherecondition .)


state 52

    (13) build -> BUILD . expresion SEMIC
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 105

state 53

    (49) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 . bloque
    (63) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 106

    bloque                         shift and go to state 107

state 54

    (54) funcion3 -> LPAREN . type RPAREN
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 108

state 55

    (52) funcion2 -> COMMA . type ID funcion2
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 109

state 56

    (50) funcion1 -> type ID funcion2 .

    RPAREN          reduce using rule 50 (funcion1 -> type ID funcion2 .)


state 57

    (6) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 6 (varblock -> VARS LCURLY lvars RCURLY .)


state 58

    (56) lvars -> declaration lvars .

    RCURLY          reduce using rule 56 (lvars -> declaration lvars .)


state 59

    (58) declaration -> type dimensions . POINTS ID dec22 SEMIC

    POINTS          shift and go to state 110


state 60

    (59) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    expresion4                     shift and go to state 95
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 111

state 61

    (60) dimensions -> empty .

    POINTS          reduce using rule 60 (dimensions -> empty .)


state 62

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 112


state 63

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (130) empty -> .
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RCURLY          reduce using rule 130 (empty -> .)
    ID              shift and go to state 35

    asignmany                      shift and go to state 113
    asign                          shift and go to state 63
    id                             shift and go to state 33
    empty                          shift and go to state 64

state 64

    (26) asignmany -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)


state 65

    (66) return -> RETURN asign .

    IF              reduce using rule 66 (return -> RETURN asign .)
    PRINT           reduce using rule 66 (return -> RETURN asign .)
    FOR             reduce using rule 66 (return -> RETURN asign .)
    RETURN          reduce using rule 66 (return -> RETURN asign .)
    BUILD           reduce using rule 66 (return -> RETURN asign .)
    CONDITION       reduce using rule 66 (return -> RETURN asign .)
    TINT            reduce using rule 66 (return -> RETURN asign .)
    TBOOL           reduce using rule 66 (return -> RETURN asign .)
    TFLOAT          reduce using rule 66 (return -> RETURN asign .)
    ID              reduce using rule 66 (return -> RETURN asign .)
    RCURLY          reduce using rule 66 (return -> RETURN asign .)
    WHERE           reduce using rule 66 (return -> RETURN asign .)


state 66

    (11) optimize -> MIN LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

    declaration                    shift and go to state 44
    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 114
    type                           shift and go to state 27
    return                         shift and go to state 42
    condition                      shift and go to state 46
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 67

    (38) write -> PRINT asign . write2 SEMIC
    (39) write2 -> . COMMA asign write2
    (40) write2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 116
    SEMIC           reduce using rule 130 (empty -> .)

    write2                         shift and go to state 115
    empty                          shift and go to state 117

state 68

    (31) asign_signo -> PLUSEQ .

    LPAREN          reduce using rule 31 (asign_signo -> PLUSEQ .)
    NOT             reduce using rule 31 (asign_signo -> PLUSEQ .)
    MM              reduce using rule 31 (asign_signo -> PLUSEQ .)
    PP              reduce using rule 31 (asign_signo -> PLUSEQ .)
    NEW             reduce using rule 31 (asign_signo -> PLUSEQ .)
    ID              reduce using rule 31 (asign_signo -> PLUSEQ .)
    CTEI            reduce using rule 31 (asign_signo -> PLUSEQ .)
    CTEF            reduce using rule 31 (asign_signo -> PLUSEQ .)


state 69

    (30) asign_signo -> ASEQ .

    LPAREN          reduce using rule 30 (asign_signo -> ASEQ .)
    NOT             reduce using rule 30 (asign_signo -> ASEQ .)
    MM              reduce using rule 30 (asign_signo -> ASEQ .)
    PP              reduce using rule 30 (asign_signo -> ASEQ .)
    NEW             reduce using rule 30 (asign_signo -> ASEQ .)
    ID              reduce using rule 30 (asign_signo -> ASEQ .)
    CTEI            reduce using rule 30 (asign_signo -> ASEQ .)
    CTEF            reduce using rule 30 (asign_signo -> ASEQ .)


state 70

    (32) asign_signo -> MINEQ .

    LPAREN          reduce using rule 32 (asign_signo -> MINEQ .)
    NOT             reduce using rule 32 (asign_signo -> MINEQ .)
    MM              reduce using rule 32 (asign_signo -> MINEQ .)
    PP              reduce using rule 32 (asign_signo -> MINEQ .)
    NEW             reduce using rule 32 (asign_signo -> MINEQ .)
    ID              reduce using rule 32 (asign_signo -> MINEQ .)
    CTEI            reduce using rule 32 (asign_signo -> MINEQ .)
    CTEF            reduce using rule 32 (asign_signo -> MINEQ .)


state 71

    (33) asign_signo -> MULTEQ .

    LPAREN          reduce using rule 33 (asign_signo -> MULTEQ .)
    NOT             reduce using rule 33 (asign_signo -> MULTEQ .)
    MM              reduce using rule 33 (asign_signo -> MULTEQ .)
    PP              reduce using rule 33 (asign_signo -> MULTEQ .)
    NEW             reduce using rule 33 (asign_signo -> MULTEQ .)
    ID              reduce using rule 33 (asign_signo -> MULTEQ .)
    CTEI            reduce using rule 33 (asign_signo -> MULTEQ .)
    CTEF            reduce using rule 33 (asign_signo -> MULTEQ .)


state 72

    (27) asign -> id asign_signo . expresiones SEMIC
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    expresiones                    shift and go to state 118
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 119

state 73

    (34) asign_signo -> DIVEQ .

    LPAREN          reduce using rule 34 (asign_signo -> DIVEQ .)
    NOT             reduce using rule 34 (asign_signo -> DIVEQ .)
    MM              reduce using rule 34 (asign_signo -> DIVEQ .)
    PP              reduce using rule 34 (asign_signo -> DIVEQ .)
    NEW             reduce using rule 34 (asign_signo -> DIVEQ .)
    ID              reduce using rule 34 (asign_signo -> DIVEQ .)
    CTEI            reduce using rule 34 (asign_signo -> DIVEQ .)
    CTEF            reduce using rule 34 (asign_signo -> DIVEQ .)


state 74

    (119) id -> ID llamarfuncion .

    EXP             reduce using rule 119 (id -> ID llamarfuncion .)
    STAR            reduce using rule 119 (id -> ID llamarfuncion .)
    SLASH           reduce using rule 119 (id -> ID llamarfuncion .)
    MOD             reduce using rule 119 (id -> ID llamarfuncion .)
    PLUS            reduce using rule 119 (id -> ID llamarfuncion .)
    MINUS           reduce using rule 119 (id -> ID llamarfuncion .)
    GREATERTHAN     reduce using rule 119 (id -> ID llamarfuncion .)
    LESSTHAN        reduce using rule 119 (id -> ID llamarfuncion .)
    GREATEREQUAL    reduce using rule 119 (id -> ID llamarfuncion .)
    LESSEQUAL       reduce using rule 119 (id -> ID llamarfuncion .)
    SHR             reduce using rule 119 (id -> ID llamarfuncion .)
    SHL             reduce using rule 119 (id -> ID llamarfuncion .)
    EQ              reduce using rule 119 (id -> ID llamarfuncion .)
    DIF             reduce using rule 119 (id -> ID llamarfuncion .)
    ANDB            reduce using rule 119 (id -> ID llamarfuncion .)
    XOR             reduce using rule 119 (id -> ID llamarfuncion .)
    ORB             reduce using rule 119 (id -> ID llamarfuncion .)
    AND             reduce using rule 119 (id -> ID llamarfuncion .)
    OR              reduce using rule 119 (id -> ID llamarfuncion .)
    SEMIC           reduce using rule 119 (id -> ID llamarfuncion .)
    RBRACKET        reduce using rule 119 (id -> ID llamarfuncion .)
    COMMA           reduce using rule 119 (id -> ID llamarfuncion .)
    RPAREN          reduce using rule 119 (id -> ID llamarfuncion .)
    ASEQ            reduce using rule 119 (id -> ID llamarfuncion .)
    PLUSEQ          reduce using rule 119 (id -> ID llamarfuncion .)
    MINEQ           reduce using rule 119 (id -> ID llamarfuncion .)
    MULTEQ          reduce using rule 119 (id -> ID llamarfuncion .)
    DIVEQ           reduce using rule 119 (id -> ID llamarfuncion .)


state 75

    (122) llamarfuncion -> LPAREN . llamarfuncion3 RPAREN
    (123) llamarfuncion3 -> . asign llamarfuncion33
    (124) llamarfuncion3 -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (130) empty -> .
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RPAREN          reduce using rule 130 (empty -> .)
    ID              shift and go to state 35

    asign                          shift and go to state 120
    llamarfuncion3                 shift and go to state 121
    id                             shift and go to state 33
    empty                          shift and go to state 122

state 76

    (65) bloque2 -> empty .

    RCURLY          reduce using rule 65 (bloque2 -> empty .)
    IF              reduce using rule 65 (bloque2 -> empty .)
    PRINT           reduce using rule 65 (bloque2 -> empty .)
    FOR             reduce using rule 65 (bloque2 -> empty .)
    RETURN          reduce using rule 65 (bloque2 -> empty .)
    BUILD           reduce using rule 65 (bloque2 -> empty .)
    CONDITION       reduce using rule 65 (bloque2 -> empty .)
    TINT            reduce using rule 65 (bloque2 -> empty .)
    TBOOL           reduce using rule 65 (bloque2 -> empty .)
    TFLOAT          reduce using rule 65 (bloque2 -> empty .)
    ID              reduce using rule 65 (bloque2 -> empty .)


state 77

    (64) bloque2 -> statement bloque2 .

    IF              reduce using rule 64 (bloque2 -> statement bloque2 .)
    PRINT           reduce using rule 64 (bloque2 -> statement bloque2 .)
    FOR             reduce using rule 64 (bloque2 -> statement bloque2 .)
    RETURN          reduce using rule 64 (bloque2 -> statement bloque2 .)
    BUILD           reduce using rule 64 (bloque2 -> statement bloque2 .)
    CONDITION       reduce using rule 64 (bloque2 -> statement bloque2 .)
    TINT            reduce using rule 64 (bloque2 -> statement bloque2 .)
    TBOOL           reduce using rule 64 (bloque2 -> statement bloque2 .)
    TFLOAT          reduce using rule 64 (bloque2 -> statement bloque2 .)
    ID              reduce using rule 64 (bloque2 -> statement bloque2 .)
    RCURLY          reduce using rule 64 (bloque2 -> statement bloque2 .)


state 78

    (35) condition -> IF asign . bloque condition1
    (63) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 106

    bloque                         shift and go to state 123

state 79

    (1) program -> functions MODEL LCURLY vars data model bloque2 . RCURLY

    RCURLY          shift and go to state 124


state 80

    (43) ciclo1 -> asign .

    SEMIC           reduce using rule 43 (ciclo1 -> asign .)


state 81

    (42) ciclo -> FOR ciclo1 . SEMIC ciclo2 SEMIC ciclo3 bloque

    SEMIC           shift and go to state 125


state 82

    (41) ciclo -> FOR ID . IN DOT ID bloque
    (119) id -> ID . llamarfuncion
    (120) id -> ID .
    (122) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN

    IN              shift and go to state 126
    ASEQ            reduce using rule 120 (id -> ID .)
    PLUSEQ          reduce using rule 120 (id -> ID .)
    MINEQ           reduce using rule 120 (id -> ID .)
    MULTEQ          reduce using rule 120 (id -> ID .)
    DIVEQ           reduce using rule 120 (id -> ID .)
    LPAREN          shift and go to state 75

    llamarfuncion                  shift and go to state 74

state 83

    (8) model -> optimize where .

    IF              reduce using rule 8 (model -> optimize where .)
    PRINT           reduce using rule 8 (model -> optimize where .)
    FOR             reduce using rule 8 (model -> optimize where .)
    RETURN          reduce using rule 8 (model -> optimize where .)
    BUILD           reduce using rule 8 (model -> optimize where .)
    CONDITION       reduce using rule 8 (model -> optimize where .)
    TINT            reduce using rule 8 (model -> optimize where .)
    TBOOL           reduce using rule 8 (model -> optimize where .)
    TFLOAT          reduce using rule 8 (model -> optimize where .)
    ID              reduce using rule 8 (model -> optimize where .)
    RCURLY          reduce using rule 8 (model -> optimize where .)


state 84

    (14) where -> WHERE . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 127


state 85

    (12) optimize -> MAX LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

    declaration                    shift and go to state 44
    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 128
    type                           shift and go to state 27
    return                         shift and go to state 42
    condition                      shift and go to state 46
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 86

    (96) expresion9 -> termino . expresion9i
    (97) expresion9i -> . PLUS expresion9
    (98) expresion9i -> . MINUS expresion9
    (99) expresion9i -> . empty
    (130) empty -> .

    PLUS            shift and go to state 130
    MINUS           shift and go to state 131
    GREATERTHAN     reduce using rule 130 (empty -> .)
    LESSTHAN        reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    SHR             reduce using rule 130 (empty -> .)
    SHL             reduce using rule 130 (empty -> .)
    EQ              reduce using rule 130 (empty -> .)
    DIF             reduce using rule 130 (empty -> .)
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresion9i                    shift and go to state 129
    empty                          shift and go to state 132

state 87

    (113) exponencial2 -> NEW .

    ID              reduce using rule 113 (exponencial2 -> NEW .)
    CTEI            reduce using rule 113 (exponencial2 -> NEW .)
    CTEF            reduce using rule 113 (exponencial2 -> NEW .)


state 88

    (112) exponencial2 -> PP .

    ID              reduce using rule 112 (exponencial2 -> PP .)
    CTEI            reduce using rule 112 (exponencial2 -> PP .)
    CTEF            reduce using rule 112 (exponencial2 -> PP .)


state 89

    (109) exponencial -> exponencial2 . valor
    (115) valor -> . id
    (116) valor -> . int
    (117) valor -> . float
    (119) id -> . ID llamarfuncion
    (120) id -> . ID
    (118) int -> . CTEI
    (121) float -> . CTEF

    ID              shift and go to state 35
    CTEI            shift and go to state 138
    CTEF            shift and go to state 136

    int                            shift and go to state 133
    float                          shift and go to state 134
    valor                          shift and go to state 137
    id                             shift and go to state 135

state 90

    (100) termino -> factor . termino2
    (101) termino2 -> . STAR termino
    (102) termino2 -> . SLASH termino
    (103) termino2 -> . MOD termino
    (104) termino2 -> . empty
    (130) empty -> .

    STAR            shift and go to state 139
    SLASH           shift and go to state 141
    MOD             shift and go to state 143
    PLUS            reduce using rule 130 (empty -> .)
    MINUS           reduce using rule 130 (empty -> .)
    GREATERTHAN     reduce using rule 130 (empty -> .)
    LESSTHAN        reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    SHR             reduce using rule 130 (empty -> .)
    SHL             reduce using rule 130 (empty -> .)
    EQ              reduce using rule 130 (empty -> .)
    DIF             reduce using rule 130 (empty -> .)
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    termino2                       shift and go to state 140
    empty                          shift and go to state 142

state 91

    (105) factor -> exponencial . factor2
    (106) factor2 -> . EXP factor
    (107) factor2 -> . empty
    (130) empty -> .

    EXP             shift and go to state 145
    STAR            reduce using rule 130 (empty -> .)
    SLASH           reduce using rule 130 (empty -> .)
    MOD             reduce using rule 130 (empty -> .)
    PLUS            reduce using rule 130 (empty -> .)
    MINUS           reduce using rule 130 (empty -> .)
    GREATERTHAN     reduce using rule 130 (empty -> .)
    LESSTHAN        reduce using rule 130 (empty -> .)
    GREATEREQUAL    reduce using rule 130 (empty -> .)
    LESSEQUAL       reduce using rule 130 (empty -> .)
    SHR             reduce using rule 130 (empty -> .)
    SHL             reduce using rule 130 (empty -> .)
    EQ              reduce using rule 130 (empty -> .)
    DIF             reduce using rule 130 (empty -> .)
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    empty                          shift and go to state 144
    factor2                        shift and go to state 146

state 92

    (70) expresion2 -> expresion3 . expresion2i
    (71) expresion2i -> . AND expresion2
    (72) expresion2i -> . empty
    (130) empty -> .

    AND             shift and go to state 147
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresion2i                    shift and go to state 148
    empty                          shift and go to state 149

state 93

    (67) expresion -> expresion2 . expresioni
    (68) expresioni -> . OR expresion
    (69) expresioni -> . empty
    (130) empty -> .

    OR              shift and go to state 151
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresioni                     shift and go to state 150
    empty                          shift and go to state 152

state 94

    (76) expresion4 -> expresion5 . expresion4i
    (77) expresion4i -> . XOR expresion4
    (78) expresion4i -> . empty
    (130) empty -> .

    XOR             shift and go to state 153
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    empty                          shift and go to state 154
    expresion4i                    shift and go to state 155

state 95

    (73) expresion3 -> expresion4 . expresion3i
    (74) expresion3i -> . ORB expresion3
    (75) expresion3i -> . empty
    (130) empty -> .

    ORB             shift and go to state 157
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresion3i                    shift and go to state 156
    empty                          shift and go to state 158

state 96

    (82) expresion6 -> expresion7 . expresion6i
    (83) expresion6i -> . EQ expresion6
    (84) expresion6i -> . DIF expresion6
    (85) expresion6i -> . empty
    (130) empty -> .

    EQ              shift and go to state 161
    DIF             shift and go to state 160
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    empty                          shift and go to state 162
    expresion6i                    shift and go to state 159

state 97

    (79) expresion5 -> expresion6 . expresion5i
    (80) expresion5i -> . ANDB expresion5
    (81) expresion5i -> . empty
    (130) empty -> .

    ANDB            shift and go to state 164
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresion5i                    shift and go to state 163
    empty                          shift and go to state 165

state 98

    (90) expresion8 -> expresion9 . expresion8i
    (91) expresion8i -> . GREATERTHAN expresion8
    (92) expresion8i -> . LESSTHAN expresion8
    (93) expresion8i -> . GREATEREQUAL expresion8
    (94) expresion8i -> . LESSEQUAL expresion8
    (95) expresion8i -> . empty
    (130) empty -> .

    GREATERTHAN     shift and go to state 169
    LESSTHAN        shift and go to state 168
    GREATEREQUAL    shift and go to state 166
    LESSEQUAL       shift and go to state 170
    SHR             reduce using rule 130 (empty -> .)
    SHL             reduce using rule 130 (empty -> .)
    EQ              reduce using rule 130 (empty -> .)
    DIF             reduce using rule 130 (empty -> .)
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    expresion8i                    shift and go to state 167
    empty                          shift and go to state 171

state 99

    (86) expresion7 -> expresion8 . expresion7i
    (87) expresion7i -> . SHR expresion7
    (88) expresion7i -> . SHL expresion7
    (89) expresion7i -> . empty
    (130) empty -> .

    SHR             shift and go to state 172
    SHL             shift and go to state 174
    EQ              reduce using rule 130 (empty -> .)
    DIF             reduce using rule 130 (empty -> .)
    ANDB            reduce using rule 130 (empty -> .)
    XOR             reduce using rule 130 (empty -> .)
    ORB             reduce using rule 130 (empty -> .)
    AND             reduce using rule 130 (empty -> .)
    OR              reduce using rule 130 (empty -> .)
    SEMIC           reduce using rule 130 (empty -> .)
    RBRACKET        reduce using rule 130 (empty -> .)
    COMMA           reduce using rule 130 (empty -> .)
    RPAREN          reduce using rule 130 (empty -> .)

    empty                          shift and go to state 175
    expresion7i                    shift and go to state 173

state 100

    (108) exponencial -> LPAREN . expresion RPAREN
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 176

state 101

    (15) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 177


state 102

    (111) exponencial2 -> MM .

    ID              reduce using rule 111 (exponencial2 -> MM .)
    CTEI            reduce using rule 111 (exponencial2 -> MM .)
    CTEF            reduce using rule 111 (exponencial2 -> MM .)


state 103

    (114) exponencial2 -> empty .

    ID              reduce using rule 114 (exponencial2 -> empty .)
    CTEI            reduce using rule 114 (exponencial2 -> empty .)
    CTEF            reduce using rule 114 (exponencial2 -> empty .)


state 104

    (110) exponencial2 -> NOT .

    ID              reduce using rule 110 (exponencial2 -> NOT .)
    CTEI            reduce using rule 110 (exponencial2 -> NOT .)
    CTEF            reduce using rule 110 (exponencial2 -> NOT .)


state 105

    (13) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 178


state 106

    (63) bloque -> LCURLY . bloque2 RCURLY
    (64) bloque2 -> . statement bloque2
    (65) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (130) empty -> .
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RCURLY          reduce using rule 130 (empty -> .)
    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

    declaration                    shift and go to state 44
    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 38
    type                           shift and go to state 27
    empty                          shift and go to state 76
    return                         shift and go to state 42
    condition                      shift and go to state 46
    bloque2                        shift and go to state 179
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 107

    (49) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .

    FUNC            reduce using rule 49 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)
    MODEL           reduce using rule 49 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)


state 108

    (54) funcion3 -> LPAREN type . RPAREN

    RPAREN          shift and go to state 180


state 109

    (52) funcion2 -> COMMA type . ID funcion2

    ID              shift and go to state 181


state 110

    (58) declaration -> type dimensions POINTS . ID dec22 SEMIC

    ID              shift and go to state 182


state 111

    (59) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 183


state 112

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TINT            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TBOOL           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TFLOAT          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 113

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 114

    (11) optimize -> MIN LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 84

    where                          shift and go to state 184

state 115

    (38) write -> PRINT asign write2 . SEMIC

    SEMIC           shift and go to state 185


state 116

    (39) write2 -> COMMA . asign write2
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 35

    asign                          shift and go to state 186
    id                             shift and go to state 33

state 117

    (40) write2 -> empty .

    SEMIC           reduce using rule 40 (write2 -> empty .)


state 118

    (27) asign -> id asign_signo expresiones . SEMIC

    SEMIC           shift and go to state 187


state 119

    (28) expresiones -> expresion . COMMA expresiones
    (29) expresiones -> expresion .

    COMMA           shift and go to state 188
    SEMIC           reduce using rule 29 (expresiones -> expresion .)


state 120

    (123) llamarfuncion3 -> asign . llamarfuncion33
    (125) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (126) llamarfuncion33 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 190
    RPAREN          reduce using rule 130 (empty -> .)

    llamarfuncion33                shift and go to state 189
    empty                          shift and go to state 191

state 121

    (122) llamarfuncion -> LPAREN llamarfuncion3 . RPAREN

    RPAREN          shift and go to state 192


state 122

    (124) llamarfuncion3 -> empty .

    RPAREN          reduce using rule 124 (llamarfuncion3 -> empty .)


state 123

    (35) condition -> IF asign bloque . condition1
    (36) condition1 -> . ELSE bloque
    (37) condition1 -> . empty
    (130) empty -> .

    ELSE            shift and go to state 194
    IF              reduce using rule 130 (empty -> .)
    PRINT           reduce using rule 130 (empty -> .)
    FOR             reduce using rule 130 (empty -> .)
    RETURN          reduce using rule 130 (empty -> .)
    BUILD           reduce using rule 130 (empty -> .)
    CONDITION       reduce using rule 130 (empty -> .)
    TINT            reduce using rule 130 (empty -> .)
    TBOOL           reduce using rule 130 (empty -> .)
    TFLOAT          reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    RCURLY          reduce using rule 130 (empty -> .)
    WHERE           reduce using rule 130 (empty -> .)

    empty                          shift and go to state 195
    condition1                     shift and go to state 193

state 124

    (1) program -> functions MODEL LCURLY vars data model bloque2 RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model bloque2 RCURLY .)


state 125

    (42) ciclo -> FOR ciclo1 SEMIC . ciclo2 SEMIC ciclo3 bloque
    (45) ciclo2 -> . asign
    (46) ciclo2 -> .
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    SEMIC           reduce using rule 46 (ciclo2 -> .)
    ID              shift and go to state 35

    asign                          shift and go to state 196
    ciclo2                         shift and go to state 197
    id                             shift and go to state 33

state 126

    (41) ciclo -> FOR ID IN . DOT ID bloque

    DOT             shift and go to state 198


state 127

    (14) where -> WHERE LCURLY . bloque2 RCURLY
    (64) bloque2 -> . statement bloque2
    (65) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (130) empty -> .
    (58) declaration -> . type dimensions POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (42) ciclo -> . FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque
    (66) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (127) type -> . TINT
    (128) type -> . TBOOL
    (129) type -> . TFLOAT
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    RCURLY          reduce using rule 130 (empty -> .)
    IF              shift and go to state 39
    PRINT           shift and go to state 32
    FOR             shift and go to state 43
    RETURN          shift and go to state 30
    BUILD           shift and go to state 52
    CONDITION       shift and go to state 50
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16
    ID              shift and go to state 35

    declaration                    shift and go to state 44
    id                             shift and go to state 33
    ciclo                          shift and go to state 34
    write                          shift and go to state 36
    build                          shift and go to state 37
    statement                      shift and go to state 38
    type                           shift and go to state 27
    empty                          shift and go to state 76
    return                         shift and go to state 42
    condition                      shift and go to state 46
    bloque2                        shift and go to state 199
    asign                          shift and go to state 49
    wherecondition                 shift and go to state 51

state 128

    (12) optimize -> MAX LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 84

    where                          shift and go to state 200

state 129

    (96) expresion9 -> termino expresion9i .

    GREATERTHAN     reduce using rule 96 (expresion9 -> termino expresion9i .)
    LESSTHAN        reduce using rule 96 (expresion9 -> termino expresion9i .)
    GREATEREQUAL    reduce using rule 96 (expresion9 -> termino expresion9i .)
    LESSEQUAL       reduce using rule 96 (expresion9 -> termino expresion9i .)
    SHR             reduce using rule 96 (expresion9 -> termino expresion9i .)
    SHL             reduce using rule 96 (expresion9 -> termino expresion9i .)
    EQ              reduce using rule 96 (expresion9 -> termino expresion9i .)
    DIF             reduce using rule 96 (expresion9 -> termino expresion9i .)
    ANDB            reduce using rule 96 (expresion9 -> termino expresion9i .)
    XOR             reduce using rule 96 (expresion9 -> termino expresion9i .)
    ORB             reduce using rule 96 (expresion9 -> termino expresion9i .)
    AND             reduce using rule 96 (expresion9 -> termino expresion9i .)
    OR              reduce using rule 96 (expresion9 -> termino expresion9i .)
    SEMIC           reduce using rule 96 (expresion9 -> termino expresion9i .)
    RBRACKET        reduce using rule 96 (expresion9 -> termino expresion9i .)
    COMMA           reduce using rule 96 (expresion9 -> termino expresion9i .)
    RPAREN          reduce using rule 96 (expresion9 -> termino expresion9i .)


state 130

    (97) expresion9i -> PLUS . expresion9
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 201
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 131

    (98) expresion9i -> MINUS . expresion9
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 202
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 132

    (99) expresion9i -> empty .

    GREATERTHAN     reduce using rule 99 (expresion9i -> empty .)
    LESSTHAN        reduce using rule 99 (expresion9i -> empty .)
    GREATEREQUAL    reduce using rule 99 (expresion9i -> empty .)
    LESSEQUAL       reduce using rule 99 (expresion9i -> empty .)
    SHR             reduce using rule 99 (expresion9i -> empty .)
    SHL             reduce using rule 99 (expresion9i -> empty .)
    EQ              reduce using rule 99 (expresion9i -> empty .)
    DIF             reduce using rule 99 (expresion9i -> empty .)
    ANDB            reduce using rule 99 (expresion9i -> empty .)
    XOR             reduce using rule 99 (expresion9i -> empty .)
    ORB             reduce using rule 99 (expresion9i -> empty .)
    AND             reduce using rule 99 (expresion9i -> empty .)
    OR              reduce using rule 99 (expresion9i -> empty .)
    SEMIC           reduce using rule 99 (expresion9i -> empty .)
    RBRACKET        reduce using rule 99 (expresion9i -> empty .)
    COMMA           reduce using rule 99 (expresion9i -> empty .)
    RPAREN          reduce using rule 99 (expresion9i -> empty .)


state 133

    (116) valor -> int .

    EXP             reduce using rule 116 (valor -> int .)
    STAR            reduce using rule 116 (valor -> int .)
    SLASH           reduce using rule 116 (valor -> int .)
    MOD             reduce using rule 116 (valor -> int .)
    PLUS            reduce using rule 116 (valor -> int .)
    MINUS           reduce using rule 116 (valor -> int .)
    GREATERTHAN     reduce using rule 116 (valor -> int .)
    LESSTHAN        reduce using rule 116 (valor -> int .)
    GREATEREQUAL    reduce using rule 116 (valor -> int .)
    LESSEQUAL       reduce using rule 116 (valor -> int .)
    SHR             reduce using rule 116 (valor -> int .)
    SHL             reduce using rule 116 (valor -> int .)
    EQ              reduce using rule 116 (valor -> int .)
    DIF             reduce using rule 116 (valor -> int .)
    ANDB            reduce using rule 116 (valor -> int .)
    XOR             reduce using rule 116 (valor -> int .)
    ORB             reduce using rule 116 (valor -> int .)
    AND             reduce using rule 116 (valor -> int .)
    OR              reduce using rule 116 (valor -> int .)
    SEMIC           reduce using rule 116 (valor -> int .)
    RBRACKET        reduce using rule 116 (valor -> int .)
    COMMA           reduce using rule 116 (valor -> int .)
    RPAREN          reduce using rule 116 (valor -> int .)


state 134

    (117) valor -> float .

    EXP             reduce using rule 117 (valor -> float .)
    STAR            reduce using rule 117 (valor -> float .)
    SLASH           reduce using rule 117 (valor -> float .)
    MOD             reduce using rule 117 (valor -> float .)
    PLUS            reduce using rule 117 (valor -> float .)
    MINUS           reduce using rule 117 (valor -> float .)
    GREATERTHAN     reduce using rule 117 (valor -> float .)
    LESSTHAN        reduce using rule 117 (valor -> float .)
    GREATEREQUAL    reduce using rule 117 (valor -> float .)
    LESSEQUAL       reduce using rule 117 (valor -> float .)
    SHR             reduce using rule 117 (valor -> float .)
    SHL             reduce using rule 117 (valor -> float .)
    EQ              reduce using rule 117 (valor -> float .)
    DIF             reduce using rule 117 (valor -> float .)
    ANDB            reduce using rule 117 (valor -> float .)
    XOR             reduce using rule 117 (valor -> float .)
    ORB             reduce using rule 117 (valor -> float .)
    AND             reduce using rule 117 (valor -> float .)
    OR              reduce using rule 117 (valor -> float .)
    SEMIC           reduce using rule 117 (valor -> float .)
    RBRACKET        reduce using rule 117 (valor -> float .)
    COMMA           reduce using rule 117 (valor -> float .)
    RPAREN          reduce using rule 117 (valor -> float .)


state 135

    (115) valor -> id .

    EXP             reduce using rule 115 (valor -> id .)
    STAR            reduce using rule 115 (valor -> id .)
    SLASH           reduce using rule 115 (valor -> id .)
    MOD             reduce using rule 115 (valor -> id .)
    PLUS            reduce using rule 115 (valor -> id .)
    MINUS           reduce using rule 115 (valor -> id .)
    GREATERTHAN     reduce using rule 115 (valor -> id .)
    LESSTHAN        reduce using rule 115 (valor -> id .)
    GREATEREQUAL    reduce using rule 115 (valor -> id .)
    LESSEQUAL       reduce using rule 115 (valor -> id .)
    SHR             reduce using rule 115 (valor -> id .)
    SHL             reduce using rule 115 (valor -> id .)
    EQ              reduce using rule 115 (valor -> id .)
    DIF             reduce using rule 115 (valor -> id .)
    ANDB            reduce using rule 115 (valor -> id .)
    XOR             reduce using rule 115 (valor -> id .)
    ORB             reduce using rule 115 (valor -> id .)
    AND             reduce using rule 115 (valor -> id .)
    OR              reduce using rule 115 (valor -> id .)
    SEMIC           reduce using rule 115 (valor -> id .)
    RBRACKET        reduce using rule 115 (valor -> id .)
    COMMA           reduce using rule 115 (valor -> id .)
    RPAREN          reduce using rule 115 (valor -> id .)


state 136

    (121) float -> CTEF .

    EXP             reduce using rule 121 (float -> CTEF .)
    STAR            reduce using rule 121 (float -> CTEF .)
    SLASH           reduce using rule 121 (float -> CTEF .)
    MOD             reduce using rule 121 (float -> CTEF .)
    PLUS            reduce using rule 121 (float -> CTEF .)
    MINUS           reduce using rule 121 (float -> CTEF .)
    GREATERTHAN     reduce using rule 121 (float -> CTEF .)
    LESSTHAN        reduce using rule 121 (float -> CTEF .)
    GREATEREQUAL    reduce using rule 121 (float -> CTEF .)
    LESSEQUAL       reduce using rule 121 (float -> CTEF .)
    SHR             reduce using rule 121 (float -> CTEF .)
    SHL             reduce using rule 121 (float -> CTEF .)
    EQ              reduce using rule 121 (float -> CTEF .)
    DIF             reduce using rule 121 (float -> CTEF .)
    ANDB            reduce using rule 121 (float -> CTEF .)
    XOR             reduce using rule 121 (float -> CTEF .)
    ORB             reduce using rule 121 (float -> CTEF .)
    AND             reduce using rule 121 (float -> CTEF .)
    OR              reduce using rule 121 (float -> CTEF .)
    SEMIC           reduce using rule 121 (float -> CTEF .)
    RBRACKET        reduce using rule 121 (float -> CTEF .)
    COMMA           reduce using rule 121 (float -> CTEF .)
    RPAREN          reduce using rule 121 (float -> CTEF .)


state 137

    (109) exponencial -> exponencial2 valor .

    EXP             reduce using rule 109 (exponencial -> exponencial2 valor .)
    STAR            reduce using rule 109 (exponencial -> exponencial2 valor .)
    SLASH           reduce using rule 109 (exponencial -> exponencial2 valor .)
    MOD             reduce using rule 109 (exponencial -> exponencial2 valor .)
    PLUS            reduce using rule 109 (exponencial -> exponencial2 valor .)
    MINUS           reduce using rule 109 (exponencial -> exponencial2 valor .)
    GREATERTHAN     reduce using rule 109 (exponencial -> exponencial2 valor .)
    LESSTHAN        reduce using rule 109 (exponencial -> exponencial2 valor .)
    GREATEREQUAL    reduce using rule 109 (exponencial -> exponencial2 valor .)
    LESSEQUAL       reduce using rule 109 (exponencial -> exponencial2 valor .)
    SHR             reduce using rule 109 (exponencial -> exponencial2 valor .)
    SHL             reduce using rule 109 (exponencial -> exponencial2 valor .)
    EQ              reduce using rule 109 (exponencial -> exponencial2 valor .)
    DIF             reduce using rule 109 (exponencial -> exponencial2 valor .)
    ANDB            reduce using rule 109 (exponencial -> exponencial2 valor .)
    XOR             reduce using rule 109 (exponencial -> exponencial2 valor .)
    ORB             reduce using rule 109 (exponencial -> exponencial2 valor .)
    AND             reduce using rule 109 (exponencial -> exponencial2 valor .)
    OR              reduce using rule 109 (exponencial -> exponencial2 valor .)
    SEMIC           reduce using rule 109 (exponencial -> exponencial2 valor .)
    RBRACKET        reduce using rule 109 (exponencial -> exponencial2 valor .)
    COMMA           reduce using rule 109 (exponencial -> exponencial2 valor .)
    RPAREN          reduce using rule 109 (exponencial -> exponencial2 valor .)


state 138

    (118) int -> CTEI .

    EXP             reduce using rule 118 (int -> CTEI .)
    STAR            reduce using rule 118 (int -> CTEI .)
    SLASH           reduce using rule 118 (int -> CTEI .)
    MOD             reduce using rule 118 (int -> CTEI .)
    PLUS            reduce using rule 118 (int -> CTEI .)
    MINUS           reduce using rule 118 (int -> CTEI .)
    GREATERTHAN     reduce using rule 118 (int -> CTEI .)
    LESSTHAN        reduce using rule 118 (int -> CTEI .)
    GREATEREQUAL    reduce using rule 118 (int -> CTEI .)
    LESSEQUAL       reduce using rule 118 (int -> CTEI .)
    SHR             reduce using rule 118 (int -> CTEI .)
    SHL             reduce using rule 118 (int -> CTEI .)
    EQ              reduce using rule 118 (int -> CTEI .)
    DIF             reduce using rule 118 (int -> CTEI .)
    ANDB            reduce using rule 118 (int -> CTEI .)
    XOR             reduce using rule 118 (int -> CTEI .)
    ORB             reduce using rule 118 (int -> CTEI .)
    AND             reduce using rule 118 (int -> CTEI .)
    OR              reduce using rule 118 (int -> CTEI .)
    SEMIC           reduce using rule 118 (int -> CTEI .)
    RBRACKET        reduce using rule 118 (int -> CTEI .)
    COMMA           reduce using rule 118 (int -> CTEI .)
    RPAREN          reduce using rule 118 (int -> CTEI .)


state 139

    (101) termino2 -> STAR . termino
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    exponencial2                   shift and go to state 89
    termino                        shift and go to state 203
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 140

    (100) termino -> factor termino2 .

    PLUS            reduce using rule 100 (termino -> factor termino2 .)
    MINUS           reduce using rule 100 (termino -> factor termino2 .)
    GREATERTHAN     reduce using rule 100 (termino -> factor termino2 .)
    LESSTHAN        reduce using rule 100 (termino -> factor termino2 .)
    GREATEREQUAL    reduce using rule 100 (termino -> factor termino2 .)
    LESSEQUAL       reduce using rule 100 (termino -> factor termino2 .)
    SHR             reduce using rule 100 (termino -> factor termino2 .)
    SHL             reduce using rule 100 (termino -> factor termino2 .)
    EQ              reduce using rule 100 (termino -> factor termino2 .)
    DIF             reduce using rule 100 (termino -> factor termino2 .)
    ANDB            reduce using rule 100 (termino -> factor termino2 .)
    XOR             reduce using rule 100 (termino -> factor termino2 .)
    ORB             reduce using rule 100 (termino -> factor termino2 .)
    AND             reduce using rule 100 (termino -> factor termino2 .)
    OR              reduce using rule 100 (termino -> factor termino2 .)
    SEMIC           reduce using rule 100 (termino -> factor termino2 .)
    RBRACKET        reduce using rule 100 (termino -> factor termino2 .)
    COMMA           reduce using rule 100 (termino -> factor termino2 .)
    RPAREN          reduce using rule 100 (termino -> factor termino2 .)


state 141

    (102) termino2 -> SLASH . termino
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    exponencial2                   shift and go to state 89
    termino                        shift and go to state 204
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 142

    (104) termino2 -> empty .

    PLUS            reduce using rule 104 (termino2 -> empty .)
    MINUS           reduce using rule 104 (termino2 -> empty .)
    GREATERTHAN     reduce using rule 104 (termino2 -> empty .)
    LESSTHAN        reduce using rule 104 (termino2 -> empty .)
    GREATEREQUAL    reduce using rule 104 (termino2 -> empty .)
    LESSEQUAL       reduce using rule 104 (termino2 -> empty .)
    SHR             reduce using rule 104 (termino2 -> empty .)
    SHL             reduce using rule 104 (termino2 -> empty .)
    EQ              reduce using rule 104 (termino2 -> empty .)
    DIF             reduce using rule 104 (termino2 -> empty .)
    ANDB            reduce using rule 104 (termino2 -> empty .)
    XOR             reduce using rule 104 (termino2 -> empty .)
    ORB             reduce using rule 104 (termino2 -> empty .)
    AND             reduce using rule 104 (termino2 -> empty .)
    OR              reduce using rule 104 (termino2 -> empty .)
    SEMIC           reduce using rule 104 (termino2 -> empty .)
    RBRACKET        reduce using rule 104 (termino2 -> empty .)
    COMMA           reduce using rule 104 (termino2 -> empty .)
    RPAREN          reduce using rule 104 (termino2 -> empty .)


state 143

    (103) termino2 -> MOD . termino
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    exponencial2                   shift and go to state 89
    termino                        shift and go to state 205
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 144

    (107) factor2 -> empty .

    STAR            reduce using rule 107 (factor2 -> empty .)
    SLASH           reduce using rule 107 (factor2 -> empty .)
    MOD             reduce using rule 107 (factor2 -> empty .)
    PLUS            reduce using rule 107 (factor2 -> empty .)
    MINUS           reduce using rule 107 (factor2 -> empty .)
    GREATERTHAN     reduce using rule 107 (factor2 -> empty .)
    LESSTHAN        reduce using rule 107 (factor2 -> empty .)
    GREATEREQUAL    reduce using rule 107 (factor2 -> empty .)
    LESSEQUAL       reduce using rule 107 (factor2 -> empty .)
    SHR             reduce using rule 107 (factor2 -> empty .)
    SHL             reduce using rule 107 (factor2 -> empty .)
    EQ              reduce using rule 107 (factor2 -> empty .)
    DIF             reduce using rule 107 (factor2 -> empty .)
    ANDB            reduce using rule 107 (factor2 -> empty .)
    XOR             reduce using rule 107 (factor2 -> empty .)
    ORB             reduce using rule 107 (factor2 -> empty .)
    AND             reduce using rule 107 (factor2 -> empty .)
    OR              reduce using rule 107 (factor2 -> empty .)
    SEMIC           reduce using rule 107 (factor2 -> empty .)
    RBRACKET        reduce using rule 107 (factor2 -> empty .)
    COMMA           reduce using rule 107 (factor2 -> empty .)
    RPAREN          reduce using rule 107 (factor2 -> empty .)


state 145

    (106) factor2 -> EXP . factor
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    factor                         shift and go to state 206
    exponencial2                   shift and go to state 89
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 146

    (105) factor -> exponencial factor2 .

    STAR            reduce using rule 105 (factor -> exponencial factor2 .)
    SLASH           reduce using rule 105 (factor -> exponencial factor2 .)
    MOD             reduce using rule 105 (factor -> exponencial factor2 .)
    PLUS            reduce using rule 105 (factor -> exponencial factor2 .)
    MINUS           reduce using rule 105 (factor -> exponencial factor2 .)
    GREATERTHAN     reduce using rule 105 (factor -> exponencial factor2 .)
    LESSTHAN        reduce using rule 105 (factor -> exponencial factor2 .)
    GREATEREQUAL    reduce using rule 105 (factor -> exponencial factor2 .)
    LESSEQUAL       reduce using rule 105 (factor -> exponencial factor2 .)
    SHR             reduce using rule 105 (factor -> exponencial factor2 .)
    SHL             reduce using rule 105 (factor -> exponencial factor2 .)
    EQ              reduce using rule 105 (factor -> exponencial factor2 .)
    DIF             reduce using rule 105 (factor -> exponencial factor2 .)
    ANDB            reduce using rule 105 (factor -> exponencial factor2 .)
    XOR             reduce using rule 105 (factor -> exponencial factor2 .)
    ORB             reduce using rule 105 (factor -> exponencial factor2 .)
    AND             reduce using rule 105 (factor -> exponencial factor2 .)
    OR              reduce using rule 105 (factor -> exponencial factor2 .)
    SEMIC           reduce using rule 105 (factor -> exponencial factor2 .)
    RBRACKET        reduce using rule 105 (factor -> exponencial factor2 .)
    COMMA           reduce using rule 105 (factor -> exponencial factor2 .)
    RPAREN          reduce using rule 105 (factor -> exponencial factor2 .)


state 147

    (71) expresion2i -> AND . expresion2
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 207
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99

state 148

    (70) expresion2 -> expresion3 expresion2i .

    OR              reduce using rule 70 (expresion2 -> expresion3 expresion2i .)
    COMMA           reduce using rule 70 (expresion2 -> expresion3 expresion2i .)
    SEMIC           reduce using rule 70 (expresion2 -> expresion3 expresion2i .)
    RBRACKET        reduce using rule 70 (expresion2 -> expresion3 expresion2i .)
    RPAREN          reduce using rule 70 (expresion2 -> expresion3 expresion2i .)


state 149

    (72) expresion2i -> empty .

    OR              reduce using rule 72 (expresion2i -> empty .)
    SEMIC           reduce using rule 72 (expresion2i -> empty .)
    RBRACKET        reduce using rule 72 (expresion2i -> empty .)
    COMMA           reduce using rule 72 (expresion2i -> empty .)
    RPAREN          reduce using rule 72 (expresion2i -> empty .)


state 150

    (67) expresion -> expresion2 expresioni .

    SEMIC           reduce using rule 67 (expresion -> expresion2 expresioni .)
    COMMA           reduce using rule 67 (expresion -> expresion2 expresioni .)
    RBRACKET        reduce using rule 67 (expresion -> expresion2 expresioni .)
    RPAREN          reduce using rule 67 (expresion -> expresion2 expresioni .)


state 151

    (68) expresioni -> OR . expresion
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 208

state 152

    (69) expresioni -> empty .

    SEMIC           reduce using rule 69 (expresioni -> empty .)
    RBRACKET        reduce using rule 69 (expresioni -> empty .)
    COMMA           reduce using rule 69 (expresioni -> empty .)
    RPAREN          reduce using rule 69 (expresioni -> empty .)


state 153

    (77) expresion4i -> XOR . expresion4
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 209
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    expresion9                     shift and go to state 98
    empty                          shift and go to state 103
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91

state 154

    (78) expresion4i -> empty .

    ORB             reduce using rule 78 (expresion4i -> empty .)
    AND             reduce using rule 78 (expresion4i -> empty .)
    OR              reduce using rule 78 (expresion4i -> empty .)
    SEMIC           reduce using rule 78 (expresion4i -> empty .)
    RBRACKET        reduce using rule 78 (expresion4i -> empty .)
    COMMA           reduce using rule 78 (expresion4i -> empty .)
    RPAREN          reduce using rule 78 (expresion4i -> empty .)


state 155

    (76) expresion4 -> expresion5 expresion4i .

    ORB             reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    AND             reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    OR              reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    SEMIC           reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    RBRACKET        reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    COMMA           reduce using rule 76 (expresion4 -> expresion5 expresion4i .)
    RPAREN          reduce using rule 76 (expresion4 -> expresion5 expresion4i .)


state 156

    (73) expresion3 -> expresion4 expresion3i .

    AND             reduce using rule 73 (expresion3 -> expresion4 expresion3i .)
    OR              reduce using rule 73 (expresion3 -> expresion4 expresion3i .)
    SEMIC           reduce using rule 73 (expresion3 -> expresion4 expresion3i .)
    RBRACKET        reduce using rule 73 (expresion3 -> expresion4 expresion3i .)
    COMMA           reduce using rule 73 (expresion3 -> expresion4 expresion3i .)
    RPAREN          reduce using rule 73 (expresion3 -> expresion4 expresion3i .)


state 157

    (74) expresion3i -> ORB . expresion3
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    exponencial2                   shift and go to state 89
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 210
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    factor                         shift and go to state 90

state 158

    (75) expresion3i -> empty .

    AND             reduce using rule 75 (expresion3i -> empty .)
    OR              reduce using rule 75 (expresion3i -> empty .)
    SEMIC           reduce using rule 75 (expresion3i -> empty .)
    RBRACKET        reduce using rule 75 (expresion3i -> empty .)
    COMMA           reduce using rule 75 (expresion3i -> empty .)
    RPAREN          reduce using rule 75 (expresion3i -> empty .)


state 159

    (82) expresion6 -> expresion7 expresion6i .

    ANDB            reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    XOR             reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    ORB             reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    AND             reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    OR              reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    SEMIC           reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    RBRACKET        reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    COMMA           reduce using rule 82 (expresion6 -> expresion7 expresion6i .)
    RPAREN          reduce using rule 82 (expresion6 -> expresion7 expresion6i .)


state 160

    (84) expresion6i -> DIF . expresion6
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion6                     shift and go to state 211
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    expresion7                     shift and go to state 96
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 161

    (83) expresion6i -> EQ . expresion6
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion6                     shift and go to state 212
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    expresion7                     shift and go to state 96
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 162

    (85) expresion6i -> empty .

    ANDB            reduce using rule 85 (expresion6i -> empty .)
    XOR             reduce using rule 85 (expresion6i -> empty .)
    ORB             reduce using rule 85 (expresion6i -> empty .)
    AND             reduce using rule 85 (expresion6i -> empty .)
    OR              reduce using rule 85 (expresion6i -> empty .)
    SEMIC           reduce using rule 85 (expresion6i -> empty .)
    RBRACKET        reduce using rule 85 (expresion6i -> empty .)
    COMMA           reduce using rule 85 (expresion6i -> empty .)
    RPAREN          reduce using rule 85 (expresion6i -> empty .)


state 163

    (79) expresion5 -> expresion6 expresion5i .

    XOR             reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    ORB             reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    AND             reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    OR              reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    SEMIC           reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    RBRACKET        reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    COMMA           reduce using rule 79 (expresion5 -> expresion6 expresion5i .)
    RPAREN          reduce using rule 79 (expresion5 -> expresion6 expresion5i .)


state 164

    (80) expresion5i -> ANDB . expresion5
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion5                     shift and go to state 213
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    expresion9                     shift and go to state 98
    empty                          shift and go to state 103
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91

state 165

    (81) expresion5i -> empty .

    XOR             reduce using rule 81 (expresion5i -> empty .)
    ORB             reduce using rule 81 (expresion5i -> empty .)
    AND             reduce using rule 81 (expresion5i -> empty .)
    OR              reduce using rule 81 (expresion5i -> empty .)
    SEMIC           reduce using rule 81 (expresion5i -> empty .)
    RBRACKET        reduce using rule 81 (expresion5i -> empty .)
    COMMA           reduce using rule 81 (expresion5i -> empty .)
    RPAREN          reduce using rule 81 (expresion5i -> empty .)


state 166

    (93) expresion8i -> GREATEREQUAL . expresion8
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 214
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 167

    (90) expresion8 -> expresion9 expresion8i .

    SHR             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    SHL             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    EQ              reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    DIF             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    ANDB            reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    XOR             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    ORB             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    AND             reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    OR              reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    SEMIC           reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    RBRACKET        reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    COMMA           reduce using rule 90 (expresion8 -> expresion9 expresion8i .)
    RPAREN          reduce using rule 90 (expresion8 -> expresion9 expresion8i .)


state 168

    (92) expresion8i -> LESSTHAN . expresion8
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 215
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 169

    (91) expresion8i -> GREATERTHAN . expresion8
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 216
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 170

    (94) expresion8i -> LESSEQUAL . expresion8
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 217
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 171

    (95) expresion8i -> empty .

    SHR             reduce using rule 95 (expresion8i -> empty .)
    SHL             reduce using rule 95 (expresion8i -> empty .)
    EQ              reduce using rule 95 (expresion8i -> empty .)
    DIF             reduce using rule 95 (expresion8i -> empty .)
    ANDB            reduce using rule 95 (expresion8i -> empty .)
    XOR             reduce using rule 95 (expresion8i -> empty .)
    ORB             reduce using rule 95 (expresion8i -> empty .)
    AND             reduce using rule 95 (expresion8i -> empty .)
    OR              reduce using rule 95 (expresion8i -> empty .)
    SEMIC           reduce using rule 95 (expresion8i -> empty .)
    RBRACKET        reduce using rule 95 (expresion8i -> empty .)
    COMMA           reduce using rule 95 (expresion8i -> empty .)
    RPAREN          reduce using rule 95 (expresion8i -> empty .)


state 172

    (87) expresion7i -> SHR . expresion7
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion7                     shift and go to state 218
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 173

    (86) expresion7 -> expresion8 expresion7i .

    EQ              reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    DIF             reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    ANDB            reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    XOR             reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    ORB             reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    AND             reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    OR              reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    SEMIC           reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    RBRACKET        reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    COMMA           reduce using rule 86 (expresion7 -> expresion8 expresion7i .)
    RPAREN          reduce using rule 86 (expresion7 -> expresion8 expresion7i .)


state 174

    (88) expresion7i -> SHL . expresion7
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    expresion7                     shift and go to state 219
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    exponencial2                   shift and go to state 89
    termino                        shift and go to state 86
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103

state 175

    (89) expresion7i -> empty .

    EQ              reduce using rule 89 (expresion7i -> empty .)
    DIF             reduce using rule 89 (expresion7i -> empty .)
    ANDB            reduce using rule 89 (expresion7i -> empty .)
    XOR             reduce using rule 89 (expresion7i -> empty .)
    ORB             reduce using rule 89 (expresion7i -> empty .)
    AND             reduce using rule 89 (expresion7i -> empty .)
    OR              reduce using rule 89 (expresion7i -> empty .)
    SEMIC           reduce using rule 89 (expresion7i -> empty .)
    RBRACKET        reduce using rule 89 (expresion7i -> empty .)
    COMMA           reduce using rule 89 (expresion7i -> empty .)
    RPAREN          reduce using rule 89 (expresion7i -> empty .)


state 176

    (108) exponencial -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 220


state 177

    (15) wherecondition -> CONDITION expresion SEMIC .

    IF              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TINT            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TBOOL           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TFLOAT          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    WHERE           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)


state 178

    (13) build -> BUILD expresion SEMIC .

    IF              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TINT            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TBOOL           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TFLOAT          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    WHERE           reduce using rule 13 (build -> BUILD expresion SEMIC .)


state 179

    (63) bloque -> LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 221


state 180

    (54) funcion3 -> LPAREN type RPAREN .

    LCURLY          reduce using rule 54 (funcion3 -> LPAREN type RPAREN .)


state 181

    (52) funcion2 -> COMMA type ID . funcion2
    (52) funcion2 -> . COMMA type ID funcion2
    (53) funcion2 -> .

    COMMA           shift and go to state 55
    RPAREN          reduce using rule 53 (funcion2 -> .)

    funcion2                       shift and go to state 222

state 182

    (58) declaration -> type dimensions POINTS ID . dec22 SEMIC
    (61) dec22 -> . COMMA ID dec22
    (62) dec22 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 223
    SEMIC           reduce using rule 130 (empty -> .)

    dec22                          shift and go to state 224
    empty                          shift and go to state 225

state 183

    (59) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (59) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (60) dimensions -> . empty
    (130) empty -> .

    LBRACKET        shift and go to state 60
    POINTS          reduce using rule 130 (empty -> .)

    dimensions                     shift and go to state 226
    empty                          shift and go to state 61

state 184

    (11) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 227


state 185

    (38) write -> PRINT asign write2 SEMIC .

    IF              reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    PRINT           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    FOR             reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    RETURN          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    BUILD           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    CONDITION       reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TINT            reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TBOOL           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TFLOAT          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    ID              reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    RCURLY          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    WHERE           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)


state 186

    (39) write2 -> COMMA asign . write2
    (39) write2 -> . COMMA asign write2
    (40) write2 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 116
    SEMIC           reduce using rule 130 (empty -> .)

    write2                         shift and go to state 228
    empty                          shift and go to state 117

state 187

    (27) asign -> id asign_signo expresiones SEMIC .

    SEMIC           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    WHERE           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    COMMA           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RPAREN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    IF              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    PRINT           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    FOR             reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RETURN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    BUILD           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    CONDITION       reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TINT            reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TBOOL           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TFLOAT          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    ID              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    LCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)


state 188

    (28) expresiones -> expresion COMMA . expresiones
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (67) expresion -> . expresion2 expresioni
    (70) expresion2 -> . expresion3 expresion2i
    (73) expresion3 -> . expresion4 expresion3i
    (76) expresion4 -> . expresion5 expresion4i
    (79) expresion5 -> . expresion6 expresion5i
    (82) expresion6 -> . expresion7 expresion6i
    (86) expresion7 -> . expresion8 expresion7i
    (90) expresion8 -> . expresion9 expresion8i
    (96) expresion9 -> . termino expresion9i
    (100) termino -> . factor termino2
    (105) factor -> . exponencial factor2
    (108) exponencial -> . LPAREN expresion RPAREN
    (109) exponencial -> . exponencial2 valor
    (110) exponencial2 -> . NOT
    (111) exponencial2 -> . MM
    (112) exponencial2 -> . PP
    (113) exponencial2 -> . NEW
    (114) exponencial2 -> . empty
    (130) empty -> .

    LPAREN          shift and go to state 100
    NOT             shift and go to state 104
    MM              shift and go to state 102
    PP              shift and go to state 88
    NEW             shift and go to state 87
    ID              reduce using rule 130 (empty -> .)
    CTEI            reduce using rule 130 (empty -> .)
    CTEF            reduce using rule 130 (empty -> .)

    termino                        shift and go to state 86
    expresiones                    shift and go to state 229
    exponencial2                   shift and go to state 89
    factor                         shift and go to state 90
    exponencial                    shift and go to state 91
    empty                          shift and go to state 103
    expresion3                     shift and go to state 92
    expresion2                     shift and go to state 93
    expresion5                     shift and go to state 94
    expresion4                     shift and go to state 95
    expresion7                     shift and go to state 96
    expresion6                     shift and go to state 97
    expresion9                     shift and go to state 98
    expresion8                     shift and go to state 99
    expresion                      shift and go to state 119

state 189

    (123) llamarfuncion3 -> asign llamarfuncion33 .

    RPAREN          reduce using rule 123 (llamarfuncion3 -> asign llamarfuncion33 .)


state 190

    (125) llamarfuncion33 -> COMMA . asign llamarfuncion33
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    ID              shift and go to state 35

    asign                          shift and go to state 230
    id                             shift and go to state 33

state 191

    (126) llamarfuncion33 -> empty .

    RPAREN          reduce using rule 126 (llamarfuncion33 -> empty .)


state 192

    (122) llamarfuncion -> LPAREN llamarfuncion3 RPAREN .

    ASEQ            reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUSEQ          reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINEQ           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MULTEQ          reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIVEQ           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EXP             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    STAR            reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SLASH           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MOD             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUS            reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINUS           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATERTHAN     reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSTHAN        reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATEREQUAL    reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSEQUAL       reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHR             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHL             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EQ              reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIF             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ANDB            reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    XOR             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ORB             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    AND             reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    OR              reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SEMIC           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RBRACKET        reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    COMMA           reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RPAREN          reduce using rule 122 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)


state 193

    (35) condition -> IF asign bloque condition1 .

    IF              reduce using rule 35 (condition -> IF asign bloque condition1 .)
    PRINT           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    FOR             reduce using rule 35 (condition -> IF asign bloque condition1 .)
    RETURN          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    BUILD           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    CONDITION       reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TINT            reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TBOOL           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TFLOAT          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    ID              reduce using rule 35 (condition -> IF asign bloque condition1 .)
    RCURLY          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    WHERE           reduce using rule 35 (condition -> IF asign bloque condition1 .)


state 194

    (36) condition1 -> ELSE . bloque
    (63) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 106

    bloque                         shift and go to state 231

state 195

    (37) condition1 -> empty .

    IF              reduce using rule 37 (condition1 -> empty .)
    PRINT           reduce using rule 37 (condition1 -> empty .)
    FOR             reduce using rule 37 (condition1 -> empty .)
    RETURN          reduce using rule 37 (condition1 -> empty .)
    BUILD           reduce using rule 37 (condition1 -> empty .)
    CONDITION       reduce using rule 37 (condition1 -> empty .)
    TINT            reduce using rule 37 (condition1 -> empty .)
    TBOOL           reduce using rule 37 (condition1 -> empty .)
    TFLOAT          reduce using rule 37 (condition1 -> empty .)
    ID              reduce using rule 37 (condition1 -> empty .)
    RCURLY          reduce using rule 37 (condition1 -> empty .)
    WHERE           reduce using rule 37 (condition1 -> empty .)


state 196

    (45) ciclo2 -> asign .

    SEMIC           reduce using rule 45 (ciclo2 -> asign .)


state 197

    (42) ciclo -> FOR ciclo1 SEMIC ciclo2 . SEMIC ciclo3 bloque

    SEMIC           shift and go to state 232


state 198

    (41) ciclo -> FOR ID IN DOT . ID bloque

    ID              shift and go to state 233


state 199

    (14) where -> WHERE LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 234


state 200

    (12) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 235


state 201

    (97) expresion9i -> PLUS expresion9 .

    GREATERTHAN     reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    LESSTHAN        reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    GREATEREQUAL    reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    LESSEQUAL       reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    SHR             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    SHL             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    EQ              reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    DIF             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    ANDB            reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    XOR             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    ORB             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    AND             reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    OR              reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    SEMIC           reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    RBRACKET        reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    COMMA           reduce using rule 97 (expresion9i -> PLUS expresion9 .)
    RPAREN          reduce using rule 97 (expresion9i -> PLUS expresion9 .)


state 202

    (98) expresion9i -> MINUS expresion9 .

    GREATERTHAN     reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    LESSTHAN        reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    GREATEREQUAL    reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    LESSEQUAL       reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    SHR             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    SHL             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    EQ              reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    DIF             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    ANDB            reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    XOR             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    ORB             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    AND             reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    OR              reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    SEMIC           reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    RBRACKET        reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    COMMA           reduce using rule 98 (expresion9i -> MINUS expresion9 .)
    RPAREN          reduce using rule 98 (expresion9i -> MINUS expresion9 .)


state 203

    (101) termino2 -> STAR termino .

    PLUS            reduce using rule 101 (termino2 -> STAR termino .)
    MINUS           reduce using rule 101 (termino2 -> STAR termino .)
    GREATERTHAN     reduce using rule 101 (termino2 -> STAR termino .)
    LESSTHAN        reduce using rule 101 (termino2 -> STAR termino .)
    GREATEREQUAL    reduce using rule 101 (termino2 -> STAR termino .)
    LESSEQUAL       reduce using rule 101 (termino2 -> STAR termino .)
    SHR             reduce using rule 101 (termino2 -> STAR termino .)
    SHL             reduce using rule 101 (termino2 -> STAR termino .)
    EQ              reduce using rule 101 (termino2 -> STAR termino .)
    DIF             reduce using rule 101 (termino2 -> STAR termino .)
    ANDB            reduce using rule 101 (termino2 -> STAR termino .)
    XOR             reduce using rule 101 (termino2 -> STAR termino .)
    ORB             reduce using rule 101 (termino2 -> STAR termino .)
    AND             reduce using rule 101 (termino2 -> STAR termino .)
    OR              reduce using rule 101 (termino2 -> STAR termino .)
    SEMIC           reduce using rule 101 (termino2 -> STAR termino .)
    RBRACKET        reduce using rule 101 (termino2 -> STAR termino .)
    COMMA           reduce using rule 101 (termino2 -> STAR termino .)
    RPAREN          reduce using rule 101 (termino2 -> STAR termino .)


state 204

    (102) termino2 -> SLASH termino .

    PLUS            reduce using rule 102 (termino2 -> SLASH termino .)
    MINUS           reduce using rule 102 (termino2 -> SLASH termino .)
    GREATERTHAN     reduce using rule 102 (termino2 -> SLASH termino .)
    LESSTHAN        reduce using rule 102 (termino2 -> SLASH termino .)
    GREATEREQUAL    reduce using rule 102 (termino2 -> SLASH termino .)
    LESSEQUAL       reduce using rule 102 (termino2 -> SLASH termino .)
    SHR             reduce using rule 102 (termino2 -> SLASH termino .)
    SHL             reduce using rule 102 (termino2 -> SLASH termino .)
    EQ              reduce using rule 102 (termino2 -> SLASH termino .)
    DIF             reduce using rule 102 (termino2 -> SLASH termino .)
    ANDB            reduce using rule 102 (termino2 -> SLASH termino .)
    XOR             reduce using rule 102 (termino2 -> SLASH termino .)
    ORB             reduce using rule 102 (termino2 -> SLASH termino .)
    AND             reduce using rule 102 (termino2 -> SLASH termino .)
    OR              reduce using rule 102 (termino2 -> SLASH termino .)
    SEMIC           reduce using rule 102 (termino2 -> SLASH termino .)
    RBRACKET        reduce using rule 102 (termino2 -> SLASH termino .)
    COMMA           reduce using rule 102 (termino2 -> SLASH termino .)
    RPAREN          reduce using rule 102 (termino2 -> SLASH termino .)


state 205

    (103) termino2 -> MOD termino .

    PLUS            reduce using rule 103 (termino2 -> MOD termino .)
    MINUS           reduce using rule 103 (termino2 -> MOD termino .)
    GREATERTHAN     reduce using rule 103 (termino2 -> MOD termino .)
    LESSTHAN        reduce using rule 103 (termino2 -> MOD termino .)
    GREATEREQUAL    reduce using rule 103 (termino2 -> MOD termino .)
    LESSEQUAL       reduce using rule 103 (termino2 -> MOD termino .)
    SHR             reduce using rule 103 (termino2 -> MOD termino .)
    SHL             reduce using rule 103 (termino2 -> MOD termino .)
    EQ              reduce using rule 103 (termino2 -> MOD termino .)
    DIF             reduce using rule 103 (termino2 -> MOD termino .)
    ANDB            reduce using rule 103 (termino2 -> MOD termino .)
    XOR             reduce using rule 103 (termino2 -> MOD termino .)
    ORB             reduce using rule 103 (termino2 -> MOD termino .)
    AND             reduce using rule 103 (termino2 -> MOD termino .)
    OR              reduce using rule 103 (termino2 -> MOD termino .)
    SEMIC           reduce using rule 103 (termino2 -> MOD termino .)
    RBRACKET        reduce using rule 103 (termino2 -> MOD termino .)
    COMMA           reduce using rule 103 (termino2 -> MOD termino .)
    RPAREN          reduce using rule 103 (termino2 -> MOD termino .)


state 206

    (106) factor2 -> EXP factor .

    STAR            reduce using rule 106 (factor2 -> EXP factor .)
    SLASH           reduce using rule 106 (factor2 -> EXP factor .)
    MOD             reduce using rule 106 (factor2 -> EXP factor .)
    PLUS            reduce using rule 106 (factor2 -> EXP factor .)
    MINUS           reduce using rule 106 (factor2 -> EXP factor .)
    GREATERTHAN     reduce using rule 106 (factor2 -> EXP factor .)
    LESSTHAN        reduce using rule 106 (factor2 -> EXP factor .)
    GREATEREQUAL    reduce using rule 106 (factor2 -> EXP factor .)
    LESSEQUAL       reduce using rule 106 (factor2 -> EXP factor .)
    SHR             reduce using rule 106 (factor2 -> EXP factor .)
    SHL             reduce using rule 106 (factor2 -> EXP factor .)
    EQ              reduce using rule 106 (factor2 -> EXP factor .)
    DIF             reduce using rule 106 (factor2 -> EXP factor .)
    ANDB            reduce using rule 106 (factor2 -> EXP factor .)
    XOR             reduce using rule 106 (factor2 -> EXP factor .)
    ORB             reduce using rule 106 (factor2 -> EXP factor .)
    AND             reduce using rule 106 (factor2 -> EXP factor .)
    OR              reduce using rule 106 (factor2 -> EXP factor .)
    SEMIC           reduce using rule 106 (factor2 -> EXP factor .)
    RBRACKET        reduce using rule 106 (factor2 -> EXP factor .)
    COMMA           reduce using rule 106 (factor2 -> EXP factor .)
    RPAREN          reduce using rule 106 (factor2 -> EXP factor .)


state 207

    (71) expresion2i -> AND expresion2 .

    OR              reduce using rule 71 (expresion2i -> AND expresion2 .)
    SEMIC           reduce using rule 71 (expresion2i -> AND expresion2 .)
    RBRACKET        reduce using rule 71 (expresion2i -> AND expresion2 .)
    COMMA           reduce using rule 71 (expresion2i -> AND expresion2 .)
    RPAREN          reduce using rule 71 (expresion2i -> AND expresion2 .)


state 208

    (68) expresioni -> OR expresion .

    SEMIC           reduce using rule 68 (expresioni -> OR expresion .)
    RBRACKET        reduce using rule 68 (expresioni -> OR expresion .)
    COMMA           reduce using rule 68 (expresioni -> OR expresion .)
    RPAREN          reduce using rule 68 (expresioni -> OR expresion .)


state 209

    (77) expresion4i -> XOR expresion4 .

    ORB             reduce using rule 77 (expresion4i -> XOR expresion4 .)
    AND             reduce using rule 77 (expresion4i -> XOR expresion4 .)
    OR              reduce using rule 77 (expresion4i -> XOR expresion4 .)
    SEMIC           reduce using rule 77 (expresion4i -> XOR expresion4 .)
    RBRACKET        reduce using rule 77 (expresion4i -> XOR expresion4 .)
    COMMA           reduce using rule 77 (expresion4i -> XOR expresion4 .)
    RPAREN          reduce using rule 77 (expresion4i -> XOR expresion4 .)


state 210

    (74) expresion3i -> ORB expresion3 .

    AND             reduce using rule 74 (expresion3i -> ORB expresion3 .)
    OR              reduce using rule 74 (expresion3i -> ORB expresion3 .)
    SEMIC           reduce using rule 74 (expresion3i -> ORB expresion3 .)
    RBRACKET        reduce using rule 74 (expresion3i -> ORB expresion3 .)
    COMMA           reduce using rule 74 (expresion3i -> ORB expresion3 .)
    RPAREN          reduce using rule 74 (expresion3i -> ORB expresion3 .)


state 211

    (84) expresion6i -> DIF expresion6 .

    ANDB            reduce using rule 84 (expresion6i -> DIF expresion6 .)
    XOR             reduce using rule 84 (expresion6i -> DIF expresion6 .)
    ORB             reduce using rule 84 (expresion6i -> DIF expresion6 .)
    AND             reduce using rule 84 (expresion6i -> DIF expresion6 .)
    OR              reduce using rule 84 (expresion6i -> DIF expresion6 .)
    SEMIC           reduce using rule 84 (expresion6i -> DIF expresion6 .)
    RBRACKET        reduce using rule 84 (expresion6i -> DIF expresion6 .)
    COMMA           reduce using rule 84 (expresion6i -> DIF expresion6 .)
    RPAREN          reduce using rule 84 (expresion6i -> DIF expresion6 .)


state 212

    (83) expresion6i -> EQ expresion6 .

    ANDB            reduce using rule 83 (expresion6i -> EQ expresion6 .)
    XOR             reduce using rule 83 (expresion6i -> EQ expresion6 .)
    ORB             reduce using rule 83 (expresion6i -> EQ expresion6 .)
    AND             reduce using rule 83 (expresion6i -> EQ expresion6 .)
    OR              reduce using rule 83 (expresion6i -> EQ expresion6 .)
    SEMIC           reduce using rule 83 (expresion6i -> EQ expresion6 .)
    RBRACKET        reduce using rule 83 (expresion6i -> EQ expresion6 .)
    COMMA           reduce using rule 83 (expresion6i -> EQ expresion6 .)
    RPAREN          reduce using rule 83 (expresion6i -> EQ expresion6 .)


state 213

    (80) expresion5i -> ANDB expresion5 .

    XOR             reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    ORB             reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    AND             reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    OR              reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    SEMIC           reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    RBRACKET        reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    COMMA           reduce using rule 80 (expresion5i -> ANDB expresion5 .)
    RPAREN          reduce using rule 80 (expresion5i -> ANDB expresion5 .)


state 214

    (93) expresion8i -> GREATEREQUAL expresion8 .

    SHR             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    SHL             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    EQ              reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    DIF             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    ANDB            reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    XOR             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    ORB             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    AND             reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    OR              reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    SEMIC           reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    RBRACKET        reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    COMMA           reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)
    RPAREN          reduce using rule 93 (expresion8i -> GREATEREQUAL expresion8 .)


state 215

    (92) expresion8i -> LESSTHAN expresion8 .

    SHR             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    SHL             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    EQ              reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    DIF             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    ANDB            reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    XOR             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    ORB             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    AND             reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    OR              reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    SEMIC           reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    RBRACKET        reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    COMMA           reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)
    RPAREN          reduce using rule 92 (expresion8i -> LESSTHAN expresion8 .)


state 216

    (91) expresion8i -> GREATERTHAN expresion8 .

    SHR             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    SHL             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    EQ              reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    DIF             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    ANDB            reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    XOR             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    ORB             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    AND             reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    OR              reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    SEMIC           reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    RBRACKET        reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    COMMA           reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)
    RPAREN          reduce using rule 91 (expresion8i -> GREATERTHAN expresion8 .)


state 217

    (94) expresion8i -> LESSEQUAL expresion8 .

    SHR             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    SHL             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    EQ              reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    DIF             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    ANDB            reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    XOR             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    ORB             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    AND             reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    OR              reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    SEMIC           reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    RBRACKET        reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    COMMA           reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)
    RPAREN          reduce using rule 94 (expresion8i -> LESSEQUAL expresion8 .)


state 218

    (87) expresion7i -> SHR expresion7 .

    EQ              reduce using rule 87 (expresion7i -> SHR expresion7 .)
    DIF             reduce using rule 87 (expresion7i -> SHR expresion7 .)
    ANDB            reduce using rule 87 (expresion7i -> SHR expresion7 .)
    XOR             reduce using rule 87 (expresion7i -> SHR expresion7 .)
    ORB             reduce using rule 87 (expresion7i -> SHR expresion7 .)
    AND             reduce using rule 87 (expresion7i -> SHR expresion7 .)
    OR              reduce using rule 87 (expresion7i -> SHR expresion7 .)
    SEMIC           reduce using rule 87 (expresion7i -> SHR expresion7 .)
    RBRACKET        reduce using rule 87 (expresion7i -> SHR expresion7 .)
    COMMA           reduce using rule 87 (expresion7i -> SHR expresion7 .)
    RPAREN          reduce using rule 87 (expresion7i -> SHR expresion7 .)


state 219

    (88) expresion7i -> SHL expresion7 .

    EQ              reduce using rule 88 (expresion7i -> SHL expresion7 .)
    DIF             reduce using rule 88 (expresion7i -> SHL expresion7 .)
    ANDB            reduce using rule 88 (expresion7i -> SHL expresion7 .)
    XOR             reduce using rule 88 (expresion7i -> SHL expresion7 .)
    ORB             reduce using rule 88 (expresion7i -> SHL expresion7 .)
    AND             reduce using rule 88 (expresion7i -> SHL expresion7 .)
    OR              reduce using rule 88 (expresion7i -> SHL expresion7 .)
    SEMIC           reduce using rule 88 (expresion7i -> SHL expresion7 .)
    RBRACKET        reduce using rule 88 (expresion7i -> SHL expresion7 .)
    COMMA           reduce using rule 88 (expresion7i -> SHL expresion7 .)
    RPAREN          reduce using rule 88 (expresion7i -> SHL expresion7 .)


state 220

    (108) exponencial -> LPAREN expresion RPAREN .

    EXP             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    STAR            reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    SHR             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    SHL             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    DIF             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    ANDB            reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    ORB             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    AND             reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    OR              reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 108 (exponencial -> LPAREN expresion RPAREN .)


state 221

    (63) bloque -> LCURLY bloque2 RCURLY .

    IF              reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    ID              reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    WHERE           reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    ELSE            reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    FUNC            reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)
    MODEL           reduce using rule 63 (bloque -> LCURLY bloque2 RCURLY .)


state 222

    (52) funcion2 -> COMMA type ID funcion2 .

    RPAREN          reduce using rule 52 (funcion2 -> COMMA type ID funcion2 .)


state 223

    (61) dec22 -> COMMA . ID dec22

    ID              shift and go to state 236


state 224

    (58) declaration -> type dimensions POINTS ID dec22 . SEMIC

    SEMIC           shift and go to state 237


state 225

    (62) dec22 -> empty .

    SEMIC           reduce using rule 62 (dec22 -> empty .)


state 226

    (59) dimensions -> LBRACKET expresion RBRACKET dimensions .

    POINTS          reduce using rule 59 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 227

    (11) optimize -> MIN LCURLY statement where RCURLY .

    WHERE           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TINT            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    ID              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)


state 228

    (39) write2 -> COMMA asign write2 .

    SEMIC           reduce using rule 39 (write2 -> COMMA asign write2 .)


state 229

    (28) expresiones -> expresion COMMA expresiones .

    SEMIC           reduce using rule 28 (expresiones -> expresion COMMA expresiones .)


state 230

    (125) llamarfuncion33 -> COMMA asign . llamarfuncion33
    (125) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (126) llamarfuncion33 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 190
    RPAREN          reduce using rule 130 (empty -> .)

    llamarfuncion33                shift and go to state 238
    empty                          shift and go to state 191

state 231

    (36) condition1 -> ELSE bloque .

    IF              reduce using rule 36 (condition1 -> ELSE bloque .)
    PRINT           reduce using rule 36 (condition1 -> ELSE bloque .)
    FOR             reduce using rule 36 (condition1 -> ELSE bloque .)
    RETURN          reduce using rule 36 (condition1 -> ELSE bloque .)
    BUILD           reduce using rule 36 (condition1 -> ELSE bloque .)
    CONDITION       reduce using rule 36 (condition1 -> ELSE bloque .)
    TINT            reduce using rule 36 (condition1 -> ELSE bloque .)
    TBOOL           reduce using rule 36 (condition1 -> ELSE bloque .)
    TFLOAT          reduce using rule 36 (condition1 -> ELSE bloque .)
    ID              reduce using rule 36 (condition1 -> ELSE bloque .)
    RCURLY          reduce using rule 36 (condition1 -> ELSE bloque .)
    WHERE           reduce using rule 36 (condition1 -> ELSE bloque .)


state 232

    (42) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC . ciclo3 bloque
    (47) ciclo3 -> . asign
    (48) ciclo3 -> .
    (27) asign -> . id asign_signo expresiones SEMIC
    (119) id -> . ID llamarfuncion
    (120) id -> . ID

    LCURLY          reduce using rule 48 (ciclo3 -> .)
    ID              shift and go to state 35

    asign                          shift and go to state 239
    ciclo3                         shift and go to state 240
    id                             shift and go to state 33

state 233

    (41) ciclo -> FOR ID IN DOT ID . bloque
    (63) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 106

    bloque                         shift and go to state 241

state 234

    (14) where -> WHERE LCURLY bloque2 RCURLY .

    IF              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    ID              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)


state 235

    (12) optimize -> MAX LCURLY statement where RCURLY .

    WHERE           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TINT            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    ID              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)


state 236

    (61) dec22 -> COMMA ID . dec22
    (61) dec22 -> . COMMA ID dec22
    (62) dec22 -> . empty
    (130) empty -> .

    COMMA           shift and go to state 223
    SEMIC           reduce using rule 130 (empty -> .)

    dec22                          shift and go to state 242
    empty                          shift and go to state 225

state 237

    (58) declaration -> type dimensions POINTS ID dec22 SEMIC .

    TINT            reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    TBOOL           reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    TFLOAT          reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    RCURLY          reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    IF              reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    PRINT           reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    FOR             reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    RETURN          reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    BUILD           reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    CONDITION       reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    ID              reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)
    WHERE           reduce using rule 58 (declaration -> type dimensions POINTS ID dec22 SEMIC .)


state 238

    (125) llamarfuncion33 -> COMMA asign llamarfuncion33 .

    RPAREN          reduce using rule 125 (llamarfuncion33 -> COMMA asign llamarfuncion33 .)


state 239

    (47) ciclo3 -> asign .

    LCURLY          reduce using rule 47 (ciclo3 -> asign .)


state 240

    (42) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 . bloque
    (63) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 106

    bloque                         shift and go to state 243

state 241

    (41) ciclo -> FOR ID IN DOT ID bloque .

    WHERE           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    IF              reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    PRINT           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    FOR             reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    RETURN          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    BUILD           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    CONDITION       reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TINT            reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TBOOL           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TFLOAT          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    ID              reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    RCURLY          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)


state 242

    (61) dec22 -> COMMA ID dec22 .

    SEMIC           reduce using rule 61 (dec22 -> COMMA ID dec22 .)


state 243

    (42) ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .

    WHERE           reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    IF              reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    PRINT           reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    FOR             reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    RETURN          reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    BUILD           reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    CONDITION       reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TINT            reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TBOOL           reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    TFLOAT          reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    ID              reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)
    RCURLY          reduce using rule 42 (ciclo -> FOR ciclo1 SEMIC ciclo2 SEMIC ciclo3 bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 22 resolved as shift
WARNING: shift/reduce conflict for FOR in state 22 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 22 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 22 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 22 resolved as shift
WARNING: shift/reduce conflict for TINT in state 22 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 22 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for IF in state 38 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 38 resolved as shift
WARNING: shift/reduce conflict for FOR in state 38 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 38 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 38 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 38 resolved as shift
WARNING: shift/reduce conflict for TINT in state 38 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 38 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 38 resolved as shift
WARNING: shift/reduce conflict for ID in state 38 resolved as shift
WARNING: reduce/reduce conflict in state 40 resolved using rule (model -> empty)
WARNING: rejected rule (bloque2 -> empty) in state 40
