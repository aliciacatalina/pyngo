Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     varcte -> CTEI
Rule 2     varcte -> CTEF
Rule 3     varcte -> CTESTRING
Rule 4     varcte -> CTEBOOL
Rule 5     varcte -> ID
Rule 6     varcte -> llamadafuncion
Rule 7     llamadafuncion -> ID LPAREN expresion RPAREN
Rule 8     llamadafuncion -> ID LPAREN CTEI RPAREN
Rule 9     llamadafuncion -> ID LPAREN CTEF RPAREN
Rule 10    data -> DATA LCURLY listaasignacion RCURLY
Rule 11    listaasignacion -> asignacion SEMIC lasignacion
<<<<<<< HEAD
Rule 12    listaasignacion -> asignacion
Rule 13    lasignacion -> empty
Rule 14    lasignacion -> listaasignacion
Rule 15    funcionoptimizacion -> MIN EQUALS restricciones
Rule 16    funcionoptimizacion -> MAX EQUALS restricciones
Rule 17    restricciones -> WHERE restricciones2
Rule 18    restricciones2 -> expresion
Rule 19    restricciones2 -> suma SEMIC listafor
Rule 20    for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET
Rule 21    listafor -> for SEMIC lfor
Rule 22    lfor -> empty
Rule 23    lfor -> listafor
Rule 24    suma -> SUM LPAREN ID POINTS expresion RPAREN
Rule 25    factor -> PLUS varcte
Rule 26    factor -> MINUS varcte
Rule 27    factor -> varcte
Rule 28    factor -> LPAREN expresion RPAREN
Rule 29    termino -> factor
Rule 30    termino -> factor STAR termino
Rule 31    termino -> factor SLASH termino
Rule 32    condicion -> IF LPAREN expresion RPAREN bloque SEMIC
Rule 33    condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
Rule 34    expresion -> exp
Rule 35    expresion -> exp LESSTHAN exp
Rule 36    expresion -> exp GREATERTHAN exp
Rule 37    expresion -> exp BETWEEN exp
Rule 38    exp -> termino
Rule 39    exp -> termino PLUS exp
Rule 40    exp -> termino MINUS exp
Rule 41    escritura -> PRINT LPAREN escritura2 RPAREN SEMIC
Rule 42    escritura2 -> expresion
Rule 43    escritura2 -> CTESTRING
Rule 44    escritura2 -> expresion DOT escritura2
Rule 45    escritura2 -> CTESTRING DOT escritura2
Rule 46    asignacion -> ID POINTS expresion SEMIC
Rule 47    estatuto -> asignacion
Rule 48    estatuto -> condicion
Rule 49    estatuto -> escritura
Rule 50    estatuto -> funcionoptimizacion
Rule 51    estatuto -> ciclo
Rule 52    estatuto -> retorno
Rule 53    ciclo -> for
Rule 54    retorno -> RETURN asignacion
Rule 55    funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY
Rule 56    listaargs -> empty
Rule 57    listaargs -> tipo ID liargs
Rule 58    liargs -> empty
Rule 59    liargs -> COMMA listaargs
Rule 60    bloque -> bloque2
Rule 61    bloque -> LCURLY RCURLY
Rule 62    bloque2 -> estatuto bloque2
Rule 63    bloque2 -> estatuto
Rule 64    bloque2 -> empty
Rule 65    tipo -> TINT
Rule 66    tipo -> TFLOAT
Rule 67    tipo -> TBOOL
Rule 68    vars -> VARS LCURLY listavars RCURLY
Rule 69    matriz -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 70    arreglo -> LBRACKET CTEI RBRACKET
Rule 71    declaracion -> arreglo
Rule 72    declaracion -> matriz
Rule 73    declaracion -> tipo
Rule 74    lid -> COMMA listaids
Rule 75    lid -> empty
Rule 76    listaids -> ID lid
Rule 77    lvars -> listavars
Rule 78    lvars -> empty
Rule 79    listavars -> declaracion POINTS listaids SEMIC
Rule 80    declaravarsdata -> vars data
Rule 81    declaravarsdata -> empty
Rule 82    declaravarsdata -> vars
Rule 83    declarafuncion -> funcion
Rule 84    declarafuncion -> empty
Rule 85    declaravars -> vars
Rule 86    declaravars -> empty
Rule 87    programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY
Rule 88    empty -> <empty>
=======
Rule 12    lasignacion -> empty
Rule 13    lasignacion -> listaasignacion
Rule 14    funcionoptimizacion -> MIN EQUALS restricciones
Rule 15    funcionoptimizacion -> MAX EQUALS restricciones
Rule 16    restricciones -> WHERE restricciones2
Rule 17    restricciones2 -> expresion
Rule 18    restricciones2 -> suma SEMIC listafor
Rule 19    for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET
Rule 20    listafor -> for SEMIC lfor
Rule 21    lfor -> empty
Rule 22    lfor -> listafor
Rule 23    suma -> SUM LPAREN ID POINTS expresion RPAREN
Rule 24    factor -> PLUS varcte
Rule 25    factor -> MINUS varcte
Rule 26    factor -> varcte
Rule 27    factor -> LPAREN expresion RPAREN
Rule 28    termino -> factor
Rule 29    termino -> factor STAR termino
Rule 30    termino -> factor SLASH termino
Rule 31    condicion -> IF LPAREN expresion RPAREN bloque SEMIC
Rule 32    condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
Rule 33    expresion -> exp
Rule 34    expresion -> exp LESSTHAN exp
Rule 35    expresion -> exp GREATERTHAN exp
Rule 36    expresion -> exp BETWEEN exp
Rule 37    exp -> termino
Rule 38    exp -> termino PLUS exp
Rule 39    exp -> termino MINUS exp
Rule 40    escritura -> PRINT LPAREN escritura2 RPAREN SEMIC
Rule 41    escritura2 -> expresion
Rule 42    escritura2 -> CTESTRING
Rule 43    escritura2 -> expresion DOT escritura2
Rule 44    escritura2 -> CTESTRING DOT escritura2
Rule 45    asignacion -> ID EQUALS expresion SEMIC
Rule 46    estatuto -> asignacion
Rule 47    estatuto -> condicion
Rule 48    estatuto -> escritura
Rule 49    estatuto -> funcionoptimizacion
Rule 50    estatuto -> ciclo
Rule 51    estatuto -> retorno
Rule 52    ciclo -> for
Rule 53    retorno -> RETURN asignacion
Rule 54    funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY
Rule 55    listaargs -> empty
Rule 56    listaargs -> tipo ID liargs
Rule 57    liargs -> empty
Rule 58    liargs -> COMMA listaargs
Rule 59    bloque -> bloque2
Rule 60    bloque -> LCURLY RCURLY
Rule 61    bloque2 -> estatuto bloque2
Rule 62    bloque2 -> estatuto
Rule 63    tipo -> TINT
Rule 64    tipo -> TFLOAT
Rule 65    tipo -> TBOOL
Rule 66    vars -> VARS LCURLY listavars RCURLY
Rule 67    matriz -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 68    arreglo -> LBRACKET CTEI RBRACKET
Rule 69    declaracion -> arreglo
Rule 70    declaracion -> matriz
Rule 71    declaracion -> tipo
Rule 72    lid -> COMMA listaids
Rule 73    lid -> empty
Rule 74    listaids -> ID lid
Rule 75    lvars -> listavars
Rule 76    lvars -> empty
Rule 77    listavars -> declaracion POINTS listaids SEMIC
Rule 78    declaravarsdata -> vars data
Rule 79    declaravarsdata -> empty
<<<<<<< HEAD
Rule 80    declarafuncion -> funcion
Rule 81    declarafuncion -> empty
Rule 82    declaravars -> vars
Rule 83    declaravars -> empty
Rule 84    programa -> declaravars declarafuncion MODEL POINTS LCURLY declaravarsdata bloque RCURLY
Rule 85    empty -> <empty>
=======
Rule 80    declaravarsdata -> vars
Rule 81    declarafuncion -> funcion
Rule 82    declarafuncion -> empty
Rule 83    declaravars -> vars
Rule 84    declaravars -> empty
Rule 85    programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY
Rule 86    empty -> <empty>
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

Terminals, with rules where they appear

BETWEEN              : 37
COMMA                : 59 74
CTEBOOL              : 4
CTEF                 : 2 9
CTEI                 : 1 8 69 69 70
CTESTRING            : 3 43 45
DATA                 : 10
<<<<<<< HEAD
DOT                  : 20 44 45
ELSE                 : 33
EQUALS               : 15 16
FOR                  : 20
FUNC                 : 55
GREATERTHAN          : 36
ID                   : 5 7 8 9 20 20 24 46 55 57 76
IF                   : 32 33
IN                   : 20
LBRACKET             : 20 69 69 70
LCURLY               : 10 55 61 68 87
LESSTHAN             : 35
LPAREN               : 7 8 9 24 28 32 33 41 55
MAX                  : 16
MIN                  : 15
MINUS                : 26 40
MODEL                : 87
PLUS                 : 25 39
POINTS               : 24 46 79
PRINT                : 41
RBRACKET             : 20 69 69 70
RCURLY               : 10 55 61 68 87
RETURN               : 54
RPAREN               : 7 8 9 24 28 32 33 41 55
SEMIC                : 11 19 21 32 33 41 46 79
SLASH                : 31
STAR                 : 30
SUM                  : 24
TBOOL                : 67
TFLOAT               : 66
TINT                 : 65
VARS                 : 68
WHERE                : 17
=======
DOT                  : 19 43 44
ELSE                 : 32
EQUALS               : 14 15 45
FOR                  : 19
FUNC                 : 54
GREATERTHAN          : 35
ID                   : 5 7 8 9 19 19 23 45 54 56 74
IF                   : 31 32
IN                   : 19
LBRACKET             : 19 67 67 68
<<<<<<< HEAD
LCURLY               : 10 54 59 60 66 84
=======
LCURLY               : 10 54 60 66 85
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9
LESSTHAN             : 34
LPAREN               : 7 8 9 23 27 31 32 40 54
MAX                  : 15
MIN                  : 14
MINUS                : 25 39
MODEL                : 85
PLUS                 : 24 38
POINTS               : 23 77
PRINT                : 40
RBRACKET             : 19 67 67 68
<<<<<<< HEAD
RCURLY               : 10 54 59 60 66 84
=======
RCURLY               : 10 54 60 66 85
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9
RETURN               : 53
RPAREN               : 7 8 9 23 27 31 32 40 54
SEMIC                : 11 18 20 31 32 40 45 77
SLASH                : 30
STAR                 : 29
SUM                  : 23
TBOOL                : 65
TFLOAT               : 64
TINT                 : 63
VARS                 : 66
WHERE                : 16
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319
error                : 

Nonterminals, with rules where they appear

arreglo              : 71
asignacion           : 11 12 47 54
bloque               : 32 33 33
bloque2              : 60 62 87
ciclo                : 51
condicion            : 48
data                 : 80
declaracion          : 79
declarafuncion       : 87
declaravars          : 87
declaravarsdata      : 55 87
empty                : 13 22 56 58 64 75 78 81 84 86
escritura            : 49
escritura2           : 41 44 45
estatuto             : 20 62 63
exp                  : 34 35 35 36 36 37 37 39 40
expresion            : 7 18 24 28 32 33 42 44 46
factor               : 29 30 31
for                  : 21 53
funcion              : 83
funcionoptimizacion  : 50
lasignacion          : 11
lfor                 : 21
liargs               : 57
lid                  : 76
listaargs            : 55 59
listaasignacion      : 10 14
listafor             : 19 23
listaids             : 74 79
listavars            : 68 77
llamadafuncion       : 6
lvars                : 
matriz               : 72
programa             : 0
restricciones        : 15 16
restricciones2       : 17
retorno              : 52
suma                 : 19
termino              : 30 31 38 39 40
tipo                 : 57 73
varcte               : 25 26 27
vars                 : 80 82 85

Parsing method: LALR

state 0

    (0) S' -> . programa
    (87) programa -> . declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY
    (85) declaravars -> . vars
    (86) declaravars -> . empty
    (68) vars -> . VARS LCURLY listavars RCURLY
    (88) empty -> .

    VARS            shift and go to state 1
    FUNC            reduce using rule 88 (empty -> .)
    MODEL           reduce using rule 88 (empty -> .)

    vars                           shift and go to state 2
    declaravars                    shift and go to state 3
    programa                       shift and go to state 4
    empty                          shift and go to state 5

state 1

    (68) vars -> VARS . LCURLY listavars RCURLY

    LCURLY          shift and go to state 6


state 2

    (85) declaravars -> vars .

    FUNC            reduce using rule 85 (declaravars -> vars .)
    MODEL           reduce using rule 85 (declaravars -> vars .)


state 3

    (87) programa -> declaravars . declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY
    (83) declarafuncion -> . funcion
    (84) declarafuncion -> . empty
    (55) funcion -> . FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY
    (88) empty -> .

    FUNC            shift and go to state 8
    MODEL           reduce using rule 88 (empty -> .)

    declarafuncion                 shift and go to state 7
    empty                          shift and go to state 9
    funcion                        shift and go to state 10

state 4

    (0) S' -> programa .



state 5

    (86) declaravars -> empty .

    FUNC            reduce using rule 86 (declaravars -> empty .)
    MODEL           reduce using rule 86 (declaravars -> empty .)


state 6

    (68) vars -> VARS LCURLY . listavars RCURLY
    (79) listavars -> . declaracion POINTS listaids SEMIC
    (71) declaracion -> . arreglo
    (72) declaracion -> . matriz
    (73) declaracion -> . tipo
    (70) arreglo -> . LBRACKET CTEI RBRACKET
    (69) matriz -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (65) tipo -> . TINT
    (66) tipo -> . TFLOAT
    (67) tipo -> . TBOOL

    LBRACKET        shift and go to state 16
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 18
    TBOOL           shift and go to state 17

    tipo                           shift and go to state 13
    matriz                         shift and go to state 15
    listavars                      shift and go to state 14
    arreglo                        shift and go to state 12
    declaracion                    shift and go to state 19

state 7

    (87) programa -> declaravars declarafuncion . MODEL LCURLY declaravarsdata bloque2 RCURLY

    MODEL           shift and go to state 20


state 8

    (55) funcion -> FUNC . ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY

    ID              shift and go to state 21


state 9

    (84) declarafuncion -> empty .

    MODEL           reduce using rule 84 (declarafuncion -> empty .)


state 10

    (83) declarafuncion -> funcion .

    MODEL           reduce using rule 83 (declarafuncion -> funcion .)


state 11

    (65) tipo -> TINT .

    ID              reduce using rule 65 (tipo -> TINT .)
    POINTS          reduce using rule 65 (tipo -> TINT .)


state 12

    (71) declaracion -> arreglo .

    POINTS          reduce using rule 71 (declaracion -> arreglo .)


state 13

    (73) declaracion -> tipo .

    POINTS          reduce using rule 73 (declaracion -> tipo .)


state 14

    (68) vars -> VARS LCURLY listavars . RCURLY

    RCURLY          shift and go to state 22


state 15

    (72) declaracion -> matriz .

    POINTS          reduce using rule 72 (declaracion -> matriz .)


state 16

    (70) arreglo -> LBRACKET . CTEI RBRACKET
    (69) matriz -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET

    CTEI            shift and go to state 23


state 17

    (67) tipo -> TBOOL .

    ID              reduce using rule 67 (tipo -> TBOOL .)
    POINTS          reduce using rule 67 (tipo -> TBOOL .)


state 18

    (66) tipo -> TFLOAT .

    ID              reduce using rule 66 (tipo -> TFLOAT .)
    POINTS          reduce using rule 66 (tipo -> TFLOAT .)


state 19

    (79) listavars -> declaracion . POINTS listaids SEMIC

    POINTS          shift and go to state 24


state 20

    (87) programa -> declaravars declarafuncion MODEL . LCURLY declaravarsdata bloque2 RCURLY

    LCURLY          shift and go to state 25


state 21

    (55) funcion -> FUNC ID . LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY

    LPAREN          shift and go to state 26


state 22

    (68) vars -> VARS LCURLY listavars RCURLY .

    DATA            reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    RCURLY          reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    FUNC            reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    MODEL           reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    ID              reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    IF              reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    PRINT           reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    MIN             reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    MAX             reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    RETURN          reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)
    FOR             reduce using rule 68 (vars -> VARS LCURLY listavars RCURLY .)


state 23

    (70) arreglo -> LBRACKET CTEI . RBRACKET
    (69) matriz -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 27


state 24

    (79) listavars -> declaracion POINTS . listaids SEMIC
    (76) listaids -> . ID lid

    ID              shift and go to state 28

    listaids                       shift and go to state 29

state 25

    (87) programa -> declaravars declarafuncion MODEL LCURLY . declaravarsdata bloque2 RCURLY
    (80) declaravarsdata -> . vars data
    (81) declaravarsdata -> . empty
    (82) declaravarsdata -> . vars
    (68) vars -> . VARS LCURLY listavars RCURLY
    (88) empty -> .

    VARS            shift and go to state 1
    ID              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    PRINT           reduce using rule 88 (empty -> .)
    MIN             reduce using rule 88 (empty -> .)
    MAX             reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    FOR             reduce using rule 88 (empty -> .)
    RCURLY          reduce using rule 88 (empty -> .)

    vars                           shift and go to state 30
    declaravarsdata                shift and go to state 31
    empty                          shift and go to state 32

state 26

    (55) funcion -> FUNC ID LPAREN . listaargs RPAREN LCURLY declaravarsdata RCURLY
    (56) listaargs -> . empty
    (57) listaargs -> . tipo ID liargs
    (88) empty -> .
    (65) tipo -> . TINT
    (66) tipo -> . TFLOAT
    (67) tipo -> . TBOOL

    RPAREN          reduce using rule 88 (empty -> .)
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 18
    TBOOL           shift and go to state 17

    listaargs                      shift and go to state 34
    tipo                           shift and go to state 33
    empty                          shift and go to state 35

state 27

    (70) arreglo -> LBRACKET CTEI RBRACKET .
    (69) matriz -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET

    POINTS          reduce using rule 70 (arreglo -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 36


state 28

    (76) listaids -> ID . lid
    (74) lid -> . COMMA listaids
    (75) lid -> . empty
    (88) empty -> .

    COMMA           shift and go to state 38
    SEMIC           reduce using rule 88 (empty -> .)

    lid                            shift and go to state 37
    empty                          shift and go to state 39

state 29

    (79) listavars -> declaracion POINTS listaids . SEMIC

    SEMIC           shift and go to state 40


state 30

    (80) declaravarsdata -> vars . data
    (82) declaravarsdata -> vars .
    (10) data -> . DATA LCURLY listaasignacion RCURLY

    ID              reduce using rule 82 (declaravarsdata -> vars .)
    IF              reduce using rule 82 (declaravarsdata -> vars .)
    PRINT           reduce using rule 82 (declaravarsdata -> vars .)
    MIN             reduce using rule 82 (declaravarsdata -> vars .)
    MAX             reduce using rule 82 (declaravarsdata -> vars .)
    RETURN          reduce using rule 82 (declaravarsdata -> vars .)
    FOR             reduce using rule 82 (declaravarsdata -> vars .)
    RCURLY          reduce using rule 82 (declaravarsdata -> vars .)
    DATA            shift and go to state 42

    data                           shift and go to state 41

state 31

<<<<<<< HEAD
    (87) programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata . bloque2 RCURLY
    (62) bloque2 -> . estatuto bloque2
    (63) bloque2 -> . estatuto
    (64) bloque2 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . funcionoptimizacion
    (51) estatuto -> . ciclo
    (52) estatuto -> . retorno
    (88) empty -> .
    (46) asignacion -> . ID POINTS expresion SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (41) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (15) funcionoptimizacion -> . MIN EQUALS restricciones
    (16) funcionoptimizacion -> . MAX EQUALS restricciones
    (53) ciclo -> . for
    (54) retorno -> . RETURN asignacion
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    RCURLY          reduce using rule 88 (empty -> .)
    ID              shift and go to state 54
    IF              shift and go to state 55
=======
<<<<<<< HEAD
    (56) listaargs -> tipo . ID liargs

    ID              shift and go to state 42

=======
    (85) programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata . bloque2 RCURLY
    (61) bloque2 -> . estatuto bloque2
    (62) bloque2 -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    ID              shift and go to state 53
    IF              shift and go to state 54
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 58
    RETURN          shift and go to state 43
    FOR             shift and go to state 52

    bloque2                        shift and go to state 56
    ciclo                          shift and go to state 46
    asignacion                     shift and go to state 57
    funcionoptimizacion            shift and go to state 53
    estatuto                       shift and go to state 48
    for                            shift and go to state 47
    condicion                      shift and go to state 49
    retorno                        shift and go to state 50
    empty                          shift and go to state 51
    escritura                      shift and go to state 59

state 32

    (81) declaravarsdata -> empty .

    ID              reduce using rule 81 (declaravarsdata -> empty .)
    IF              reduce using rule 81 (declaravarsdata -> empty .)
    PRINT           reduce using rule 81 (declaravarsdata -> empty .)
    MIN             reduce using rule 81 (declaravarsdata -> empty .)
    MAX             reduce using rule 81 (declaravarsdata -> empty .)
    RETURN          reduce using rule 81 (declaravarsdata -> empty .)
    FOR             reduce using rule 81 (declaravarsdata -> empty .)
    RCURLY          reduce using rule 81 (declaravarsdata -> empty .)


state 33

    (57) listaargs -> tipo . ID liargs

    ID              shift and go to state 60


state 34

    (55) funcion -> FUNC ID LPAREN listaargs . RPAREN LCURLY declaravarsdata RCURLY

    RPAREN          shift and go to state 61


state 35

    (56) listaargs -> empty .

    RPAREN          reduce using rule 56 (listaargs -> empty .)


state 36

    (69) matriz -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 62


state 37

    (76) listaids -> ID lid .

    SEMIC           reduce using rule 76 (listaids -> ID lid .)


state 38

    (74) lid -> COMMA . listaids
    (76) listaids -> . ID lid

    ID              shift and go to state 28

    listaids                       shift and go to state 63

state 39

    (75) lid -> empty .

    SEMIC           reduce using rule 75 (lid -> empty .)


state 40

    (79) listavars -> declaracion POINTS listaids SEMIC .

    RCURLY          reduce using rule 79 (listavars -> declaracion POINTS listaids SEMIC .)


state 41

    (80) declaravarsdata -> vars data .

    ID              reduce using rule 80 (declaravarsdata -> vars data .)
    IF              reduce using rule 80 (declaravarsdata -> vars data .)
    PRINT           reduce using rule 80 (declaravarsdata -> vars data .)
    MIN             reduce using rule 80 (declaravarsdata -> vars data .)
    MAX             reduce using rule 80 (declaravarsdata -> vars data .)
    RETURN          reduce using rule 80 (declaravarsdata -> vars data .)
    FOR             reduce using rule 80 (declaravarsdata -> vars data .)
    RCURLY          reduce using rule 80 (declaravarsdata -> vars data .)


state 42

    (10) data -> DATA . LCURLY listaasignacion RCURLY

    LCURLY          shift and go to state 64


state 43

    (54) retorno -> RETURN . asignacion
    (46) asignacion -> . ID POINTS expresion SEMIC

<<<<<<< HEAD
    ID              shift and go to state 54
=======
state 59
=======
    (53) retorno -> RETURN . asignacion
    (45) asignacion -> . ID EQUALS expresion SEMIC
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

    asignacion                     shift and go to state 65

state 44

    (15) funcionoptimizacion -> MIN . EQUALS restricciones

    EQUALS          shift and go to state 66


state 45

    (41) escritura -> PRINT . LPAREN escritura2 RPAREN SEMIC

    LPAREN          shift and go to state 67


state 46

    (51) estatuto -> ciclo .

    ID              reduce using rule 51 (estatuto -> ciclo .)
    IF              reduce using rule 51 (estatuto -> ciclo .)
    PRINT           reduce using rule 51 (estatuto -> ciclo .)
    MIN             reduce using rule 51 (estatuto -> ciclo .)
    MAX             reduce using rule 51 (estatuto -> ciclo .)
    RETURN          reduce using rule 51 (estatuto -> ciclo .)
    FOR             reduce using rule 51 (estatuto -> ciclo .)
    RCURLY          reduce using rule 51 (estatuto -> ciclo .)
    SEMIC           reduce using rule 51 (estatuto -> ciclo .)
    ELSE            reduce using rule 51 (estatuto -> ciclo .)
    RBRACKET        reduce using rule 51 (estatuto -> ciclo .)


state 47

    (53) ciclo -> for .

    ID              reduce using rule 53 (ciclo -> for .)
    IF              reduce using rule 53 (ciclo -> for .)
    PRINT           reduce using rule 53 (ciclo -> for .)
    MIN             reduce using rule 53 (ciclo -> for .)
    MAX             reduce using rule 53 (ciclo -> for .)
    RETURN          reduce using rule 53 (ciclo -> for .)
    FOR             reduce using rule 53 (ciclo -> for .)
    SEMIC           reduce using rule 53 (ciclo -> for .)
    ELSE            reduce using rule 53 (ciclo -> for .)
    RCURLY          reduce using rule 53 (ciclo -> for .)
    RBRACKET        reduce using rule 53 (ciclo -> for .)


state 48
<<<<<<< HEAD
=======
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9

    (61) bloque2 -> estatuto . bloque2
    (62) bloque2 -> estatuto .
    (61) bloque2 -> . estatuto bloque2
    (62) bloque2 -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    SEMIC           reduce using rule 62 (bloque2 -> estatuto .)
    ELSE            reduce using rule 62 (bloque2 -> estatuto .)
    RCURLY          reduce using rule 62 (bloque2 -> estatuto .)
<<<<<<< HEAD
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 58
    MIN             shift and go to state 57
    MAX             shift and go to state 71
    RETURN          shift and go to state 56
    FOR             shift and go to state 64

    bloque2                        shift and go to state 81
    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 70
    funcionoptimizacion            shift and go to state 65
    estatuto                       shift and go to state 62
    for                            shift and go to state 60
    condicion                      shift and go to state 66
    retorno                        shift and go to state 63
    escritura                      shift and go to state 72
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

    (62) bloque2 -> estatuto . bloque2
    (63) bloque2 -> estatuto .
    (62) bloque2 -> . estatuto bloque2
    (63) bloque2 -> . estatuto
    (64) bloque2 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . funcionoptimizacion
    (51) estatuto -> . ciclo
    (52) estatuto -> . retorno
    (88) empty -> .
    (46) asignacion -> . ID POINTS expresion SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (41) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (15) funcionoptimizacion -> . MIN EQUALS restricciones
    (16) funcionoptimizacion -> . MAX EQUALS restricciones
    (53) ciclo -> . for
    (54) retorno -> . RETURN asignacion
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

  ! reduce/reduce conflict for RCURLY resolved using rule 63 (bloque2 -> estatuto .)
  ! reduce/reduce conflict for SEMIC resolved using rule 63 (bloque2 -> estatuto .)
  ! reduce/reduce conflict for ELSE resolved using rule 63 (bloque2 -> estatuto .)
    SEMIC           reduce using rule 63 (bloque2 -> estatuto .)
    ELSE            reduce using rule 63 (bloque2 -> estatuto .)
    RCURLY          reduce using rule 63 (bloque2 -> estatuto .)
    ID              shift and go to state 54
    IF              shift and go to state 55
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 58
    RETURN          shift and go to state 43
    FOR             shift and go to state 52

  ! RCURLY          [ reduce using rule 88 (empty -> .) ]
  ! SEMIC           [ reduce using rule 88 (empty -> .) ]
  ! ELSE            [ reduce using rule 88 (empty -> .) ]

    bloque2                        shift and go to state 68
    ciclo                          shift and go to state 46
    asignacion                     shift and go to state 57
    funcionoptimizacion            shift and go to state 53
    estatuto                       shift and go to state 48
    for                            shift and go to state 47
    condicion                      shift and go to state 49
    retorno                        shift and go to state 50
    empty                          shift and go to state 51
    escritura                      shift and go to state 59

state 49

    (48) estatuto -> condicion .

    ID              reduce using rule 48 (estatuto -> condicion .)
    IF              reduce using rule 48 (estatuto -> condicion .)
    PRINT           reduce using rule 48 (estatuto -> condicion .)
    MIN             reduce using rule 48 (estatuto -> condicion .)
    MAX             reduce using rule 48 (estatuto -> condicion .)
    RETURN          reduce using rule 48 (estatuto -> condicion .)
    FOR             reduce using rule 48 (estatuto -> condicion .)
    RCURLY          reduce using rule 48 (estatuto -> condicion .)
    SEMIC           reduce using rule 48 (estatuto -> condicion .)
    ELSE            reduce using rule 48 (estatuto -> condicion .)
    RBRACKET        reduce using rule 48 (estatuto -> condicion .)


state 50

    (52) estatuto -> retorno .

    ID              reduce using rule 52 (estatuto -> retorno .)
    IF              reduce using rule 52 (estatuto -> retorno .)
    PRINT           reduce using rule 52 (estatuto -> retorno .)
    MIN             reduce using rule 52 (estatuto -> retorno .)
    MAX             reduce using rule 52 (estatuto -> retorno .)
    RETURN          reduce using rule 52 (estatuto -> retorno .)
    FOR             reduce using rule 52 (estatuto -> retorno .)
    RCURLY          reduce using rule 52 (estatuto -> retorno .)
    SEMIC           reduce using rule 52 (estatuto -> retorno .)
    ELSE            reduce using rule 52 (estatuto -> retorno .)
    RBRACKET        reduce using rule 52 (estatuto -> retorno .)


state 51

    (64) bloque2 -> empty .

    SEMIC           reduce using rule 64 (bloque2 -> empty .)
    ELSE            reduce using rule 64 (bloque2 -> empty .)
    RCURLY          reduce using rule 64 (bloque2 -> empty .)


state 52

    (20) for -> FOR . ID IN DOT ID LBRACKET estatuto RBRACKET

    ID              shift and go to state 69


state 53

<<<<<<< HEAD
    (50) estatuto -> funcionoptimizacion .

    ID              reduce using rule 50 (estatuto -> funcionoptimizacion .)
    IF              reduce using rule 50 (estatuto -> funcionoptimizacion .)
    PRINT           reduce using rule 50 (estatuto -> funcionoptimizacion .)
    MIN             reduce using rule 50 (estatuto -> funcionoptimizacion .)
    MAX             reduce using rule 50 (estatuto -> funcionoptimizacion .)
    RETURN          reduce using rule 50 (estatuto -> funcionoptimizacion .)
    FOR             reduce using rule 50 (estatuto -> funcionoptimizacion .)
    RCURLY          reduce using rule 50 (estatuto -> funcionoptimizacion .)
    SEMIC           reduce using rule 50 (estatuto -> funcionoptimizacion .)
    ELSE            reduce using rule 50 (estatuto -> funcionoptimizacion .)
    RBRACKET        reduce using rule 50 (estatuto -> funcionoptimizacion .)
=======
    (45) asignacion -> ID . EQUALS expresion SEMIC

    EQUALS          shift and go to state 69
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319


state 54

    (46) asignacion -> ID . POINTS expresion SEMIC

    POINTS          shift and go to state 70


state 55

    (32) condicion -> IF . LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> IF . LPAREN expresion RPAREN bloque ELSE bloque SEMIC

    LPAREN          shift and go to state 71


state 56

    (87) programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 . RCURLY

    RCURLY          shift and go to state 72


state 57

    (47) estatuto -> asignacion .

    ID              reduce using rule 47 (estatuto -> asignacion .)
    IF              reduce using rule 47 (estatuto -> asignacion .)
    PRINT           reduce using rule 47 (estatuto -> asignacion .)
    MIN             reduce using rule 47 (estatuto -> asignacion .)
    MAX             reduce using rule 47 (estatuto -> asignacion .)
    RETURN          reduce using rule 47 (estatuto -> asignacion .)
    FOR             reduce using rule 47 (estatuto -> asignacion .)
    RCURLY          reduce using rule 47 (estatuto -> asignacion .)
    SEMIC           reduce using rule 47 (estatuto -> asignacion .)
    ELSE            reduce using rule 47 (estatuto -> asignacion .)
    RBRACKET        reduce using rule 47 (estatuto -> asignacion .)


state 58

    (16) funcionoptimizacion -> MAX . EQUALS restricciones

    EQUALS          shift and go to state 73


state 59

    (49) estatuto -> escritura .

    ID              reduce using rule 49 (estatuto -> escritura .)
    IF              reduce using rule 49 (estatuto -> escritura .)
    PRINT           reduce using rule 49 (estatuto -> escritura .)
    MIN             reduce using rule 49 (estatuto -> escritura .)
    MAX             reduce using rule 49 (estatuto -> escritura .)
    RETURN          reduce using rule 49 (estatuto -> escritura .)
    FOR             reduce using rule 49 (estatuto -> escritura .)
    RCURLY          reduce using rule 49 (estatuto -> escritura .)
    SEMIC           reduce using rule 49 (estatuto -> escritura .)
    ELSE            reduce using rule 49 (estatuto -> escritura .)
    RBRACKET        reduce using rule 49 (estatuto -> escritura .)


state 60

    (57) listaargs -> tipo ID . liargs
    (58) liargs -> . empty
    (59) liargs -> . COMMA listaargs
    (88) empty -> .

    COMMA           shift and go to state 75
    RPAREN          reduce using rule 88 (empty -> .)

    liargs                         shift and go to state 74
    empty                          shift and go to state 76

state 61

    (55) funcion -> FUNC ID LPAREN listaargs RPAREN . LCURLY declaravarsdata RCURLY

    LCURLY          shift and go to state 77


state 62

    (69) matriz -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 78


state 63

<<<<<<< HEAD
    (74) lid -> COMMA listaids .
=======
    (10) data -> DATA LCURLY . listaasignacion RCURLY
    (11) listaasignacion -> . asignacion SEMIC lasignacion
    (45) asignacion -> . ID EQUALS expresion SEMIC
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

    SEMIC           reduce using rule 74 (lid -> COMMA listaids .)


state 64

    (10) data -> DATA LCURLY . listaasignacion RCURLY
    (11) listaasignacion -> . asignacion SEMIC lasignacion
    (12) listaasignacion -> . asignacion
    (46) asignacion -> . ID POINTS expresion SEMIC

    ID              shift and go to state 54

    asignacion                     shift and go to state 79
    listaasignacion                shift and go to state 80

state 65

    (54) retorno -> RETURN asignacion .

    RBRACKET        reduce using rule 54 (retorno -> RETURN asignacion .)
    ID              reduce using rule 54 (retorno -> RETURN asignacion .)
    IF              reduce using rule 54 (retorno -> RETURN asignacion .)
    PRINT           reduce using rule 54 (retorno -> RETURN asignacion .)
    MIN             reduce using rule 54 (retorno -> RETURN asignacion .)
    MAX             reduce using rule 54 (retorno -> RETURN asignacion .)
    RETURN          reduce using rule 54 (retorno -> RETURN asignacion .)
    FOR             reduce using rule 54 (retorno -> RETURN asignacion .)
    RCURLY          reduce using rule 54 (retorno -> RETURN asignacion .)
    SEMIC           reduce using rule 54 (retorno -> RETURN asignacion .)
    ELSE            reduce using rule 54 (retorno -> RETURN asignacion .)


state 66

    (15) funcionoptimizacion -> MIN EQUALS . restricciones
    (17) restricciones -> . WHERE restricciones2

    WHERE           shift and go to state 81

    restricciones                  shift and go to state 82

state 67

    (41) escritura -> PRINT LPAREN . escritura2 RPAREN SEMIC
    (42) escritura2 -> . expresion
    (43) escritura2 -> . CTESTRING
    (44) escritura2 -> . expresion DOT escritura2
    (45) escritura2 -> . CTESTRING DOT escritura2
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 85
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 93
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90
    escritura2                     shift and go to state 91

state 68

    (62) bloque2 -> estatuto bloque2 .

    SEMIC           reduce using rule 62 (bloque2 -> estatuto bloque2 .)
    ELSE            reduce using rule 62 (bloque2 -> estatuto bloque2 .)
    RCURLY          reduce using rule 62 (bloque2 -> estatuto bloque2 .)


state 69

    (20) for -> FOR ID . IN DOT ID LBRACKET estatuto RBRACKET

    IN              shift and go to state 98


state 70

<<<<<<< HEAD
    (46) asignacion -> ID POINTS . expresion SEMIC
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
=======
state 69
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9

    (45) asignacion -> ID EQUALS . expresion SEMIC
    (33) expresion -> . exp
    (34) expresion -> . exp LESSTHAN exp
    (35) expresion -> . exp GREATERTHAN exp
    (36) expresion -> . exp BETWEEN exp
    (37) exp -> . termino
    (38) exp -> . termino PLUS exp
    (39) exp -> . termino MINUS exp
    (28) termino -> . factor
    (29) termino -> . factor STAR termino
    (30) termino -> . factor SLASH termino
    (24) factor -> . PLUS varcte
    (25) factor -> . MINUS varcte
    (26) factor -> . varcte
    (27) factor -> . LPAREN expresion RPAREN
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 100
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 71

    (32) condicion -> IF LPAREN . expresion RPAREN bloque SEMIC
    (33) condicion -> IF LPAREN . expresion RPAREN bloque ELSE bloque SEMIC
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 101
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 72

    (87) programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY .

    $end            reduce using rule 87 (programa -> declaravars declarafuncion MODEL LCURLY declaravarsdata bloque2 RCURLY .)


state 73

    (16) funcionoptimizacion -> MAX EQUALS . restricciones
    (17) restricciones -> . WHERE restricciones2

    WHERE           shift and go to state 81

    restricciones                  shift and go to state 102

state 74

    (57) listaargs -> tipo ID liargs .

    RPAREN          reduce using rule 57 (listaargs -> tipo ID liargs .)


state 75

    (59) liargs -> COMMA . listaargs
    (56) listaargs -> . empty
    (57) listaargs -> . tipo ID liargs
    (88) empty -> .
    (65) tipo -> . TINT
    (66) tipo -> . TFLOAT
    (67) tipo -> . TBOOL

    RPAREN          reduce using rule 88 (empty -> .)
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 18
    TBOOL           shift and go to state 17

    listaargs                      shift and go to state 103
    tipo                           shift and go to state 33
    empty                          shift and go to state 35

state 76

    (58) liargs -> empty .

    RPAREN          reduce using rule 58 (liargs -> empty .)


state 77

    (55) funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY . declaravarsdata RCURLY
    (80) declaravarsdata -> . vars data
    (81) declaravarsdata -> . empty
    (82) declaravarsdata -> . vars
    (68) vars -> . VARS LCURLY listavars RCURLY
    (88) empty -> .

    VARS            shift and go to state 1
    RCURLY          reduce using rule 88 (empty -> .)

    vars                           shift and go to state 30
    declaravarsdata                shift and go to state 104
    empty                          shift and go to state 32

state 78

    (69) matriz -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    POINTS          reduce using rule 69 (matriz -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 79

    (11) listaasignacion -> asignacion . SEMIC lasignacion
    (12) listaasignacion -> asignacion .

    SEMIC           shift and go to state 105
    RCURLY          reduce using rule 12 (listaasignacion -> asignacion .)


state 80

    (10) data -> DATA LCURLY listaasignacion . RCURLY

    RCURLY          shift and go to state 106


state 81

    (17) restricciones -> WHERE . restricciones2
    (18) restricciones2 -> . expresion
    (19) restricciones2 -> . suma SEMIC listafor
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (24) suma -> . SUM LPAREN ID POINTS expresion RPAREN
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    SUM             shift and go to state 107
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 110
    varcte                         shift and go to state 87
    restricciones2                 shift and go to state 108
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90
    suma                           shift and go to state 109
    termino                        shift and go to state 84

state 82

    (15) funcionoptimizacion -> MIN EQUALS restricciones .

    ID              reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    IF              reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    PRINT           reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    MIN             reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    MAX             reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    RETURN          reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    FOR             reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    RCURLY          reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    SEMIC           reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    ELSE            reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)
    RBRACKET        reduce using rule 15 (funcionoptimizacion -> MIN EQUALS restricciones .)


state 83

    (28) factor -> LPAREN . expresion RPAREN
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 111
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 84

    (38) exp -> termino .
    (39) exp -> termino . PLUS exp
    (40) exp -> termino . MINUS exp

    LESSTHAN        reduce using rule 38 (exp -> termino .)
    GREATERTHAN     reduce using rule 38 (exp -> termino .)
    BETWEEN         reduce using rule 38 (exp -> termino .)
    DOT             reduce using rule 38 (exp -> termino .)
    RPAREN          reduce using rule 38 (exp -> termino .)
    SEMIC           reduce using rule 38 (exp -> termino .)
    ID              reduce using rule 38 (exp -> termino .)
    IF              reduce using rule 38 (exp -> termino .)
    PRINT           reduce using rule 38 (exp -> termino .)
    MIN             reduce using rule 38 (exp -> termino .)
    MAX             reduce using rule 38 (exp -> termino .)
    RETURN          reduce using rule 38 (exp -> termino .)
    FOR             reduce using rule 38 (exp -> termino .)
    RCURLY          reduce using rule 38 (exp -> termino .)
    ELSE            reduce using rule 38 (exp -> termino .)
    RBRACKET        reduce using rule 38 (exp -> termino .)
    PLUS            shift and go to state 112
    MINUS           shift and go to state 113


state 85

    (43) escritura2 -> CTESTRING .
    (45) escritura2 -> CTESTRING . DOT escritura2
    (3) varcte -> CTESTRING .

  ! shift/reduce conflict for DOT resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 3 (varcte -> CTESTRING .)
    DOT             shift and go to state 114
    STAR            reduce using rule 3 (varcte -> CTESTRING .)
    SLASH           reduce using rule 3 (varcte -> CTESTRING .)
    PLUS            reduce using rule 3 (varcte -> CTESTRING .)
    MINUS           reduce using rule 3 (varcte -> CTESTRING .)
    LESSTHAN        reduce using rule 3 (varcte -> CTESTRING .)
    GREATERTHAN     reduce using rule 3 (varcte -> CTESTRING .)
    BETWEEN         reduce using rule 3 (varcte -> CTESTRING .)
    RPAREN          reduce using rule 3 (varcte -> CTESTRING .)

  ! RPAREN          [ reduce using rule 43 (escritura2 -> CTESTRING .) ]
  ! DOT             [ reduce using rule 3 (varcte -> CTESTRING .) ]


state 86

    (26) factor -> MINUS . varcte
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    llamadafuncion                 shift and go to state 90
    varcte                         shift and go to state 115

state 87

    (27) factor -> varcte .

    STAR            reduce using rule 27 (factor -> varcte .)
    SLASH           reduce using rule 27 (factor -> varcte .)
    PLUS            reduce using rule 27 (factor -> varcte .)
    MINUS           reduce using rule 27 (factor -> varcte .)
    LESSTHAN        reduce using rule 27 (factor -> varcte .)
    GREATERTHAN     reduce using rule 27 (factor -> varcte .)
    BETWEEN         reduce using rule 27 (factor -> varcte .)
    DOT             reduce using rule 27 (factor -> varcte .)
    RPAREN          reduce using rule 27 (factor -> varcte .)
    SEMIC           reduce using rule 27 (factor -> varcte .)
    ID              reduce using rule 27 (factor -> varcte .)
    IF              reduce using rule 27 (factor -> varcte .)
    PRINT           reduce using rule 27 (factor -> varcte .)
    MIN             reduce using rule 27 (factor -> varcte .)
    MAX             reduce using rule 27 (factor -> varcte .)
    RETURN          reduce using rule 27 (factor -> varcte .)
    FOR             reduce using rule 27 (factor -> varcte .)
    RCURLY          reduce using rule 27 (factor -> varcte .)
    ELSE            reduce using rule 27 (factor -> varcte .)
    RBRACKET        reduce using rule 27 (factor -> varcte .)


state 88

    (25) factor -> PLUS . varcte
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    llamadafuncion                 shift and go to state 90
    varcte                         shift and go to state 116

state 89

    (29) termino -> factor .
    (30) termino -> factor . STAR termino
    (31) termino -> factor . SLASH termino

    PLUS            reduce using rule 29 (termino -> factor .)
    MINUS           reduce using rule 29 (termino -> factor .)
    LESSTHAN        reduce using rule 29 (termino -> factor .)
    GREATERTHAN     reduce using rule 29 (termino -> factor .)
    BETWEEN         reduce using rule 29 (termino -> factor .)
    DOT             reduce using rule 29 (termino -> factor .)
    RPAREN          reduce using rule 29 (termino -> factor .)
    ID              reduce using rule 29 (termino -> factor .)
    IF              reduce using rule 29 (termino -> factor .)
    PRINT           reduce using rule 29 (termino -> factor .)
    MIN             reduce using rule 29 (termino -> factor .)
    MAX             reduce using rule 29 (termino -> factor .)
    RETURN          reduce using rule 29 (termino -> factor .)
    FOR             reduce using rule 29 (termino -> factor .)
    RCURLY          reduce using rule 29 (termino -> factor .)
    SEMIC           reduce using rule 29 (termino -> factor .)
    ELSE            reduce using rule 29 (termino -> factor .)
    RBRACKET        reduce using rule 29 (termino -> factor .)
    STAR            shift and go to state 117
    SLASH           shift and go to state 118


state 90

    (6) varcte -> llamadafuncion .

    STAR            reduce using rule 6 (varcte -> llamadafuncion .)
    SLASH           reduce using rule 6 (varcte -> llamadafuncion .)
    PLUS            reduce using rule 6 (varcte -> llamadafuncion .)
    MINUS           reduce using rule 6 (varcte -> llamadafuncion .)
    LESSTHAN        reduce using rule 6 (varcte -> llamadafuncion .)
    GREATERTHAN     reduce using rule 6 (varcte -> llamadafuncion .)
    BETWEEN         reduce using rule 6 (varcte -> llamadafuncion .)
    DOT             reduce using rule 6 (varcte -> llamadafuncion .)
    RPAREN          reduce using rule 6 (varcte -> llamadafuncion .)
    SEMIC           reduce using rule 6 (varcte -> llamadafuncion .)
    ID              reduce using rule 6 (varcte -> llamadafuncion .)
    IF              reduce using rule 6 (varcte -> llamadafuncion .)
    PRINT           reduce using rule 6 (varcte -> llamadafuncion .)
    MIN             reduce using rule 6 (varcte -> llamadafuncion .)
    MAX             reduce using rule 6 (varcte -> llamadafuncion .)
    RETURN          reduce using rule 6 (varcte -> llamadafuncion .)
    FOR             reduce using rule 6 (varcte -> llamadafuncion .)
    RCURLY          reduce using rule 6 (varcte -> llamadafuncion .)
    ELSE            reduce using rule 6 (varcte -> llamadafuncion .)
    RBRACKET        reduce using rule 6 (varcte -> llamadafuncion .)


state 91

    (41) escritura -> PRINT LPAREN escritura2 . RPAREN SEMIC

    RPAREN          shift and go to state 119


state 92

    (5) varcte -> ID .
    (7) llamadafuncion -> ID . LPAREN expresion RPAREN
    (8) llamadafuncion -> ID . LPAREN CTEI RPAREN
    (9) llamadafuncion -> ID . LPAREN CTEF RPAREN

    STAR            reduce using rule 5 (varcte -> ID .)
    SLASH           reduce using rule 5 (varcte -> ID .)
    PLUS            reduce using rule 5 (varcte -> ID .)
    MINUS           reduce using rule 5 (varcte -> ID .)
    LESSTHAN        reduce using rule 5 (varcte -> ID .)
    GREATERTHAN     reduce using rule 5 (varcte -> ID .)
    BETWEEN         reduce using rule 5 (varcte -> ID .)
    DOT             reduce using rule 5 (varcte -> ID .)
    RPAREN          reduce using rule 5 (varcte -> ID .)
    SEMIC           reduce using rule 5 (varcte -> ID .)
    ID              reduce using rule 5 (varcte -> ID .)
    IF              reduce using rule 5 (varcte -> ID .)
    PRINT           reduce using rule 5 (varcte -> ID .)
    MIN             reduce using rule 5 (varcte -> ID .)
    MAX             reduce using rule 5 (varcte -> ID .)
    RETURN          reduce using rule 5 (varcte -> ID .)
    FOR             reduce using rule 5 (varcte -> ID .)
    RCURLY          reduce using rule 5 (varcte -> ID .)
    ELSE            reduce using rule 5 (varcte -> ID .)
    RBRACKET        reduce using rule 5 (varcte -> ID .)
    LPAREN          shift and go to state 120


state 93

    (42) escritura2 -> expresion .
    (44) escritura2 -> expresion . DOT escritura2

    RPAREN          reduce using rule 42 (escritura2 -> expresion .)
    DOT             shift and go to state 121


state 94

    (4) varcte -> CTEBOOL .

    STAR            reduce using rule 4 (varcte -> CTEBOOL .)
    SLASH           reduce using rule 4 (varcte -> CTEBOOL .)
    PLUS            reduce using rule 4 (varcte -> CTEBOOL .)
    MINUS           reduce using rule 4 (varcte -> CTEBOOL .)
    LESSTHAN        reduce using rule 4 (varcte -> CTEBOOL .)
    GREATERTHAN     reduce using rule 4 (varcte -> CTEBOOL .)
    BETWEEN         reduce using rule 4 (varcte -> CTEBOOL .)
    DOT             reduce using rule 4 (varcte -> CTEBOOL .)
    RPAREN          reduce using rule 4 (varcte -> CTEBOOL .)
    SEMIC           reduce using rule 4 (varcte -> CTEBOOL .)
    ID              reduce using rule 4 (varcte -> CTEBOOL .)
    IF              reduce using rule 4 (varcte -> CTEBOOL .)
    PRINT           reduce using rule 4 (varcte -> CTEBOOL .)
    MIN             reduce using rule 4 (varcte -> CTEBOOL .)
    MAX             reduce using rule 4 (varcte -> CTEBOOL .)
    RETURN          reduce using rule 4 (varcte -> CTEBOOL .)
    FOR             reduce using rule 4 (varcte -> CTEBOOL .)
    RCURLY          reduce using rule 4 (varcte -> CTEBOOL .)
    ELSE            reduce using rule 4 (varcte -> CTEBOOL .)
    RBRACKET        reduce using rule 4 (varcte -> CTEBOOL .)


state 95

    (2) varcte -> CTEF .

    STAR            reduce using rule 2 (varcte -> CTEF .)
    SLASH           reduce using rule 2 (varcte -> CTEF .)
    PLUS            reduce using rule 2 (varcte -> CTEF .)
    MINUS           reduce using rule 2 (varcte -> CTEF .)
    LESSTHAN        reduce using rule 2 (varcte -> CTEF .)
    GREATERTHAN     reduce using rule 2 (varcte -> CTEF .)
    BETWEEN         reduce using rule 2 (varcte -> CTEF .)
    DOT             reduce using rule 2 (varcte -> CTEF .)
    RPAREN          reduce using rule 2 (varcte -> CTEF .)
    SEMIC           reduce using rule 2 (varcte -> CTEF .)
    ID              reduce using rule 2 (varcte -> CTEF .)
    IF              reduce using rule 2 (varcte -> CTEF .)
    PRINT           reduce using rule 2 (varcte -> CTEF .)
    MIN             reduce using rule 2 (varcte -> CTEF .)
    MAX             reduce using rule 2 (varcte -> CTEF .)
    RETURN          reduce using rule 2 (varcte -> CTEF .)
    FOR             reduce using rule 2 (varcte -> CTEF .)
    RCURLY          reduce using rule 2 (varcte -> CTEF .)
    ELSE            reduce using rule 2 (varcte -> CTEF .)
    RBRACKET        reduce using rule 2 (varcte -> CTEF .)


state 96

    (34) expresion -> exp .
    (35) expresion -> exp . LESSTHAN exp
    (36) expresion -> exp . GREATERTHAN exp
    (37) expresion -> exp . BETWEEN exp

    SEMIC           reduce using rule 34 (expresion -> exp .)
    RPAREN          reduce using rule 34 (expresion -> exp .)
    DOT             reduce using rule 34 (expresion -> exp .)
    ID              reduce using rule 34 (expresion -> exp .)
    IF              reduce using rule 34 (expresion -> exp .)
    PRINT           reduce using rule 34 (expresion -> exp .)
    MIN             reduce using rule 34 (expresion -> exp .)
    MAX             reduce using rule 34 (expresion -> exp .)
    RETURN          reduce using rule 34 (expresion -> exp .)
    FOR             reduce using rule 34 (expresion -> exp .)
    RCURLY          reduce using rule 34 (expresion -> exp .)
    ELSE            reduce using rule 34 (expresion -> exp .)
    RBRACKET        reduce using rule 34 (expresion -> exp .)
    LESSTHAN        shift and go to state 122
    GREATERTHAN     shift and go to state 123
    BETWEEN         shift and go to state 124


state 97

    (1) varcte -> CTEI .

    STAR            reduce using rule 1 (varcte -> CTEI .)
    SLASH           reduce using rule 1 (varcte -> CTEI .)
    PLUS            reduce using rule 1 (varcte -> CTEI .)
    MINUS           reduce using rule 1 (varcte -> CTEI .)
    LESSTHAN        reduce using rule 1 (varcte -> CTEI .)
    GREATERTHAN     reduce using rule 1 (varcte -> CTEI .)
    BETWEEN         reduce using rule 1 (varcte -> CTEI .)
    DOT             reduce using rule 1 (varcte -> CTEI .)
    RPAREN          reduce using rule 1 (varcte -> CTEI .)
    SEMIC           reduce using rule 1 (varcte -> CTEI .)
    ID              reduce using rule 1 (varcte -> CTEI .)
    IF              reduce using rule 1 (varcte -> CTEI .)
    PRINT           reduce using rule 1 (varcte -> CTEI .)
    MIN             reduce using rule 1 (varcte -> CTEI .)
    MAX             reduce using rule 1 (varcte -> CTEI .)
    RETURN          reduce using rule 1 (varcte -> CTEI .)
    FOR             reduce using rule 1 (varcte -> CTEI .)
    RCURLY          reduce using rule 1 (varcte -> CTEI .)
    ELSE            reduce using rule 1 (varcte -> CTEI .)
    RBRACKET        reduce using rule 1 (varcte -> CTEI .)


state 98

    (20) for -> FOR ID IN . DOT ID LBRACKET estatuto RBRACKET

    DOT             shift and go to state 125


state 99

    (3) varcte -> CTESTRING .

    STAR            reduce using rule 3 (varcte -> CTESTRING .)
    SLASH           reduce using rule 3 (varcte -> CTESTRING .)
    PLUS            reduce using rule 3 (varcte -> CTESTRING .)
    MINUS           reduce using rule 3 (varcte -> CTESTRING .)
    LESSTHAN        reduce using rule 3 (varcte -> CTESTRING .)
    GREATERTHAN     reduce using rule 3 (varcte -> CTESTRING .)
    BETWEEN         reduce using rule 3 (varcte -> CTESTRING .)
    RPAREN          reduce using rule 3 (varcte -> CTESTRING .)
    DOT             reduce using rule 3 (varcte -> CTESTRING .)
    SEMIC           reduce using rule 3 (varcte -> CTESTRING .)
    ID              reduce using rule 3 (varcte -> CTESTRING .)
    IF              reduce using rule 3 (varcte -> CTESTRING .)
    PRINT           reduce using rule 3 (varcte -> CTESTRING .)
    MIN             reduce using rule 3 (varcte -> CTESTRING .)
    MAX             reduce using rule 3 (varcte -> CTESTRING .)
    RETURN          reduce using rule 3 (varcte -> CTESTRING .)
    FOR             reduce using rule 3 (varcte -> CTESTRING .)
    RCURLY          reduce using rule 3 (varcte -> CTESTRING .)
    ELSE            reduce using rule 3 (varcte -> CTESTRING .)
    RBRACKET        reduce using rule 3 (varcte -> CTESTRING .)
<<<<<<< HEAD
=======
    LESSTHAN        reduce using rule 3 (varcte -> CTESTRING .)
    GREATERTHAN     reduce using rule 3 (varcte -> CTESTRING .)
    BETWEEN         reduce using rule 3 (varcte -> CTESTRING .)


<<<<<<< HEAD
state 109

    (45) asignacion -> ID POINTS expresion . SEMIC

    SEMIC           shift and go to state 134


state 110
=======
state 99

    (45) asignacion -> ID EQUALS expresion . SEMIC

    SEMIC           shift and go to state 125
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319


state 100

    (46) asignacion -> ID POINTS expresion . SEMIC

    SEMIC           shift and go to state 126


state 101

    (32) condicion -> IF LPAREN expresion . RPAREN bloque SEMIC
    (33) condicion -> IF LPAREN expresion . RPAREN bloque ELSE bloque SEMIC

    RPAREN          shift and go to state 127


state 102

    (16) funcionoptimizacion -> MAX EQUALS restricciones .

    ID              reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    IF              reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    PRINT           reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    MIN             reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    MAX             reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    RETURN          reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    FOR             reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    RCURLY          reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    SEMIC           reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    ELSE            reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)
    RBRACKET        reduce using rule 16 (funcionoptimizacion -> MAX EQUALS restricciones .)


state 103

<<<<<<< HEAD
    (59) liargs -> COMMA listaargs .

    RPAREN          reduce using rule 59 (liargs -> COMMA listaargs .)
=======
    (54) funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata . bloque RCURLY
    (59) bloque -> . bloque2
    (60) bloque -> . LCURLY RCURLY
    (61) bloque2 -> . estatuto bloque2
    (62) bloque2 -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    LCURLY          shift and go to state 127
    ID              shift and go to state 53
    IF              shift and go to state 54
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 57
    RETURN          shift and go to state 43
    FOR             shift and go to state 51
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319


state 104

    (55) funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata . RCURLY

    RCURLY          shift and go to state 128


state 105

    (11) listaasignacion -> asignacion SEMIC . lasignacion
    (13) lasignacion -> . empty
    (14) lasignacion -> . listaasignacion
    (88) empty -> .
    (11) listaasignacion -> . asignacion SEMIC lasignacion
<<<<<<< HEAD
    (12) listaasignacion -> . asignacion
    (46) asignacion -> . ID POINTS expresion SEMIC
=======
    (45) asignacion -> . ID EQUALS expresion SEMIC
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

    RCURLY          reduce using rule 88 (empty -> .)
    ID              shift and go to state 54

    listaasignacion                shift and go to state 129
    lasignacion                    shift and go to state 130
    empty                          shift and go to state 131
    asignacion                     shift and go to state 79

state 106

    (10) data -> DATA LCURLY listaasignacion RCURLY .

    ID              reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    IF              reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    PRINT           reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    MIN             reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    MAX             reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    RETURN          reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    FOR             reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)
    RCURLY          reduce using rule 10 (data -> DATA LCURLY listaasignacion RCURLY .)


state 107

    (24) suma -> SUM . LPAREN ID POINTS expresion RPAREN

    LPAREN          shift and go to state 132


state 108

    (17) restricciones -> WHERE restricciones2 .

    ID              reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    IF              reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    PRINT           reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    MIN             reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    MAX             reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    RETURN          reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    FOR             reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    RCURLY          reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    SEMIC           reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    ELSE            reduce using rule 17 (restricciones -> WHERE restricciones2 .)
    RBRACKET        reduce using rule 17 (restricciones -> WHERE restricciones2 .)


state 109

    (19) restricciones2 -> suma . SEMIC listafor

    SEMIC           shift and go to state 133


state 110

    (18) restricciones2 -> expresion .

    ID              reduce using rule 18 (restricciones2 -> expresion .)
    IF              reduce using rule 18 (restricciones2 -> expresion .)
    PRINT           reduce using rule 18 (restricciones2 -> expresion .)
    MIN             reduce using rule 18 (restricciones2 -> expresion .)
    MAX             reduce using rule 18 (restricciones2 -> expresion .)
    RETURN          reduce using rule 18 (restricciones2 -> expresion .)
    FOR             reduce using rule 18 (restricciones2 -> expresion .)
    RCURLY          reduce using rule 18 (restricciones2 -> expresion .)
    SEMIC           reduce using rule 18 (restricciones2 -> expresion .)
    ELSE            reduce using rule 18 (restricciones2 -> expresion .)
    RBRACKET        reduce using rule 18 (restricciones2 -> expresion .)


state 111

    (28) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 134


state 112

    (39) exp -> termino PLUS . exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 135
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 113

    (40) exp -> termino MINUS . exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 136
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 114

    (45) escritura2 -> CTESTRING DOT . escritura2
    (42) escritura2 -> . expresion
    (43) escritura2 -> . CTESTRING
    (44) escritura2 -> . expresion DOT escritura2
    (45) escritura2 -> . CTESTRING DOT escritura2
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 85
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 93
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90
    escritura2                     shift and go to state 137

state 115

    (26) factor -> MINUS varcte .

    STAR            reduce using rule 26 (factor -> MINUS varcte .)
    SLASH           reduce using rule 26 (factor -> MINUS varcte .)
    PLUS            reduce using rule 26 (factor -> MINUS varcte .)
    MINUS           reduce using rule 26 (factor -> MINUS varcte .)
    LESSTHAN        reduce using rule 26 (factor -> MINUS varcte .)
    GREATERTHAN     reduce using rule 26 (factor -> MINUS varcte .)
    BETWEEN         reduce using rule 26 (factor -> MINUS varcte .)
    DOT             reduce using rule 26 (factor -> MINUS varcte .)
    RPAREN          reduce using rule 26 (factor -> MINUS varcte .)
    SEMIC           reduce using rule 26 (factor -> MINUS varcte .)
    ID              reduce using rule 26 (factor -> MINUS varcte .)
    IF              reduce using rule 26 (factor -> MINUS varcte .)
    PRINT           reduce using rule 26 (factor -> MINUS varcte .)
    MIN             reduce using rule 26 (factor -> MINUS varcte .)
    MAX             reduce using rule 26 (factor -> MINUS varcte .)
    RETURN          reduce using rule 26 (factor -> MINUS varcte .)
    FOR             reduce using rule 26 (factor -> MINUS varcte .)
    RCURLY          reduce using rule 26 (factor -> MINUS varcte .)
    ELSE            reduce using rule 26 (factor -> MINUS varcte .)
    RBRACKET        reduce using rule 26 (factor -> MINUS varcte .)


state 116

    (25) factor -> PLUS varcte .

    STAR            reduce using rule 25 (factor -> PLUS varcte .)
    SLASH           reduce using rule 25 (factor -> PLUS varcte .)
    PLUS            reduce using rule 25 (factor -> PLUS varcte .)
    MINUS           reduce using rule 25 (factor -> PLUS varcte .)
    LESSTHAN        reduce using rule 25 (factor -> PLUS varcte .)
    GREATERTHAN     reduce using rule 25 (factor -> PLUS varcte .)
    BETWEEN         reduce using rule 25 (factor -> PLUS varcte .)
    DOT             reduce using rule 25 (factor -> PLUS varcte .)
    RPAREN          reduce using rule 25 (factor -> PLUS varcte .)
    SEMIC           reduce using rule 25 (factor -> PLUS varcte .)
    ID              reduce using rule 25 (factor -> PLUS varcte .)
    IF              reduce using rule 25 (factor -> PLUS varcte .)
    PRINT           reduce using rule 25 (factor -> PLUS varcte .)
    MIN             reduce using rule 25 (factor -> PLUS varcte .)
    MAX             reduce using rule 25 (factor -> PLUS varcte .)
    RETURN          reduce using rule 25 (factor -> PLUS varcte .)
    FOR             reduce using rule 25 (factor -> PLUS varcte .)
    RCURLY          reduce using rule 25 (factor -> PLUS varcte .)
    ELSE            reduce using rule 25 (factor -> PLUS varcte .)
    RBRACKET        reduce using rule 25 (factor -> PLUS varcte .)


state 117

    (30) termino -> factor STAR . termino
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    llamadafuncion                 shift and go to state 90
    termino                        shift and go to state 138
    factor                         shift and go to state 89

state 118

    (31) termino -> factor SLASH . termino
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    llamadafuncion                 shift and go to state 90
    termino                        shift and go to state 139
    factor                         shift and go to state 89

state 119

    (41) escritura -> PRINT LPAREN escritura2 RPAREN . SEMIC

    SEMIC           shift and go to state 140


state 120

    (7) llamadafuncion -> ID LPAREN . expresion RPAREN
    (8) llamadafuncion -> ID LPAREN . CTEI RPAREN
    (9) llamadafuncion -> ID LPAREN . CTEF RPAREN
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTEI            shift and go to state 143
    CTEF            shift and go to state 142
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 141
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 121

    (44) escritura2 -> expresion DOT . escritura2
    (42) escritura2 -> . expresion
    (43) escritura2 -> . CTESTRING
    (44) escritura2 -> . expresion DOT escritura2
    (45) escritura2 -> . CTESTRING DOT escritura2
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    CTESTRING       shift and go to state 85
    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 93
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90
    escritura2                     shift and go to state 144

state 122

    (35) expresion -> exp LESSTHAN . exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 145
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 123

    (36) expresion -> exp GREATERTHAN . exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 146
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 124

    (37) expresion -> exp BETWEEN . exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 147
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 125

    (20) for -> FOR ID IN DOT . ID LBRACKET estatuto RBRACKET

    ID              shift and go to state 148


state 126

<<<<<<< HEAD
    (46) asignacion -> ID POINTS expresion SEMIC .

    ID              reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    IF              reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    PRINT           reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    MIN             reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    MAX             reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    RETURN          reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    FOR             reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    RCURLY          reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    SEMIC           reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    ELSE            reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)
    RBRACKET        reduce using rule 46 (asignacion -> ID POINTS expresion SEMIC .)


state 127
=======
    (45) asignacion -> ID EQUALS expresion SEMIC .

    SEMIC           reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    ID              reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    IF              reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    PRINT           reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    MIN             reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    MAX             reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    RETURN          reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    FOR             reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    RCURLY          reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    ELSE            reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)
    RBRACKET        reduce using rule 45 (asignacion -> ID EQUALS expresion SEMIC .)


<<<<<<< HEAD
state 135
=======
state 126
>>>>>>> 8f8d0b716d216a97329208a35b615a1b1ee757e9

    (31) condicion -> IF LPAREN expresion RPAREN . bloque SEMIC
    (32) condicion -> IF LPAREN expresion RPAREN . bloque ELSE bloque SEMIC
    (59) bloque -> . bloque2
    (60) bloque -> . LCURLY RCURLY
    (61) bloque2 -> . estatuto bloque2
    (62) bloque2 -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

<<<<<<< HEAD
    LCURLY          shift and go to state 48

    bloque                         shift and go to state 153
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319

    (32) condicion -> IF LPAREN expresion RPAREN . bloque SEMIC
    (33) condicion -> IF LPAREN expresion RPAREN . bloque ELSE bloque SEMIC
    (60) bloque -> . bloque2
    (61) bloque -> . LCURLY RCURLY
    (62) bloque2 -> . estatuto bloque2
    (63) bloque2 -> . estatuto
    (64) bloque2 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . funcionoptimizacion
    (51) estatuto -> . ciclo
    (52) estatuto -> . retorno
    (88) empty -> .
    (46) asignacion -> . ID POINTS expresion SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (41) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (15) funcionoptimizacion -> . MIN EQUALS restricciones
    (16) funcionoptimizacion -> . MAX EQUALS restricciones
    (53) ciclo -> . for
    (54) retorno -> . RETURN asignacion
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    LCURLY          shift and go to state 149
    SEMIC           reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    ID              shift and go to state 54
    IF              shift and go to state 55
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 58
    RETURN          shift and go to state 43
    FOR             shift and go to state 52

    bloque2                        shift and go to state 151
    ciclo                          shift and go to state 46
    asignacion                     shift and go to state 57
    funcionoptimizacion            shift and go to state 53
    estatuto                       shift and go to state 48
    for                            shift and go to state 47
    condicion                      shift and go to state 49
    retorno                        shift and go to state 50
    bloque                         shift and go to state 150
    empty                          shift and go to state 51
    escritura                      shift and go to state 59

state 128

    (55) funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY .

    MODEL           reduce using rule 55 (funcion -> FUNC ID LPAREN listaargs RPAREN LCURLY declaravarsdata RCURLY .)


state 129

    (14) lasignacion -> listaasignacion .

    RCURLY          reduce using rule 14 (lasignacion -> listaasignacion .)


state 130

    (11) listaasignacion -> asignacion SEMIC lasignacion .

    RCURLY          reduce using rule 11 (listaasignacion -> asignacion SEMIC lasignacion .)


state 131

    (13) lasignacion -> empty .

    RCURLY          reduce using rule 13 (lasignacion -> empty .)


state 132

    (24) suma -> SUM LPAREN . ID POINTS expresion RPAREN

    ID              shift and go to state 152


state 133

    (19) restricciones2 -> suma SEMIC . listafor
    (21) listafor -> . for SEMIC lfor
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    FOR             shift and go to state 52

    listafor                       shift and go to state 153
    for                            shift and go to state 154

state 134

    (28) factor -> LPAREN expresion RPAREN .

    STAR            reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    DOT             reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    IF              reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    PRINT           reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    MIN             reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    MAX             reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    RETURN          reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    FOR             reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    ELSE            reduce using rule 28 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 28 (factor -> LPAREN expresion RPAREN .)


state 135

    (39) exp -> termino PLUS exp .

    LESSTHAN        reduce using rule 39 (exp -> termino PLUS exp .)
    GREATERTHAN     reduce using rule 39 (exp -> termino PLUS exp .)
    BETWEEN         reduce using rule 39 (exp -> termino PLUS exp .)
    DOT             reduce using rule 39 (exp -> termino PLUS exp .)
    RPAREN          reduce using rule 39 (exp -> termino PLUS exp .)
    SEMIC           reduce using rule 39 (exp -> termino PLUS exp .)
    ID              reduce using rule 39 (exp -> termino PLUS exp .)
    IF              reduce using rule 39 (exp -> termino PLUS exp .)
    PRINT           reduce using rule 39 (exp -> termino PLUS exp .)
    MIN             reduce using rule 39 (exp -> termino PLUS exp .)
    MAX             reduce using rule 39 (exp -> termino PLUS exp .)
    RETURN          reduce using rule 39 (exp -> termino PLUS exp .)
    FOR             reduce using rule 39 (exp -> termino PLUS exp .)
    RCURLY          reduce using rule 39 (exp -> termino PLUS exp .)
    ELSE            reduce using rule 39 (exp -> termino PLUS exp .)
    RBRACKET        reduce using rule 39 (exp -> termino PLUS exp .)


state 136

    (40) exp -> termino MINUS exp .

    LESSTHAN        reduce using rule 40 (exp -> termino MINUS exp .)
    GREATERTHAN     reduce using rule 40 (exp -> termino MINUS exp .)
    BETWEEN         reduce using rule 40 (exp -> termino MINUS exp .)
    DOT             reduce using rule 40 (exp -> termino MINUS exp .)
    RPAREN          reduce using rule 40 (exp -> termino MINUS exp .)
    SEMIC           reduce using rule 40 (exp -> termino MINUS exp .)
    ID              reduce using rule 40 (exp -> termino MINUS exp .)
    IF              reduce using rule 40 (exp -> termino MINUS exp .)
    PRINT           reduce using rule 40 (exp -> termino MINUS exp .)
    MIN             reduce using rule 40 (exp -> termino MINUS exp .)
    MAX             reduce using rule 40 (exp -> termino MINUS exp .)
    RETURN          reduce using rule 40 (exp -> termino MINUS exp .)
    FOR             reduce using rule 40 (exp -> termino MINUS exp .)
    RCURLY          reduce using rule 40 (exp -> termino MINUS exp .)
    ELSE            reduce using rule 40 (exp -> termino MINUS exp .)
    RBRACKET        reduce using rule 40 (exp -> termino MINUS exp .)


state 137

    (45) escritura2 -> CTESTRING DOT escritura2 .

    RPAREN          reduce using rule 45 (escritura2 -> CTESTRING DOT escritura2 .)


state 138

    (30) termino -> factor STAR termino .

    PLUS            reduce using rule 30 (termino -> factor STAR termino .)
    MINUS           reduce using rule 30 (termino -> factor STAR termino .)
    LESSTHAN        reduce using rule 30 (termino -> factor STAR termino .)
    GREATERTHAN     reduce using rule 30 (termino -> factor STAR termino .)
    BETWEEN         reduce using rule 30 (termino -> factor STAR termino .)
    DOT             reduce using rule 30 (termino -> factor STAR termino .)
    RPAREN          reduce using rule 30 (termino -> factor STAR termino .)
    ID              reduce using rule 30 (termino -> factor STAR termino .)
    IF              reduce using rule 30 (termino -> factor STAR termino .)
    PRINT           reduce using rule 30 (termino -> factor STAR termino .)
    MIN             reduce using rule 30 (termino -> factor STAR termino .)
    MAX             reduce using rule 30 (termino -> factor STAR termino .)
    RETURN          reduce using rule 30 (termino -> factor STAR termino .)
    FOR             reduce using rule 30 (termino -> factor STAR termino .)
    RCURLY          reduce using rule 30 (termino -> factor STAR termino .)
    SEMIC           reduce using rule 30 (termino -> factor STAR termino .)
    ELSE            reduce using rule 30 (termino -> factor STAR termino .)
    RBRACKET        reduce using rule 30 (termino -> factor STAR termino .)


state 139

    (31) termino -> factor SLASH termino .

    PLUS            reduce using rule 31 (termino -> factor SLASH termino .)
    MINUS           reduce using rule 31 (termino -> factor SLASH termino .)
    LESSTHAN        reduce using rule 31 (termino -> factor SLASH termino .)
    GREATERTHAN     reduce using rule 31 (termino -> factor SLASH termino .)
    BETWEEN         reduce using rule 31 (termino -> factor SLASH termino .)
    DOT             reduce using rule 31 (termino -> factor SLASH termino .)
    RPAREN          reduce using rule 31 (termino -> factor SLASH termino .)
    ID              reduce using rule 31 (termino -> factor SLASH termino .)
    IF              reduce using rule 31 (termino -> factor SLASH termino .)
    PRINT           reduce using rule 31 (termino -> factor SLASH termino .)
    MIN             reduce using rule 31 (termino -> factor SLASH termino .)
    MAX             reduce using rule 31 (termino -> factor SLASH termino .)
    RETURN          reduce using rule 31 (termino -> factor SLASH termino .)
    FOR             reduce using rule 31 (termino -> factor SLASH termino .)
    RCURLY          reduce using rule 31 (termino -> factor SLASH termino .)
    SEMIC           reduce using rule 31 (termino -> factor SLASH termino .)
    ELSE            reduce using rule 31 (termino -> factor SLASH termino .)
    RBRACKET        reduce using rule 31 (termino -> factor SLASH termino .)


state 140

    (41) escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .

    RBRACKET        reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    ID              reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    IF              reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    PRINT           reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    MIN             reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    MAX             reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    RETURN          reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    FOR             reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    SEMIC           reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    RCURLY          reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)
    ELSE            reduce using rule 41 (escritura -> PRINT LPAREN escritura2 RPAREN SEMIC .)


state 141

    (7) llamadafuncion -> ID LPAREN expresion . RPAREN

    RPAREN          shift and go to state 155


state 142

    (9) llamadafuncion -> ID LPAREN CTEF . RPAREN
    (2) varcte -> CTEF .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 156
    STAR            reduce using rule 2 (varcte -> CTEF .)
    SLASH           reduce using rule 2 (varcte -> CTEF .)
    PLUS            reduce using rule 2 (varcte -> CTEF .)
    MINUS           reduce using rule 2 (varcte -> CTEF .)
    LESSTHAN        reduce using rule 2 (varcte -> CTEF .)
    GREATERTHAN     reduce using rule 2 (varcte -> CTEF .)
    BETWEEN         reduce using rule 2 (varcte -> CTEF .)

  ! RPAREN          [ reduce using rule 2 (varcte -> CTEF .) ]


state 143

    (8) llamadafuncion -> ID LPAREN CTEI . RPAREN
    (1) varcte -> CTEI .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 157
    STAR            reduce using rule 1 (varcte -> CTEI .)
    SLASH           reduce using rule 1 (varcte -> CTEI .)
    PLUS            reduce using rule 1 (varcte -> CTEI .)
    MINUS           reduce using rule 1 (varcte -> CTEI .)
    LESSTHAN        reduce using rule 1 (varcte -> CTEI .)
    GREATERTHAN     reduce using rule 1 (varcte -> CTEI .)
    BETWEEN         reduce using rule 1 (varcte -> CTEI .)

  ! RPAREN          [ reduce using rule 1 (varcte -> CTEI .) ]


state 144

    (44) escritura2 -> expresion DOT escritura2 .

    RPAREN          reduce using rule 44 (escritura2 -> expresion DOT escritura2 .)


state 145

    (35) expresion -> exp LESSTHAN exp .

    SEMIC           reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    RPAREN          reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    DOT             reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    ID              reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    IF              reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    PRINT           reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    MIN             reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    MAX             reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    RETURN          reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    FOR             reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    RCURLY          reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    ELSE            reduce using rule 35 (expresion -> exp LESSTHAN exp .)
    RBRACKET        reduce using rule 35 (expresion -> exp LESSTHAN exp .)


state 146

    (36) expresion -> exp GREATERTHAN exp .

    SEMIC           reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    RPAREN          reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    DOT             reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    ID              reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    IF              reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    PRINT           reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    MIN             reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    MAX             reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    RETURN          reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    FOR             reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    RCURLY          reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    ELSE            reduce using rule 36 (expresion -> exp GREATERTHAN exp .)
    RBRACKET        reduce using rule 36 (expresion -> exp GREATERTHAN exp .)


state 147

    (37) expresion -> exp BETWEEN exp .

    SEMIC           reduce using rule 37 (expresion -> exp BETWEEN exp .)
    RPAREN          reduce using rule 37 (expresion -> exp BETWEEN exp .)
    DOT             reduce using rule 37 (expresion -> exp BETWEEN exp .)
    ID              reduce using rule 37 (expresion -> exp BETWEEN exp .)
    IF              reduce using rule 37 (expresion -> exp BETWEEN exp .)
    PRINT           reduce using rule 37 (expresion -> exp BETWEEN exp .)
    MIN             reduce using rule 37 (expresion -> exp BETWEEN exp .)
    MAX             reduce using rule 37 (expresion -> exp BETWEEN exp .)
    RETURN          reduce using rule 37 (expresion -> exp BETWEEN exp .)
    FOR             reduce using rule 37 (expresion -> exp BETWEEN exp .)
    RCURLY          reduce using rule 37 (expresion -> exp BETWEEN exp .)
    ELSE            reduce using rule 37 (expresion -> exp BETWEEN exp .)
    RBRACKET        reduce using rule 37 (expresion -> exp BETWEEN exp .)


state 148

    (20) for -> FOR ID IN DOT ID . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 158


state 149

    (61) bloque -> LCURLY . RCURLY

    RCURLY          shift and go to state 159


state 150

    (32) condicion -> IF LPAREN expresion RPAREN bloque . SEMIC
    (33) condicion -> IF LPAREN expresion RPAREN bloque . ELSE bloque SEMIC

    SEMIC           shift and go to state 160
    ELSE            shift and go to state 161


state 151

    (60) bloque -> bloque2 .

    SEMIC           reduce using rule 60 (bloque -> bloque2 .)
    ELSE            reduce using rule 60 (bloque -> bloque2 .)


state 152

    (24) suma -> SUM LPAREN ID . POINTS expresion RPAREN

    POINTS          shift and go to state 162


state 153

    (19) restricciones2 -> suma SEMIC listafor .

    ID              reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    IF              reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    PRINT           reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    MIN             reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    MAX             reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    RETURN          reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    FOR             reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    RCURLY          reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    SEMIC           reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    ELSE            reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)
    RBRACKET        reduce using rule 19 (restricciones2 -> suma SEMIC listafor .)


state 154

    (21) listafor -> for . SEMIC lfor

    SEMIC           shift and go to state 163


state 155

    (7) llamadafuncion -> ID LPAREN expresion RPAREN .

    STAR            reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    SLASH           reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    PLUS            reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    MINUS           reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    BETWEEN         reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    DOT             reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    ID              reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    IF              reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    PRINT           reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    MIN             reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    MAX             reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    RETURN          reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    FOR             reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    RCURLY          reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    ELSE            reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 7 (llamadafuncion -> ID LPAREN expresion RPAREN .)


state 156

    (9) llamadafuncion -> ID LPAREN CTEF RPAREN .

    STAR            reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    SLASH           reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    PLUS            reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    MINUS           reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    LESSTHAN        reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    GREATERTHAN     reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    BETWEEN         reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    DOT             reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    RPAREN          reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    SEMIC           reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    ID              reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    IF              reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    PRINT           reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    MIN             reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    MAX             reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    RETURN          reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    FOR             reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    RCURLY          reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    ELSE            reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)
    RBRACKET        reduce using rule 9 (llamadafuncion -> ID LPAREN CTEF RPAREN .)


state 157

    (8) llamadafuncion -> ID LPAREN CTEI RPAREN .

    STAR            reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    SLASH           reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    PLUS            reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    MINUS           reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    LESSTHAN        reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    GREATERTHAN     reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    BETWEEN         reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    DOT             reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    RPAREN          reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    SEMIC           reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    ID              reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    IF              reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    PRINT           reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    MIN             reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    MAX             reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    RETURN          reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    FOR             reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    RCURLY          reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    ELSE            reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)
    RBRACKET        reduce using rule 8 (llamadafuncion -> ID LPAREN CTEI RPAREN .)


state 158

<<<<<<< HEAD
    (20) for -> FOR ID IN DOT ID LBRACKET . estatuto RBRACKET
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . funcionoptimizacion
    (51) estatuto -> . ciclo
    (52) estatuto -> . retorno
    (46) asignacion -> . ID POINTS expresion SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (41) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (15) funcionoptimizacion -> . MIN EQUALS restricciones
    (16) funcionoptimizacion -> . MAX EQUALS restricciones
    (53) ciclo -> . for
    (54) retorno -> . RETURN asignacion
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    ID              shift and go to state 54
    IF              shift and go to state 55
=======
    (19) for -> FOR ID IN DOT ID LBRACKET . estatuto RBRACKET
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

<<<<<<< HEAD
    ID              shift and go to state 67
    IF              shift and go to state 68
    PRINT           shift and go to state 58
    MIN             shift and go to state 57
    MAX             shift and go to state 71
    RETURN          shift and go to state 56
    FOR             shift and go to state 64

    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 70
    funcionoptimizacion            shift and go to state 65
    estatuto                       shift and go to state 165
    for                            shift and go to state 60
    condicion                      shift and go to state 66
    retorno                        shift and go to state 63
    escritura                      shift and go to state 72
=======
    ID              shift and go to state 53
    IF              shift and go to state 54
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 58
    RETURN          shift and go to state 43
    FOR             shift and go to state 52

    ciclo                          shift and go to state 46
    asignacion                     shift and go to state 57
    funcionoptimizacion            shift and go to state 53
    estatuto                       shift and go to state 164
    for                            shift and go to state 47
    condicion                      shift and go to state 49
    retorno                        shift and go to state 50
    escritura                      shift and go to state 59

state 159

    (61) bloque -> LCURLY RCURLY .

    SEMIC           reduce using rule 61 (bloque -> LCURLY RCURLY .)
    ELSE            reduce using rule 61 (bloque -> LCURLY RCURLY .)


state 160

    (32) condicion -> IF LPAREN expresion RPAREN bloque SEMIC .

    RBRACKET        reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    ID              reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    IF              reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    PRINT           reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    MIN             reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    MAX             reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    RETURN          reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    FOR             reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    SEMIC           reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    ELSE            reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)
    RCURLY          reduce using rule 32 (condicion -> IF LPAREN expresion RPAREN bloque SEMIC .)

<<<<<<< HEAD

state 161

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELSE . bloque SEMIC
    (60) bloque -> . bloque2
    (61) bloque -> . LCURLY RCURLY
    (62) bloque2 -> . estatuto bloque2
    (63) bloque2 -> . estatuto
    (64) bloque2 -> . empty
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . funcionoptimizacion
    (51) estatuto -> . ciclo
    (52) estatuto -> . retorno
    (88) empty -> .
    (46) asignacion -> . ID POINTS expresion SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (33) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (41) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (15) funcionoptimizacion -> . MIN EQUALS restricciones
    (16) funcionoptimizacion -> . MAX EQUALS restricciones
    (53) ciclo -> . for
    (54) retorno -> . RETURN asignacion
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

    LCURLY          shift and go to state 149
    SEMIC           reduce using rule 88 (empty -> .)
    ID              shift and go to state 54
    IF              shift and go to state 55
=======
    (32) condicion -> IF LPAREN expresion RPAREN bloque ELSE . bloque SEMIC
    (59) bloque -> . bloque2
    (60) bloque -> . LCURLY RCURLY
    (61) bloque2 -> . estatuto bloque2
    (62) bloque2 -> . estatuto
    (46) estatuto -> . asignacion
    (47) estatuto -> . condicion
    (48) estatuto -> . escritura
    (49) estatuto -> . funcionoptimizacion
    (50) estatuto -> . ciclo
    (51) estatuto -> . retorno
    (45) asignacion -> . ID EQUALS expresion SEMIC
    (31) condicion -> . IF LPAREN expresion RPAREN bloque SEMIC
    (32) condicion -> . IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC
    (40) escritura -> . PRINT LPAREN escritura2 RPAREN SEMIC
    (14) funcionoptimizacion -> . MIN EQUALS restricciones
    (15) funcionoptimizacion -> . MAX EQUALS restricciones
    (52) ciclo -> . for
    (53) retorno -> . RETURN asignacion
    (19) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

<<<<<<< HEAD
    LCURLY          shift and go to state 48

    bloque                         shift and go to state 166
=======
    LCURLY          shift and go to state 127
    ID              shift and go to state 53
    IF              shift and go to state 54
>>>>>>> 6f59fd02d623ddb59d8ad8b3632a2abe03e5b319
    PRINT           shift and go to state 45
    MIN             shift and go to state 44
    MAX             shift and go to state 58
    RETURN          shift and go to state 43
    FOR             shift and go to state 52

    bloque2                        shift and go to state 151
    ciclo                          shift and go to state 46
    asignacion                     shift and go to state 57
    funcionoptimizacion            shift and go to state 53
    estatuto                       shift and go to state 48
    for                            shift and go to state 47
    condicion                      shift and go to state 49
    retorno                        shift and go to state 50
    bloque                         shift and go to state 165
    empty                          shift and go to state 51
    escritura                      shift and go to state 59

state 162

    (24) suma -> SUM LPAREN ID POINTS . expresion RPAREN
    (34) expresion -> . exp
    (35) expresion -> . exp LESSTHAN exp
    (36) expresion -> . exp GREATERTHAN exp
    (37) expresion -> . exp BETWEEN exp
    (38) exp -> . termino
    (39) exp -> . termino PLUS exp
    (40) exp -> . termino MINUS exp
    (29) termino -> . factor
    (30) termino -> . factor STAR termino
    (31) termino -> . factor SLASH termino
    (25) factor -> . PLUS varcte
    (26) factor -> . MINUS varcte
    (27) factor -> . varcte
    (28) factor -> . LPAREN expresion RPAREN
    (1) varcte -> . CTEI
    (2) varcte -> . CTEF
    (3) varcte -> . CTESTRING
    (4) varcte -> . CTEBOOL
    (5) varcte -> . ID
    (6) varcte -> . llamadafuncion
    (7) llamadafuncion -> . ID LPAREN expresion RPAREN
    (8) llamadafuncion -> . ID LPAREN CTEI RPAREN
    (9) llamadafuncion -> . ID LPAREN CTEF RPAREN

    PLUS            shift and go to state 88
    MINUS           shift and go to state 86
    LPAREN          shift and go to state 83
    CTEI            shift and go to state 97
    CTEF            shift and go to state 95
    CTESTRING       shift and go to state 99
    CTEBOOL         shift and go to state 94
    ID              shift and go to state 92

    expresion                      shift and go to state 166
    varcte                         shift and go to state 87
    termino                        shift and go to state 84
    exp                            shift and go to state 96
    factor                         shift and go to state 89
    llamadafuncion                 shift and go to state 90

state 163

    (21) listafor -> for SEMIC . lfor
    (22) lfor -> . empty
    (23) lfor -> . listafor
    (88) empty -> .
    (21) listafor -> . for SEMIC lfor
    (20) for -> . FOR ID IN DOT ID LBRACKET estatuto RBRACKET

  ! shift/reduce conflict for FOR resolved as shift
    ID              reduce using rule 88 (empty -> .)
    IF              reduce using rule 88 (empty -> .)
    PRINT           reduce using rule 88 (empty -> .)
    MIN             reduce using rule 88 (empty -> .)
    MAX             reduce using rule 88 (empty -> .)
    RETURN          reduce using rule 88 (empty -> .)
    RCURLY          reduce using rule 88 (empty -> .)
    SEMIC           reduce using rule 88 (empty -> .)
    ELSE            reduce using rule 88 (empty -> .)
    RBRACKET        reduce using rule 88 (empty -> .)
    FOR             shift and go to state 52

  ! FOR             [ reduce using rule 88 (empty -> .) ]

    listafor                       shift and go to state 167
    empty                          shift and go to state 169
    lfor                           shift and go to state 168
    for                            shift and go to state 154

state 164

    (20) for -> FOR ID IN DOT ID LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 170


state 165

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque . SEMIC

    SEMIC           shift and go to state 171


state 166

    (24) suma -> SUM LPAREN ID POINTS expresion . RPAREN

    RPAREN          shift and go to state 172


state 167

    (23) lfor -> listafor .

    ID              reduce using rule 23 (lfor -> listafor .)
    IF              reduce using rule 23 (lfor -> listafor .)
    PRINT           reduce using rule 23 (lfor -> listafor .)
    MIN             reduce using rule 23 (lfor -> listafor .)
    MAX             reduce using rule 23 (lfor -> listafor .)
    RETURN          reduce using rule 23 (lfor -> listafor .)
    FOR             reduce using rule 23 (lfor -> listafor .)
    RCURLY          reduce using rule 23 (lfor -> listafor .)
    SEMIC           reduce using rule 23 (lfor -> listafor .)
    ELSE            reduce using rule 23 (lfor -> listafor .)
    RBRACKET        reduce using rule 23 (lfor -> listafor .)


state 168

    (21) listafor -> for SEMIC lfor .

    ID              reduce using rule 21 (listafor -> for SEMIC lfor .)
    IF              reduce using rule 21 (listafor -> for SEMIC lfor .)
    PRINT           reduce using rule 21 (listafor -> for SEMIC lfor .)
    MIN             reduce using rule 21 (listafor -> for SEMIC lfor .)
    MAX             reduce using rule 21 (listafor -> for SEMIC lfor .)
    RETURN          reduce using rule 21 (listafor -> for SEMIC lfor .)
    FOR             reduce using rule 21 (listafor -> for SEMIC lfor .)
    RCURLY          reduce using rule 21 (listafor -> for SEMIC lfor .)
    SEMIC           reduce using rule 21 (listafor -> for SEMIC lfor .)
    ELSE            reduce using rule 21 (listafor -> for SEMIC lfor .)
    RBRACKET        reduce using rule 21 (listafor -> for SEMIC lfor .)


state 169

    (22) lfor -> empty .

    ID              reduce using rule 22 (lfor -> empty .)
    IF              reduce using rule 22 (lfor -> empty .)
    PRINT           reduce using rule 22 (lfor -> empty .)
    MIN             reduce using rule 22 (lfor -> empty .)
    MAX             reduce using rule 22 (lfor -> empty .)
    RETURN          reduce using rule 22 (lfor -> empty .)
    FOR             reduce using rule 22 (lfor -> empty .)
    RCURLY          reduce using rule 22 (lfor -> empty .)
    SEMIC           reduce using rule 22 (lfor -> empty .)
    ELSE            reduce using rule 22 (lfor -> empty .)
    RBRACKET        reduce using rule 22 (lfor -> empty .)


state 170

    (20) for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .

    ID              reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    MIN             reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    MAX             reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    RCURLY          reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    SEMIC           reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    ELSE            reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 20 (for -> FOR ID IN DOT ID LBRACKET estatuto RBRACKET .)


state 171

    (33) condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .

    RBRACKET        reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    ID              reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    IF              reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    PRINT           reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    MIN             reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    MAX             reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    RETURN          reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    FOR             reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    SEMIC           reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    ELSE            reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)
    RCURLY          reduce using rule 33 (condicion -> IF LPAREN expresion RPAREN bloque ELSE bloque SEMIC .)


state 172

    (24) suma -> SUM LPAREN ID POINTS expresion RPAREN .

    SEMIC           reduce using rule 24 (suma -> SUM LPAREN ID POINTS expresion RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 85 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 142 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for FOR in state 163 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (bloque2 -> estatuto)
WARNING: rejected rule (empty -> <empty>) in state 48
WARNING: reduce/reduce conflict in state 85 resolved using rule (varcte -> CTESTRING)
WARNING: rejected rule (escritura2 -> CTESTRING) in state 85
WARNING: Rule (escritura2 -> CTESTRING) is never reduced
