Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    CTESTRING
    SUM
    BETWEEN
    CTEBOOL

Grammar

Rule 0     S' -> program
Rule 1     program -> functions MODEL LCURLY vars data model bloque2 RCURLY
Rule 2     functions -> funcion functions
Rule 3     functions -> empty
Rule 4     vars -> varblock
Rule 5     vars -> empty
Rule 6     varblock -> VARS LCURLY lvars RCURLY
Rule 7     model -> optimize
Rule 8     model -> optimize where
Rule 9     model -> bloque2
Rule 10    model -> empty
Rule 11    optimize -> MIN LCURLY statement where RCURLY
Rule 12    optimize -> MAX LCURLY statement where RCURLY
Rule 13    build -> BUILD expresion SEMIC
Rule 14    where -> WHERE LCURLY bloque2 RCURLY
Rule 15    wherecondition -> CONDITION expresion SEMIC
Rule 16    statement -> declaration
Rule 17    statement -> asign
Rule 18    statement -> condition
Rule 19    statement -> write
Rule 20    statement -> ciclo
Rule 21    statement -> return
Rule 22    statement -> build
Rule 23    statement -> wherecondition
Rule 24    data -> DATA LCURLY asignmany RCURLY
Rule 25    asignmany -> asign asignmany
Rule 26    asignmany -> empty
Rule 27    asign -> id asign_signo expresiones SEMIC
Rule 28    expresiones -> expresion COMMA expresiones
Rule 29    expresiones -> expresion
Rule 30    asign_signo -> ASEQ
Rule 31    asign_signo -> PLUSEQ
Rule 32    asign_signo -> MINEQ
Rule 33    asign_signo -> MULTEQ
Rule 34    asign_signo -> DIVEQ
Rule 35    condition -> IF asign bloque condition1
Rule 36    condition1 -> ELSE bloque
Rule 37    condition1 -> empty
Rule 38    write -> PRINT asign write2 SEMIC
Rule 39    write2 -> COMMA asign write2
Rule 40    write2 -> empty
Rule 41    ciclo -> FOR ID IN DOT ID bloque
Rule 42    funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
Rule 43    funcion1 -> type ID funcion2
Rule 44    funcion1 -> <empty>
Rule 45    funcion2 -> COMMA type ID funcion2
Rule 46    funcion2 -> <empty>
Rule 47    funcion3 -> LPAREN type RPAREN
Rule 48    funcion3 -> <empty>
Rule 49    lvars -> declaration lvars
Rule 50    lvars -> empty
Rule 51    declaration -> typedeclaration POINTS ID dec22 SEMIC
Rule 52    typedeclaration -> type dimensions
Rule 53    dimensions -> LBRACKET expresion RBRACKET dimensions
Rule 54    dimensions -> empty
Rule 55    dec22 -> COMMA ID dec22
Rule 56    dec22 -> empty
Rule 57    bloque -> LCURLY bloque2 RCURLY
Rule 58    bloque2 -> statement bloque2
Rule 59    bloque2 -> empty
Rule 60    return -> RETURN asign
Rule 61    expresion -> expresion2 expresioni
Rule 62    expresioni -> OR expresion
Rule 63    expresioni -> empty
Rule 64    expresion2 -> expresion3 expresion2i
Rule 65    expresion2i -> AND expresion2
Rule 66    expresion2i -> empty
Rule 67    expresion3 -> expresion4 expresion3i
Rule 68    expresion3i -> ORB expresion3
Rule 69    expresion3i -> empty
Rule 70    expresion4 -> expresion5 expresion4i
Rule 71    expresion4i -> XOR expresion4
Rule 72    expresion4i -> empty
Rule 73    expresion5 -> expresion6 expresion5i
Rule 74    expresion5i -> ANDB expresion5
Rule 75    expresion5i -> empty
Rule 76    expresion6 -> expresion7 expresion6i
Rule 77    expresion6i -> EQ expresion6
Rule 78    expresion6i -> DIF expresion6
Rule 79    expresion6i -> empty
Rule 80    expresion7 -> expresion8 expresion7i
Rule 81    expresion7i -> SHR expresion7
Rule 82    expresion7i -> SHL expresion7
Rule 83    expresion7i -> empty
Rule 84    expresion8 -> expresion9 expresion8i
Rule 85    expresion8i -> GREATERTHAN expresion8
Rule 86    expresion8i -> LESSTHAN expresion8
Rule 87    expresion8i -> GREATEREQUAL expresion8
Rule 88    expresion8i -> LESSEQUAL expresion8
Rule 89    expresion8i -> empty
Rule 90    expresion9 -> termino expresion9i
Rule 91    expresion9i -> PLUS expresion9
Rule 92    expresion9i -> MINUS expresion9
Rule 93    expresion9i -> empty
Rule 94    termino -> factor termino2
Rule 95    termino2 -> STAR termino
Rule 96    termino2 -> SLASH termino
Rule 97    termino2 -> MOD termino
Rule 98    termino2 -> empty
Rule 99    factor -> exponencial factor2
Rule 100   factor2 -> EXP factor
Rule 101   factor2 -> empty
Rule 102   exponencial -> LPAREN expresion RPAREN
Rule 103   exponencial -> exponencial2 valor
Rule 104   exponencial2 -> NOT
Rule 105   exponencial2 -> MM
Rule 106   exponencial2 -> PP
Rule 107   exponencial2 -> NEW
Rule 108   exponencial2 -> empty
Rule 109   valor -> id
Rule 110   valor -> int
Rule 111   valor -> float
Rule 112   int -> CTEI
Rule 113   id -> ID llamarfuncion
Rule 114   id -> ID dimensions
Rule 115   float -> CTEF
Rule 116   llamarfuncion -> LPAREN llamarfuncion3 RPAREN
Rule 117   llamarfuncion3 -> asign llamarfuncion33
Rule 118   llamarfuncion3 -> empty
Rule 119   llamarfuncion33 -> COMMA asign llamarfuncion33
Rule 120   llamarfuncion33 -> empty
Rule 121   type -> TINT
Rule 122   type -> TBOOL
Rule 123   type -> TFLOAT
Rule 124   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ANDB                 : 74
ASEQ                 : 30
BETWEEN              : 
BUILD                : 13
COMMA                : 28 39 45 55 119
CONDITION            : 15
CTEBOOL              : 
CTEF                 : 115
CTEI                 : 112
CTESTRING            : 
DATA                 : 24
DIF                  : 78
DIVEQ                : 34
DOT                  : 41
ELSE                 : 36
EQ                   : 77
EXP                  : 100
FOR                  : 41
FUNC                 : 42
GREATEREQUAL         : 87
GREATERTHAN          : 85
ID                   : 41 41 42 43 45 51 55 113 114
IF                   : 35
IN                   : 41
LBRACKET             : 53
LCURLY               : 1 6 11 12 14 24 57
LESSEQUAL            : 88
LESSTHAN             : 86
LPAREN               : 42 47 102 116
MAX                  : 12
MIN                  : 11
MINEQ                : 32
MINUS                : 92
MM                   : 105
MOD                  : 97
MODEL                : 1
MULTEQ               : 33
NEW                  : 107
NOT                  : 104
OR                   : 62
ORB                  : 68
PLUS                 : 91
PLUSEQ               : 31
POINTS               : 51
PP                   : 106
PRINT                : 38
RBRACKET             : 53
RCURLY               : 1 6 11 12 14 24 57
RETURN               : 60
RPAREN               : 42 47 102 116
SEMIC                : 13 15 27 38 51
SHL                  : 82
SHR                  : 81
SLASH                : 96
STAR                 : 95
SUM                  : 
TBOOL                : 122
TFLOAT               : 123
TINT                 : 121
VARS                 : 6
WHERE                : 14
XOR                  : 71
error                : 

Nonterminals, with rules where they appear

asign                : 17 25 35 38 39 60 117 119
asign_signo          : 27
asignmany            : 24 25
bloque               : 35 36 41 42
bloque2              : 1 9 14 57 58
build                : 22
ciclo                : 20
condition            : 18
condition1           : 35
data                 : 1
dec22                : 51 55
declaration          : 16 49
dimensions           : 52 53 114
empty                : 3 5 10 26 37 40 50 54 56 59 63 66 69 72 75 79 83 89 93 98 101 108 118 120
exponencial          : 99
exponencial2         : 103
expresion            : 13 15 28 29 53 62 102
expresion2           : 61 65
expresion2i          : 64
expresion3           : 64 68
expresion3i          : 67
expresion4           : 67 71
expresion4i          : 70
expresion5           : 70 74
expresion5i          : 73
expresion6           : 73 77 78
expresion6i          : 76
expresion7           : 76 81 82
expresion7i          : 80
expresion8           : 80 85 86 87 88
expresion8i          : 84
expresion9           : 84 91 92
expresion9i          : 90
expresiones          : 27 28
expresioni           : 61
factor               : 94 100
factor2              : 99
float                : 111
funcion              : 2
funcion1             : 42
funcion2             : 43 45
funcion3             : 42
functions            : 1 2
id                   : 27 109
int                  : 110
llamarfuncion        : 113
llamarfuncion3       : 116
llamarfuncion33      : 117 119
lvars                : 6 49
model                : 1
optimize             : 7 8
program              : 0
return               : 21
statement            : 11 12 58
termino              : 90 95 96 97
termino2             : 94
type                 : 43 45 47 52
typedeclaration      : 51
valor                : 103
varblock             : 4
vars                 : 1
where                : 8 11 12
wherecondition       : 23
write                : 19
write2               : 38 39

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . functions MODEL LCURLY vars data model bloque2 RCURLY
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (42) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (124) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 124 (empty -> .)

    functions                      shift and go to state 1
    program                        shift and go to state 2
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 1

    (1) program -> functions . MODEL LCURLY vars data model bloque2 RCURLY

    MODEL           shift and go to state 6


state 2

    (0) S' -> program .



state 3

    (42) funcion -> FUNC . ID LPAREN funcion1 RPAREN funcion3 bloque

    ID              shift and go to state 7


state 4

    (3) functions -> empty .

    MODEL           reduce using rule 3 (functions -> empty .)


state 5

    (2) functions -> funcion . functions
    (2) functions -> . funcion functions
    (3) functions -> . empty
    (42) funcion -> . FUNC ID LPAREN funcion1 RPAREN funcion3 bloque
    (124) empty -> .

    FUNC            shift and go to state 3
    MODEL           reduce using rule 124 (empty -> .)

    functions                      shift and go to state 8
    empty                          shift and go to state 4
    funcion                        shift and go to state 5

state 6

    (1) program -> functions MODEL . LCURLY vars data model bloque2 RCURLY

    LCURLY          shift and go to state 9


state 7

    (42) funcion -> FUNC ID . LPAREN funcion1 RPAREN funcion3 bloque

    LPAREN          shift and go to state 10


state 8

    (2) functions -> funcion functions .

    MODEL           reduce using rule 2 (functions -> funcion functions .)


state 9

    (1) program -> functions MODEL LCURLY . vars data model bloque2 RCURLY
    (4) vars -> . varblock
    (5) vars -> . empty
    (6) varblock -> . VARS LCURLY lvars RCURLY
    (124) empty -> .

    VARS            shift and go to state 11
    DATA            reduce using rule 124 (empty -> .)

    vars                           shift and go to state 12
    varblock                       shift and go to state 13
    empty                          shift and go to state 14

state 10

    (42) funcion -> FUNC ID LPAREN . funcion1 RPAREN funcion3 bloque
    (43) funcion1 -> . type ID funcion2
    (44) funcion1 -> .
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RPAREN          reduce using rule 44 (funcion1 -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    funcion1                       shift and go to state 17
    type                           shift and go to state 19

state 11

    (6) varblock -> VARS . LCURLY lvars RCURLY

    LCURLY          shift and go to state 20


state 12

    (1) program -> functions MODEL LCURLY vars . data model bloque2 RCURLY
    (24) data -> . DATA LCURLY asignmany RCURLY

    DATA            shift and go to state 21

    data                           shift and go to state 22

state 13

    (4) vars -> varblock .

    DATA            reduce using rule 4 (vars -> varblock .)


state 14

    (5) vars -> empty .

    DATA            reduce using rule 5 (vars -> empty .)


state 15

    (121) type -> TINT .

    LBRACKET        reduce using rule 121 (type -> TINT .)
    POINTS          reduce using rule 121 (type -> TINT .)
    RPAREN          reduce using rule 121 (type -> TINT .)
    ID              reduce using rule 121 (type -> TINT .)


state 16

    (123) type -> TFLOAT .

    LBRACKET        reduce using rule 123 (type -> TFLOAT .)
    POINTS          reduce using rule 123 (type -> TFLOAT .)
    RPAREN          reduce using rule 123 (type -> TFLOAT .)
    ID              reduce using rule 123 (type -> TFLOAT .)


state 17

    (42) funcion -> FUNC ID LPAREN funcion1 . RPAREN funcion3 bloque

    RPAREN          shift and go to state 23


state 18

    (122) type -> TBOOL .

    LBRACKET        reduce using rule 122 (type -> TBOOL .)
    POINTS          reduce using rule 122 (type -> TBOOL .)
    RPAREN          reduce using rule 122 (type -> TBOOL .)
    ID              reduce using rule 122 (type -> TBOOL .)


state 19

    (43) funcion1 -> type . ID funcion2

    ID              shift and go to state 24


state 20

    (6) varblock -> VARS LCURLY . lvars RCURLY
    (49) lvars -> . declaration lvars
    (50) lvars -> . empty
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (124) empty -> .
    (52) typedeclaration -> . type dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RCURLY          reduce using rule 124 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    typedeclaration                shift and go to state 25
    lvars                          shift and go to state 26
    declaration                    shift and go to state 27
    type                           shift and go to state 28
    empty                          shift and go to state 29

state 21

    (24) data -> DATA . LCURLY asignmany RCURLY

    LCURLY          shift and go to state 30


state 22

    (1) program -> functions MODEL LCURLY vars data . model bloque2 RCURLY
    (7) model -> . optimize
    (8) model -> . optimize where
    (9) model -> . bloque2
    (10) model -> . empty
    (11) optimize -> . MIN LCURLY statement where RCURLY
    (12) optimize -> . MAX LCURLY statement where RCURLY
    (58) bloque2 -> . statement bloque2
    (59) bloque2 -> . empty
    (124) empty -> .
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
    MIN             shift and go to state 32
    MAX             shift and go to state 50
    RCURLY          reduce using rule 124 (empty -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! RETURN          [ reduce using rule 124 (empty -> .) ]
  ! BUILD           [ reduce using rule 124 (empty -> .) ]
  ! CONDITION       [ reduce using rule 124 (empty -> .) ]
  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! TINT            [ reduce using rule 124 (empty -> .) ]
  ! TBOOL           [ reduce using rule 124 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 124 (empty -> .) ]

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    optimize                       shift and go to state 46
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 39
    type                           shift and go to state 28
    empty                          shift and go to state 40
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    model                          shift and go to state 41
    condition                      shift and go to state 47
    bloque2                        shift and go to state 49
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 23

    (42) funcion -> FUNC ID LPAREN funcion1 RPAREN . funcion3 bloque
    (47) funcion3 -> . LPAREN type RPAREN
    (48) funcion3 -> .

    LPAREN          shift and go to state 55
    LCURLY          reduce using rule 48 (funcion3 -> .)

    funcion3                       shift and go to state 54

state 24

    (43) funcion1 -> type ID . funcion2
    (45) funcion2 -> . COMMA type ID funcion2
    (46) funcion2 -> .

    COMMA           shift and go to state 56
    RPAREN          reduce using rule 46 (funcion2 -> .)

    funcion2                       shift and go to state 57

state 25

    (51) declaration -> typedeclaration . POINTS ID dec22 SEMIC

    POINTS          shift and go to state 58


state 26

    (6) varblock -> VARS LCURLY lvars . RCURLY

    RCURLY          shift and go to state 59


state 27

    (49) lvars -> declaration . lvars
    (49) lvars -> . declaration lvars
    (50) lvars -> . empty
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (124) empty -> .
    (52) typedeclaration -> . type dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RCURLY          reduce using rule 124 (empty -> .)
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    typedeclaration                shift and go to state 25
    lvars                          shift and go to state 60
    declaration                    shift and go to state 27
    type                           shift and go to state 28
    empty                          shift and go to state 29

state 28

    (52) typedeclaration -> type . dimensions
    (53) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (54) dimensions -> . empty
    (124) empty -> .

    LBRACKET        shift and go to state 62
    POINTS          reduce using rule 124 (empty -> .)

    dimensions                     shift and go to state 61
    empty                          shift and go to state 63

state 29

    (50) lvars -> empty .

    RCURLY          reduce using rule 50 (lvars -> empty .)


state 30

    (24) data -> DATA LCURLY . asignmany RCURLY
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (124) empty -> .
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    RCURLY          reduce using rule 124 (empty -> .)
    ID              shift and go to state 36

    asignmany                      shift and go to state 64
    asign                          shift and go to state 65
    id                             shift and go to state 34
    empty                          shift and go to state 66

state 31

    (60) return -> RETURN . asign
    (27) asign -> . id asign_signo expresiones SEMIC
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    ID              shift and go to state 36

    asign                          shift and go to state 67
    id                             shift and go to state 34

state 32

    (11) optimize -> MIN . LCURLY statement where RCURLY

    LCURLY          shift and go to state 68


state 33

    (38) write -> PRINT . asign write2 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    ID              shift and go to state 36

    asign                          shift and go to state 69
    id                             shift and go to state 34

state 34

    (27) asign -> id . asign_signo expresiones SEMIC
    (30) asign_signo -> . ASEQ
    (31) asign_signo -> . PLUSEQ
    (32) asign_signo -> . MINEQ
    (33) asign_signo -> . MULTEQ
    (34) asign_signo -> . DIVEQ

    ASEQ            shift and go to state 71
    PLUSEQ          shift and go to state 70
    MINEQ           shift and go to state 72
    MULTEQ          shift and go to state 73
    DIVEQ           shift and go to state 75

    asign_signo                    shift and go to state 74

state 35

    (20) statement -> ciclo .

    IF              reduce using rule 20 (statement -> ciclo .)
    PRINT           reduce using rule 20 (statement -> ciclo .)
    FOR             reduce using rule 20 (statement -> ciclo .)
    RETURN          reduce using rule 20 (statement -> ciclo .)
    BUILD           reduce using rule 20 (statement -> ciclo .)
    CONDITION       reduce using rule 20 (statement -> ciclo .)
    ID              reduce using rule 20 (statement -> ciclo .)
    TINT            reduce using rule 20 (statement -> ciclo .)
    TBOOL           reduce using rule 20 (statement -> ciclo .)
    TFLOAT          reduce using rule 20 (statement -> ciclo .)
    RCURLY          reduce using rule 20 (statement -> ciclo .)
    WHERE           reduce using rule 20 (statement -> ciclo .)


state 36

    (113) id -> ID . llamarfuncion
    (114) id -> ID . dimensions
    (116) llamarfuncion -> . LPAREN llamarfuncion3 RPAREN
    (53) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (54) dimensions -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 78
    LBRACKET        shift and go to state 62
    ASEQ            reduce using rule 124 (empty -> .)
    PLUSEQ          reduce using rule 124 (empty -> .)
    MINEQ           reduce using rule 124 (empty -> .)
    MULTEQ          reduce using rule 124 (empty -> .)
    DIVEQ           reduce using rule 124 (empty -> .)
    EXP             reduce using rule 124 (empty -> .)
    STAR            reduce using rule 124 (empty -> .)
    SLASH           reduce using rule 124 (empty -> .)
    MOD             reduce using rule 124 (empty -> .)
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    llamarfuncion                  shift and go to state 77
    dimensions                     shift and go to state 76
    empty                          shift and go to state 63

state 37

    (19) statement -> write .

    IF              reduce using rule 19 (statement -> write .)
    PRINT           reduce using rule 19 (statement -> write .)
    FOR             reduce using rule 19 (statement -> write .)
    RETURN          reduce using rule 19 (statement -> write .)
    BUILD           reduce using rule 19 (statement -> write .)
    CONDITION       reduce using rule 19 (statement -> write .)
    ID              reduce using rule 19 (statement -> write .)
    TINT            reduce using rule 19 (statement -> write .)
    TBOOL           reduce using rule 19 (statement -> write .)
    TFLOAT          reduce using rule 19 (statement -> write .)
    RCURLY          reduce using rule 19 (statement -> write .)
    WHERE           reduce using rule 19 (statement -> write .)


state 38

    (22) statement -> build .

    IF              reduce using rule 22 (statement -> build .)
    PRINT           reduce using rule 22 (statement -> build .)
    FOR             reduce using rule 22 (statement -> build .)
    RETURN          reduce using rule 22 (statement -> build .)
    BUILD           reduce using rule 22 (statement -> build .)
    CONDITION       reduce using rule 22 (statement -> build .)
    ID              reduce using rule 22 (statement -> build .)
    TINT            reduce using rule 22 (statement -> build .)
    TBOOL           reduce using rule 22 (statement -> build .)
    TFLOAT          reduce using rule 22 (statement -> build .)
    RCURLY          reduce using rule 22 (statement -> build .)
    WHERE           reduce using rule 22 (statement -> build .)


state 39

    (58) bloque2 -> statement . bloque2
    (58) bloque2 -> . statement bloque2
    (59) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (124) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BUILD resolved as shift
  ! shift/reduce conflict for CONDITION resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for TINT resolved as shift
  ! shift/reduce conflict for TBOOL resolved as shift
  ! shift/reduce conflict for TFLOAT resolved as shift
    RCURLY          reduce using rule 124 (empty -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

  ! IF              [ reduce using rule 124 (empty -> .) ]
  ! PRINT           [ reduce using rule 124 (empty -> .) ]
  ! FOR             [ reduce using rule 124 (empty -> .) ]
  ! RETURN          [ reduce using rule 124 (empty -> .) ]
  ! BUILD           [ reduce using rule 124 (empty -> .) ]
  ! CONDITION       [ reduce using rule 124 (empty -> .) ]
  ! ID              [ reduce using rule 124 (empty -> .) ]
  ! TINT            [ reduce using rule 124 (empty -> .) ]
  ! TBOOL           [ reduce using rule 124 (empty -> .) ]
  ! TFLOAT          [ reduce using rule 124 (empty -> .) ]

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 39
    type                           shift and go to state 28
    empty                          shift and go to state 79
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    condition                      shift and go to state 47
    bloque2                        shift and go to state 80
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 40

    (10) model -> empty .
    (59) bloque2 -> empty .

  ! reduce/reduce conflict for IF resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for FOR resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for BUILD resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for CONDITION resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TINT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TBOOL resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for TFLOAT resolved using rule 10 (model -> empty .)
  ! reduce/reduce conflict for RCURLY resolved using rule 10 (model -> empty .)
    IF              reduce using rule 10 (model -> empty .)
    PRINT           reduce using rule 10 (model -> empty .)
    FOR             reduce using rule 10 (model -> empty .)
    RETURN          reduce using rule 10 (model -> empty .)
    BUILD           reduce using rule 10 (model -> empty .)
    CONDITION       reduce using rule 10 (model -> empty .)
    ID              reduce using rule 10 (model -> empty .)
    TINT            reduce using rule 10 (model -> empty .)
    TBOOL           reduce using rule 10 (model -> empty .)
    TFLOAT          reduce using rule 10 (model -> empty .)
    RCURLY          reduce using rule 10 (model -> empty .)

  ! IF              [ reduce using rule 59 (bloque2 -> empty .) ]
  ! PRINT           [ reduce using rule 59 (bloque2 -> empty .) ]
  ! FOR             [ reduce using rule 59 (bloque2 -> empty .) ]
  ! RETURN          [ reduce using rule 59 (bloque2 -> empty .) ]
  ! BUILD           [ reduce using rule 59 (bloque2 -> empty .) ]
  ! CONDITION       [ reduce using rule 59 (bloque2 -> empty .) ]
  ! ID              [ reduce using rule 59 (bloque2 -> empty .) ]
  ! TINT            [ reduce using rule 59 (bloque2 -> empty .) ]
  ! TBOOL           [ reduce using rule 59 (bloque2 -> empty .) ]
  ! TFLOAT          [ reduce using rule 59 (bloque2 -> empty .) ]
  ! RCURLY          [ reduce using rule 59 (bloque2 -> empty .) ]


state 41

    (1) program -> functions MODEL LCURLY vars data model . bloque2 RCURLY
    (58) bloque2 -> . statement bloque2
    (59) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (124) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RCURLY          reduce using rule 124 (empty -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 39
    type                           shift and go to state 28
    empty                          shift and go to state 79
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    wherecondition                 shift and go to state 53
    condition                      shift and go to state 47
    bloque2                        shift and go to state 81
    asign                          shift and go to state 51

state 42

    (21) statement -> return .

    IF              reduce using rule 21 (statement -> return .)
    PRINT           reduce using rule 21 (statement -> return .)
    FOR             reduce using rule 21 (statement -> return .)
    RETURN          reduce using rule 21 (statement -> return .)
    BUILD           reduce using rule 21 (statement -> return .)
    CONDITION       reduce using rule 21 (statement -> return .)
    ID              reduce using rule 21 (statement -> return .)
    TINT            reduce using rule 21 (statement -> return .)
    TBOOL           reduce using rule 21 (statement -> return .)
    TFLOAT          reduce using rule 21 (statement -> return .)
    RCURLY          reduce using rule 21 (statement -> return .)
    WHERE           reduce using rule 21 (statement -> return .)


state 43

    (41) ciclo -> FOR . ID IN DOT ID bloque

    ID              shift and go to state 82


state 44

    (13) build -> BUILD . expresion SEMIC
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 99

state 45

    (16) statement -> declaration .

    IF              reduce using rule 16 (statement -> declaration .)
    PRINT           reduce using rule 16 (statement -> declaration .)
    FOR             reduce using rule 16 (statement -> declaration .)
    RETURN          reduce using rule 16 (statement -> declaration .)
    BUILD           reduce using rule 16 (statement -> declaration .)
    CONDITION       reduce using rule 16 (statement -> declaration .)
    ID              reduce using rule 16 (statement -> declaration .)
    TINT            reduce using rule 16 (statement -> declaration .)
    TBOOL           reduce using rule 16 (statement -> declaration .)
    TFLOAT          reduce using rule 16 (statement -> declaration .)
    RCURLY          reduce using rule 16 (statement -> declaration .)
    WHERE           reduce using rule 16 (statement -> declaration .)


state 46

    (7) model -> optimize .
    (8) model -> optimize . where
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    IF              reduce using rule 7 (model -> optimize .)
    PRINT           reduce using rule 7 (model -> optimize .)
    FOR             reduce using rule 7 (model -> optimize .)
    RETURN          reduce using rule 7 (model -> optimize .)
    BUILD           reduce using rule 7 (model -> optimize .)
    CONDITION       reduce using rule 7 (model -> optimize .)
    ID              reduce using rule 7 (model -> optimize .)
    TINT            reduce using rule 7 (model -> optimize .)
    TBOOL           reduce using rule 7 (model -> optimize .)
    TFLOAT          reduce using rule 7 (model -> optimize .)
    RCURLY          reduce using rule 7 (model -> optimize .)
    WHERE           shift and go to state 103

    where                          shift and go to state 102

state 47

    (18) statement -> condition .

    IF              reduce using rule 18 (statement -> condition .)
    PRINT           reduce using rule 18 (statement -> condition .)
    FOR             reduce using rule 18 (statement -> condition .)
    RETURN          reduce using rule 18 (statement -> condition .)
    BUILD           reduce using rule 18 (statement -> condition .)
    CONDITION       reduce using rule 18 (statement -> condition .)
    ID              reduce using rule 18 (statement -> condition .)
    TINT            reduce using rule 18 (statement -> condition .)
    TBOOL           reduce using rule 18 (statement -> condition .)
    TFLOAT          reduce using rule 18 (statement -> condition .)
    RCURLY          reduce using rule 18 (statement -> condition .)
    WHERE           reduce using rule 18 (statement -> condition .)


state 48

    (35) condition -> IF . asign bloque condition1
    (27) asign -> . id asign_signo expresiones SEMIC
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    ID              shift and go to state 36

    id                             shift and go to state 34
    asign                          shift and go to state 104

state 49

    (9) model -> bloque2 .

    IF              reduce using rule 9 (model -> bloque2 .)
    PRINT           reduce using rule 9 (model -> bloque2 .)
    FOR             reduce using rule 9 (model -> bloque2 .)
    RETURN          reduce using rule 9 (model -> bloque2 .)
    BUILD           reduce using rule 9 (model -> bloque2 .)
    CONDITION       reduce using rule 9 (model -> bloque2 .)
    ID              reduce using rule 9 (model -> bloque2 .)
    TINT            reduce using rule 9 (model -> bloque2 .)
    TBOOL           reduce using rule 9 (model -> bloque2 .)
    TFLOAT          reduce using rule 9 (model -> bloque2 .)
    RCURLY          reduce using rule 9 (model -> bloque2 .)


state 50

    (12) optimize -> MAX . LCURLY statement where RCURLY

    LCURLY          shift and go to state 105


state 51

    (17) statement -> asign .

    IF              reduce using rule 17 (statement -> asign .)
    PRINT           reduce using rule 17 (statement -> asign .)
    FOR             reduce using rule 17 (statement -> asign .)
    RETURN          reduce using rule 17 (statement -> asign .)
    BUILD           reduce using rule 17 (statement -> asign .)
    CONDITION       reduce using rule 17 (statement -> asign .)
    ID              reduce using rule 17 (statement -> asign .)
    TINT            reduce using rule 17 (statement -> asign .)
    TBOOL           reduce using rule 17 (statement -> asign .)
    TFLOAT          reduce using rule 17 (statement -> asign .)
    RCURLY          reduce using rule 17 (statement -> asign .)
    WHERE           reduce using rule 17 (statement -> asign .)


state 52

    (15) wherecondition -> CONDITION . expresion SEMIC
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 106

state 53

    (23) statement -> wherecondition .

    IF              reduce using rule 23 (statement -> wherecondition .)
    PRINT           reduce using rule 23 (statement -> wherecondition .)
    FOR             reduce using rule 23 (statement -> wherecondition .)
    RETURN          reduce using rule 23 (statement -> wherecondition .)
    BUILD           reduce using rule 23 (statement -> wherecondition .)
    CONDITION       reduce using rule 23 (statement -> wherecondition .)
    ID              reduce using rule 23 (statement -> wherecondition .)
    TINT            reduce using rule 23 (statement -> wherecondition .)
    TBOOL           reduce using rule 23 (statement -> wherecondition .)
    TFLOAT          reduce using rule 23 (statement -> wherecondition .)
    RCURLY          reduce using rule 23 (statement -> wherecondition .)
    WHERE           reduce using rule 23 (statement -> wherecondition .)


state 54

    (42) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 . bloque
    (57) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 107

    bloque                         shift and go to state 108

state 55

    (47) funcion3 -> LPAREN . type RPAREN
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 109

state 56

    (45) funcion2 -> COMMA . type ID funcion2
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    type                           shift and go to state 110

state 57

    (43) funcion1 -> type ID funcion2 .

    RPAREN          reduce using rule 43 (funcion1 -> type ID funcion2 .)


state 58

    (51) declaration -> typedeclaration POINTS . ID dec22 SEMIC

    ID              shift and go to state 111


state 59

    (6) varblock -> VARS LCURLY lvars RCURLY .

    DATA            reduce using rule 6 (varblock -> VARS LCURLY lvars RCURLY .)


state 60

    (49) lvars -> declaration lvars .

    RCURLY          reduce using rule 49 (lvars -> declaration lvars .)


state 61

    (52) typedeclaration -> type dimensions .

    POINTS          reduce using rule 52 (typedeclaration -> type dimensions .)


state 62

    (53) dimensions -> LBRACKET . expresion RBRACKET dimensions
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    expresion4                     shift and go to state 93
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 112

state 63

    (54) dimensions -> empty .

    ASEQ            reduce using rule 54 (dimensions -> empty .)
    PLUSEQ          reduce using rule 54 (dimensions -> empty .)
    MINEQ           reduce using rule 54 (dimensions -> empty .)
    MULTEQ          reduce using rule 54 (dimensions -> empty .)
    DIVEQ           reduce using rule 54 (dimensions -> empty .)
    EXP             reduce using rule 54 (dimensions -> empty .)
    STAR            reduce using rule 54 (dimensions -> empty .)
    SLASH           reduce using rule 54 (dimensions -> empty .)
    MOD             reduce using rule 54 (dimensions -> empty .)
    PLUS            reduce using rule 54 (dimensions -> empty .)
    MINUS           reduce using rule 54 (dimensions -> empty .)
    GREATERTHAN     reduce using rule 54 (dimensions -> empty .)
    LESSTHAN        reduce using rule 54 (dimensions -> empty .)
    GREATEREQUAL    reduce using rule 54 (dimensions -> empty .)
    LESSEQUAL       reduce using rule 54 (dimensions -> empty .)
    SHR             reduce using rule 54 (dimensions -> empty .)
    SHL             reduce using rule 54 (dimensions -> empty .)
    EQ              reduce using rule 54 (dimensions -> empty .)
    DIF             reduce using rule 54 (dimensions -> empty .)
    ANDB            reduce using rule 54 (dimensions -> empty .)
    XOR             reduce using rule 54 (dimensions -> empty .)
    ORB             reduce using rule 54 (dimensions -> empty .)
    AND             reduce using rule 54 (dimensions -> empty .)
    OR              reduce using rule 54 (dimensions -> empty .)
    SEMIC           reduce using rule 54 (dimensions -> empty .)
    RBRACKET        reduce using rule 54 (dimensions -> empty .)
    COMMA           reduce using rule 54 (dimensions -> empty .)
    RPAREN          reduce using rule 54 (dimensions -> empty .)
    POINTS          reduce using rule 54 (dimensions -> empty .)


state 64

    (24) data -> DATA LCURLY asignmany . RCURLY

    RCURLY          shift and go to state 113


state 65

    (25) asignmany -> asign . asignmany
    (25) asignmany -> . asign asignmany
    (26) asignmany -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (124) empty -> .
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    RCURLY          reduce using rule 124 (empty -> .)
    ID              shift and go to state 36

    asignmany                      shift and go to state 114
    asign                          shift and go to state 65
    id                             shift and go to state 34
    empty                          shift and go to state 66

state 66

    (26) asignmany -> empty .

    RCURLY          reduce using rule 26 (asignmany -> empty .)


state 67

    (60) return -> RETURN asign .

    IF              reduce using rule 60 (return -> RETURN asign .)
    PRINT           reduce using rule 60 (return -> RETURN asign .)
    FOR             reduce using rule 60 (return -> RETURN asign .)
    RETURN          reduce using rule 60 (return -> RETURN asign .)
    BUILD           reduce using rule 60 (return -> RETURN asign .)
    CONDITION       reduce using rule 60 (return -> RETURN asign .)
    ID              reduce using rule 60 (return -> RETURN asign .)
    TINT            reduce using rule 60 (return -> RETURN asign .)
    TBOOL           reduce using rule 60 (return -> RETURN asign .)
    TFLOAT          reduce using rule 60 (return -> RETURN asign .)
    RCURLY          reduce using rule 60 (return -> RETURN asign .)
    WHERE           reduce using rule 60 (return -> RETURN asign .)


state 68

    (11) optimize -> MIN LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 115
    type                           shift and go to state 28
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    condition                      shift and go to state 47
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 69

    (38) write -> PRINT asign . write2 SEMIC
    (39) write2 -> . COMMA asign write2
    (40) write2 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 117
    SEMIC           reduce using rule 124 (empty -> .)

    write2                         shift and go to state 116
    empty                          shift and go to state 118

state 70

    (31) asign_signo -> PLUSEQ .

    LPAREN          reduce using rule 31 (asign_signo -> PLUSEQ .)
    NOT             reduce using rule 31 (asign_signo -> PLUSEQ .)
    MM              reduce using rule 31 (asign_signo -> PLUSEQ .)
    PP              reduce using rule 31 (asign_signo -> PLUSEQ .)
    NEW             reduce using rule 31 (asign_signo -> PLUSEQ .)
    ID              reduce using rule 31 (asign_signo -> PLUSEQ .)
    CTEI            reduce using rule 31 (asign_signo -> PLUSEQ .)
    CTEF            reduce using rule 31 (asign_signo -> PLUSEQ .)


state 71

    (30) asign_signo -> ASEQ .

    LPAREN          reduce using rule 30 (asign_signo -> ASEQ .)
    NOT             reduce using rule 30 (asign_signo -> ASEQ .)
    MM              reduce using rule 30 (asign_signo -> ASEQ .)
    PP              reduce using rule 30 (asign_signo -> ASEQ .)
    NEW             reduce using rule 30 (asign_signo -> ASEQ .)
    ID              reduce using rule 30 (asign_signo -> ASEQ .)
    CTEI            reduce using rule 30 (asign_signo -> ASEQ .)
    CTEF            reduce using rule 30 (asign_signo -> ASEQ .)


state 72

    (32) asign_signo -> MINEQ .

    LPAREN          reduce using rule 32 (asign_signo -> MINEQ .)
    NOT             reduce using rule 32 (asign_signo -> MINEQ .)
    MM              reduce using rule 32 (asign_signo -> MINEQ .)
    PP              reduce using rule 32 (asign_signo -> MINEQ .)
    NEW             reduce using rule 32 (asign_signo -> MINEQ .)
    ID              reduce using rule 32 (asign_signo -> MINEQ .)
    CTEI            reduce using rule 32 (asign_signo -> MINEQ .)
    CTEF            reduce using rule 32 (asign_signo -> MINEQ .)


state 73

    (33) asign_signo -> MULTEQ .

    LPAREN          reduce using rule 33 (asign_signo -> MULTEQ .)
    NOT             reduce using rule 33 (asign_signo -> MULTEQ .)
    MM              reduce using rule 33 (asign_signo -> MULTEQ .)
    PP              reduce using rule 33 (asign_signo -> MULTEQ .)
    NEW             reduce using rule 33 (asign_signo -> MULTEQ .)
    ID              reduce using rule 33 (asign_signo -> MULTEQ .)
    CTEI            reduce using rule 33 (asign_signo -> MULTEQ .)
    CTEF            reduce using rule 33 (asign_signo -> MULTEQ .)


state 74

    (27) asign -> id asign_signo . expresiones SEMIC
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    expresiones                    shift and go to state 119
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 120

state 75

    (34) asign_signo -> DIVEQ .

    LPAREN          reduce using rule 34 (asign_signo -> DIVEQ .)
    NOT             reduce using rule 34 (asign_signo -> DIVEQ .)
    MM              reduce using rule 34 (asign_signo -> DIVEQ .)
    PP              reduce using rule 34 (asign_signo -> DIVEQ .)
    NEW             reduce using rule 34 (asign_signo -> DIVEQ .)
    ID              reduce using rule 34 (asign_signo -> DIVEQ .)
    CTEI            reduce using rule 34 (asign_signo -> DIVEQ .)
    CTEF            reduce using rule 34 (asign_signo -> DIVEQ .)


state 76

    (114) id -> ID dimensions .

    ASEQ            reduce using rule 114 (id -> ID dimensions .)
    PLUSEQ          reduce using rule 114 (id -> ID dimensions .)
    MINEQ           reduce using rule 114 (id -> ID dimensions .)
    MULTEQ          reduce using rule 114 (id -> ID dimensions .)
    DIVEQ           reduce using rule 114 (id -> ID dimensions .)
    EXP             reduce using rule 114 (id -> ID dimensions .)
    STAR            reduce using rule 114 (id -> ID dimensions .)
    SLASH           reduce using rule 114 (id -> ID dimensions .)
    MOD             reduce using rule 114 (id -> ID dimensions .)
    PLUS            reduce using rule 114 (id -> ID dimensions .)
    MINUS           reduce using rule 114 (id -> ID dimensions .)
    GREATERTHAN     reduce using rule 114 (id -> ID dimensions .)
    LESSTHAN        reduce using rule 114 (id -> ID dimensions .)
    GREATEREQUAL    reduce using rule 114 (id -> ID dimensions .)
    LESSEQUAL       reduce using rule 114 (id -> ID dimensions .)
    SHR             reduce using rule 114 (id -> ID dimensions .)
    SHL             reduce using rule 114 (id -> ID dimensions .)
    EQ              reduce using rule 114 (id -> ID dimensions .)
    DIF             reduce using rule 114 (id -> ID dimensions .)
    ANDB            reduce using rule 114 (id -> ID dimensions .)
    XOR             reduce using rule 114 (id -> ID dimensions .)
    ORB             reduce using rule 114 (id -> ID dimensions .)
    AND             reduce using rule 114 (id -> ID dimensions .)
    OR              reduce using rule 114 (id -> ID dimensions .)
    SEMIC           reduce using rule 114 (id -> ID dimensions .)
    RBRACKET        reduce using rule 114 (id -> ID dimensions .)
    COMMA           reduce using rule 114 (id -> ID dimensions .)
    RPAREN          reduce using rule 114 (id -> ID dimensions .)


state 77

    (113) id -> ID llamarfuncion .

    ASEQ            reduce using rule 113 (id -> ID llamarfuncion .)
    PLUSEQ          reduce using rule 113 (id -> ID llamarfuncion .)
    MINEQ           reduce using rule 113 (id -> ID llamarfuncion .)
    MULTEQ          reduce using rule 113 (id -> ID llamarfuncion .)
    DIVEQ           reduce using rule 113 (id -> ID llamarfuncion .)
    EXP             reduce using rule 113 (id -> ID llamarfuncion .)
    STAR            reduce using rule 113 (id -> ID llamarfuncion .)
    SLASH           reduce using rule 113 (id -> ID llamarfuncion .)
    MOD             reduce using rule 113 (id -> ID llamarfuncion .)
    PLUS            reduce using rule 113 (id -> ID llamarfuncion .)
    MINUS           reduce using rule 113 (id -> ID llamarfuncion .)
    GREATERTHAN     reduce using rule 113 (id -> ID llamarfuncion .)
    LESSTHAN        reduce using rule 113 (id -> ID llamarfuncion .)
    GREATEREQUAL    reduce using rule 113 (id -> ID llamarfuncion .)
    LESSEQUAL       reduce using rule 113 (id -> ID llamarfuncion .)
    SHR             reduce using rule 113 (id -> ID llamarfuncion .)
    SHL             reduce using rule 113 (id -> ID llamarfuncion .)
    EQ              reduce using rule 113 (id -> ID llamarfuncion .)
    DIF             reduce using rule 113 (id -> ID llamarfuncion .)
    ANDB            reduce using rule 113 (id -> ID llamarfuncion .)
    XOR             reduce using rule 113 (id -> ID llamarfuncion .)
    ORB             reduce using rule 113 (id -> ID llamarfuncion .)
    AND             reduce using rule 113 (id -> ID llamarfuncion .)
    OR              reduce using rule 113 (id -> ID llamarfuncion .)
    SEMIC           reduce using rule 113 (id -> ID llamarfuncion .)
    RBRACKET        reduce using rule 113 (id -> ID llamarfuncion .)
    COMMA           reduce using rule 113 (id -> ID llamarfuncion .)
    RPAREN          reduce using rule 113 (id -> ID llamarfuncion .)


state 78

    (116) llamarfuncion -> LPAREN . llamarfuncion3 RPAREN
    (117) llamarfuncion3 -> . asign llamarfuncion33
    (118) llamarfuncion3 -> . empty
    (27) asign -> . id asign_signo expresiones SEMIC
    (124) empty -> .
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    RPAREN          reduce using rule 124 (empty -> .)
    ID              shift and go to state 36

    asign                          shift and go to state 121
    llamarfuncion3                 shift and go to state 122
    id                             shift and go to state 34
    empty                          shift and go to state 123

state 79

    (59) bloque2 -> empty .

    RCURLY          reduce using rule 59 (bloque2 -> empty .)
    IF              reduce using rule 59 (bloque2 -> empty .)
    PRINT           reduce using rule 59 (bloque2 -> empty .)
    FOR             reduce using rule 59 (bloque2 -> empty .)
    RETURN          reduce using rule 59 (bloque2 -> empty .)
    BUILD           reduce using rule 59 (bloque2 -> empty .)
    CONDITION       reduce using rule 59 (bloque2 -> empty .)
    ID              reduce using rule 59 (bloque2 -> empty .)
    TINT            reduce using rule 59 (bloque2 -> empty .)
    TBOOL           reduce using rule 59 (bloque2 -> empty .)
    TFLOAT          reduce using rule 59 (bloque2 -> empty .)


state 80

    (58) bloque2 -> statement bloque2 .

    RCURLY          reduce using rule 58 (bloque2 -> statement bloque2 .)
    IF              reduce using rule 58 (bloque2 -> statement bloque2 .)
    PRINT           reduce using rule 58 (bloque2 -> statement bloque2 .)
    FOR             reduce using rule 58 (bloque2 -> statement bloque2 .)
    RETURN          reduce using rule 58 (bloque2 -> statement bloque2 .)
    BUILD           reduce using rule 58 (bloque2 -> statement bloque2 .)
    CONDITION       reduce using rule 58 (bloque2 -> statement bloque2 .)
    ID              reduce using rule 58 (bloque2 -> statement bloque2 .)
    TINT            reduce using rule 58 (bloque2 -> statement bloque2 .)
    TBOOL           reduce using rule 58 (bloque2 -> statement bloque2 .)
    TFLOAT          reduce using rule 58 (bloque2 -> statement bloque2 .)


state 81

    (1) program -> functions MODEL LCURLY vars data model bloque2 . RCURLY

    RCURLY          shift and go to state 124


state 82

    (41) ciclo -> FOR ID . IN DOT ID bloque

    IN              shift and go to state 125


state 83

    (90) expresion9 -> termino . expresion9i
    (91) expresion9i -> . PLUS expresion9
    (92) expresion9i -> . MINUS expresion9
    (93) expresion9i -> . empty
    (124) empty -> .

    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresion9i                    shift and go to state 126
    empty                          shift and go to state 129

state 84

    (107) exponencial2 -> NEW .

    ID              reduce using rule 107 (exponencial2 -> NEW .)
    CTEI            reduce using rule 107 (exponencial2 -> NEW .)
    CTEF            reduce using rule 107 (exponencial2 -> NEW .)


state 85

    (106) exponencial2 -> PP .

    ID              reduce using rule 106 (exponencial2 -> PP .)
    CTEI            reduce using rule 106 (exponencial2 -> PP .)
    CTEF            reduce using rule 106 (exponencial2 -> PP .)


state 86

    (103) exponencial -> exponencial2 . valor
    (109) valor -> . id
    (110) valor -> . int
    (111) valor -> . float
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (112) int -> . CTEI
    (115) float -> . CTEF

    ID              shift and go to state 36
    CTEI            shift and go to state 135
    CTEF            shift and go to state 133

    int                            shift and go to state 130
    float                          shift and go to state 131
    valor                          shift and go to state 134
    id                             shift and go to state 132

state 87

    (94) termino -> factor . termino2
    (95) termino2 -> . STAR termino
    (96) termino2 -> . SLASH termino
    (97) termino2 -> . MOD termino
    (98) termino2 -> . empty
    (124) empty -> .

    STAR            shift and go to state 136
    SLASH           shift and go to state 138
    MOD             shift and go to state 140
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    termino2                       shift and go to state 137
    empty                          shift and go to state 139

state 88

    (99) factor -> exponencial . factor2
    (100) factor2 -> . EXP factor
    (101) factor2 -> . empty
    (124) empty -> .

    EXP             shift and go to state 142
    STAR            reduce using rule 124 (empty -> .)
    SLASH           reduce using rule 124 (empty -> .)
    MOD             reduce using rule 124 (empty -> .)
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 141
    factor2                        shift and go to state 143

state 89

    (108) exponencial2 -> empty .

    ID              reduce using rule 108 (exponencial2 -> empty .)
    CTEI            reduce using rule 108 (exponencial2 -> empty .)
    CTEF            reduce using rule 108 (exponencial2 -> empty .)


state 90

    (64) expresion2 -> expresion3 . expresion2i
    (65) expresion2i -> . AND expresion2
    (66) expresion2i -> . empty
    (124) empty -> .

    AND             shift and go to state 144
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresion2i                    shift and go to state 145
    empty                          shift and go to state 146

state 91

    (61) expresion -> expresion2 . expresioni
    (62) expresioni -> . OR expresion
    (63) expresioni -> . empty
    (124) empty -> .

    OR              shift and go to state 148
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresioni                     shift and go to state 147
    empty                          shift and go to state 149

state 92

    (70) expresion4 -> expresion5 . expresion4i
    (71) expresion4i -> . XOR expresion4
    (72) expresion4i -> . empty
    (124) empty -> .

    XOR             shift and go to state 150
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 151
    expresion4i                    shift and go to state 152

state 93

    (67) expresion3 -> expresion4 . expresion3i
    (68) expresion3i -> . ORB expresion3
    (69) expresion3i -> . empty
    (124) empty -> .

    ORB             shift and go to state 154
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresion3i                    shift and go to state 153
    empty                          shift and go to state 155

state 94

    (76) expresion6 -> expresion7 . expresion6i
    (77) expresion6i -> . EQ expresion6
    (78) expresion6i -> . DIF expresion6
    (79) expresion6i -> . empty
    (124) empty -> .

    EQ              shift and go to state 158
    DIF             shift and go to state 157
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 159
    expresion6i                    shift and go to state 156

state 95

    (73) expresion5 -> expresion6 . expresion5i
    (74) expresion5i -> . ANDB expresion5
    (75) expresion5i -> . empty
    (124) empty -> .

    ANDB            shift and go to state 161
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresion5i                    shift and go to state 160
    empty                          shift and go to state 162

state 96

    (84) expresion8 -> expresion9 . expresion8i
    (85) expresion8i -> . GREATERTHAN expresion8
    (86) expresion8i -> . LESSTHAN expresion8
    (87) expresion8i -> . GREATEREQUAL expresion8
    (88) expresion8i -> . LESSEQUAL expresion8
    (89) expresion8i -> . empty
    (124) empty -> .

    GREATERTHAN     shift and go to state 166
    LESSTHAN        shift and go to state 165
    GREATEREQUAL    shift and go to state 163
    LESSEQUAL       shift and go to state 167
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    expresion8i                    shift and go to state 164
    empty                          shift and go to state 168

state 97

    (80) expresion7 -> expresion8 . expresion7i
    (81) expresion7i -> . SHR expresion7
    (82) expresion7i -> . SHL expresion7
    (83) expresion7i -> . empty
    (124) empty -> .

    SHR             shift and go to state 169
    SHL             shift and go to state 171
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    empty                          shift and go to state 172
    expresion7i                    shift and go to state 170

state 98

    (102) exponencial -> LPAREN . expresion RPAREN
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 173

state 99

    (13) build -> BUILD expresion . SEMIC

    SEMIC           shift and go to state 174


state 100

    (105) exponencial2 -> MM .

    ID              reduce using rule 105 (exponencial2 -> MM .)
    CTEI            reduce using rule 105 (exponencial2 -> MM .)
    CTEF            reduce using rule 105 (exponencial2 -> MM .)


state 101

    (104) exponencial2 -> NOT .

    ID              reduce using rule 104 (exponencial2 -> NOT .)
    CTEI            reduce using rule 104 (exponencial2 -> NOT .)
    CTEF            reduce using rule 104 (exponencial2 -> NOT .)


state 102

    (8) model -> optimize where .

    IF              reduce using rule 8 (model -> optimize where .)
    PRINT           reduce using rule 8 (model -> optimize where .)
    FOR             reduce using rule 8 (model -> optimize where .)
    RETURN          reduce using rule 8 (model -> optimize where .)
    BUILD           reduce using rule 8 (model -> optimize where .)
    CONDITION       reduce using rule 8 (model -> optimize where .)
    ID              reduce using rule 8 (model -> optimize where .)
    TINT            reduce using rule 8 (model -> optimize where .)
    TBOOL           reduce using rule 8 (model -> optimize where .)
    TFLOAT          reduce using rule 8 (model -> optimize where .)
    RCURLY          reduce using rule 8 (model -> optimize where .)


state 103

    (14) where -> WHERE . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 175


state 104

    (35) condition -> IF asign . bloque condition1
    (57) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 107

    bloque                         shift and go to state 176

state 105

    (12) optimize -> MAX LCURLY . statement where RCURLY
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 177
    type                           shift and go to state 28
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    condition                      shift and go to state 47
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 106

    (15) wherecondition -> CONDITION expresion . SEMIC

    SEMIC           shift and go to state 178


state 107

    (57) bloque -> LCURLY . bloque2 RCURLY
    (58) bloque2 -> . statement bloque2
    (59) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (124) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RCURLY          reduce using rule 124 (empty -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 39
    type                           shift and go to state 28
    empty                          shift and go to state 79
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    condition                      shift and go to state 47
    bloque2                        shift and go to state 179
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 108

    (42) funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .

    FUNC            reduce using rule 42 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)
    MODEL           reduce using rule 42 (funcion -> FUNC ID LPAREN funcion1 RPAREN funcion3 bloque .)


state 109

    (47) funcion3 -> LPAREN type . RPAREN

    RPAREN          shift and go to state 180


state 110

    (45) funcion2 -> COMMA type . ID funcion2

    ID              shift and go to state 181


state 111

    (51) declaration -> typedeclaration POINTS ID . dec22 SEMIC
    (55) dec22 -> . COMMA ID dec22
    (56) dec22 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 182
    SEMIC           reduce using rule 124 (empty -> .)

    dec22                          shift and go to state 183
    empty                          shift and go to state 184

state 112

    (53) dimensions -> LBRACKET expresion . RBRACKET dimensions

    RBRACKET        shift and go to state 185


state 113

    (24) data -> DATA LCURLY asignmany RCURLY .

    MIN             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    MAX             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    IF              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    PRINT           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    FOR             reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RETURN          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    BUILD           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    CONDITION       reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    ID              reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TINT            reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TBOOL           reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    TFLOAT          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)
    RCURLY          reduce using rule 24 (data -> DATA LCURLY asignmany RCURLY .)


state 114

    (25) asignmany -> asign asignmany .

    RCURLY          reduce using rule 25 (asignmany -> asign asignmany .)


state 115

    (11) optimize -> MIN LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 103

    where                          shift and go to state 186

state 116

    (38) write -> PRINT asign write2 . SEMIC

    SEMIC           shift and go to state 187


state 117

    (39) write2 -> COMMA . asign write2
    (27) asign -> . id asign_signo expresiones SEMIC
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    ID              shift and go to state 36

    asign                          shift and go to state 188
    id                             shift and go to state 34

state 118

    (40) write2 -> empty .

    SEMIC           reduce using rule 40 (write2 -> empty .)


state 119

    (27) asign -> id asign_signo expresiones . SEMIC

    SEMIC           shift and go to state 189


state 120

    (28) expresiones -> expresion . COMMA expresiones
    (29) expresiones -> expresion .

    COMMA           shift and go to state 190
    SEMIC           reduce using rule 29 (expresiones -> expresion .)


state 121

    (117) llamarfuncion3 -> asign . llamarfuncion33
    (119) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (120) llamarfuncion33 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 192
    RPAREN          reduce using rule 124 (empty -> .)

    llamarfuncion33                shift and go to state 191
    empty                          shift and go to state 193

state 122

    (116) llamarfuncion -> LPAREN llamarfuncion3 . RPAREN

    RPAREN          shift and go to state 194


state 123

    (118) llamarfuncion3 -> empty .

    RPAREN          reduce using rule 118 (llamarfuncion3 -> empty .)


state 124

    (1) program -> functions MODEL LCURLY vars data model bloque2 RCURLY .

    $end            reduce using rule 1 (program -> functions MODEL LCURLY vars data model bloque2 RCURLY .)


state 125

    (41) ciclo -> FOR ID IN . DOT ID bloque

    DOT             shift and go to state 195


state 126

    (90) expresion9 -> termino expresion9i .

    GREATERTHAN     reduce using rule 90 (expresion9 -> termino expresion9i .)
    LESSTHAN        reduce using rule 90 (expresion9 -> termino expresion9i .)
    GREATEREQUAL    reduce using rule 90 (expresion9 -> termino expresion9i .)
    LESSEQUAL       reduce using rule 90 (expresion9 -> termino expresion9i .)
    SHR             reduce using rule 90 (expresion9 -> termino expresion9i .)
    SHL             reduce using rule 90 (expresion9 -> termino expresion9i .)
    EQ              reduce using rule 90 (expresion9 -> termino expresion9i .)
    DIF             reduce using rule 90 (expresion9 -> termino expresion9i .)
    ANDB            reduce using rule 90 (expresion9 -> termino expresion9i .)
    XOR             reduce using rule 90 (expresion9 -> termino expresion9i .)
    ORB             reduce using rule 90 (expresion9 -> termino expresion9i .)
    AND             reduce using rule 90 (expresion9 -> termino expresion9i .)
    OR              reduce using rule 90 (expresion9 -> termino expresion9i .)
    SEMIC           reduce using rule 90 (expresion9 -> termino expresion9i .)
    RBRACKET        reduce using rule 90 (expresion9 -> termino expresion9i .)
    COMMA           reduce using rule 90 (expresion9 -> termino expresion9i .)
    RPAREN          reduce using rule 90 (expresion9 -> termino expresion9i .)


state 127

    (91) expresion9i -> PLUS . expresion9
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 196
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 128

    (92) expresion9i -> MINUS . expresion9
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 197
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 129

    (93) expresion9i -> empty .

    GREATERTHAN     reduce using rule 93 (expresion9i -> empty .)
    LESSTHAN        reduce using rule 93 (expresion9i -> empty .)
    GREATEREQUAL    reduce using rule 93 (expresion9i -> empty .)
    LESSEQUAL       reduce using rule 93 (expresion9i -> empty .)
    SHR             reduce using rule 93 (expresion9i -> empty .)
    SHL             reduce using rule 93 (expresion9i -> empty .)
    EQ              reduce using rule 93 (expresion9i -> empty .)
    DIF             reduce using rule 93 (expresion9i -> empty .)
    ANDB            reduce using rule 93 (expresion9i -> empty .)
    XOR             reduce using rule 93 (expresion9i -> empty .)
    ORB             reduce using rule 93 (expresion9i -> empty .)
    AND             reduce using rule 93 (expresion9i -> empty .)
    OR              reduce using rule 93 (expresion9i -> empty .)
    SEMIC           reduce using rule 93 (expresion9i -> empty .)
    RBRACKET        reduce using rule 93 (expresion9i -> empty .)
    COMMA           reduce using rule 93 (expresion9i -> empty .)
    RPAREN          reduce using rule 93 (expresion9i -> empty .)


state 130

    (110) valor -> int .

    EXP             reduce using rule 110 (valor -> int .)
    STAR            reduce using rule 110 (valor -> int .)
    SLASH           reduce using rule 110 (valor -> int .)
    MOD             reduce using rule 110 (valor -> int .)
    PLUS            reduce using rule 110 (valor -> int .)
    MINUS           reduce using rule 110 (valor -> int .)
    GREATERTHAN     reduce using rule 110 (valor -> int .)
    LESSTHAN        reduce using rule 110 (valor -> int .)
    GREATEREQUAL    reduce using rule 110 (valor -> int .)
    LESSEQUAL       reduce using rule 110 (valor -> int .)
    SHR             reduce using rule 110 (valor -> int .)
    SHL             reduce using rule 110 (valor -> int .)
    EQ              reduce using rule 110 (valor -> int .)
    DIF             reduce using rule 110 (valor -> int .)
    ANDB            reduce using rule 110 (valor -> int .)
    XOR             reduce using rule 110 (valor -> int .)
    ORB             reduce using rule 110 (valor -> int .)
    AND             reduce using rule 110 (valor -> int .)
    OR              reduce using rule 110 (valor -> int .)
    SEMIC           reduce using rule 110 (valor -> int .)
    RBRACKET        reduce using rule 110 (valor -> int .)
    COMMA           reduce using rule 110 (valor -> int .)
    RPAREN          reduce using rule 110 (valor -> int .)


state 131

    (111) valor -> float .

    EXP             reduce using rule 111 (valor -> float .)
    STAR            reduce using rule 111 (valor -> float .)
    SLASH           reduce using rule 111 (valor -> float .)
    MOD             reduce using rule 111 (valor -> float .)
    PLUS            reduce using rule 111 (valor -> float .)
    MINUS           reduce using rule 111 (valor -> float .)
    GREATERTHAN     reduce using rule 111 (valor -> float .)
    LESSTHAN        reduce using rule 111 (valor -> float .)
    GREATEREQUAL    reduce using rule 111 (valor -> float .)
    LESSEQUAL       reduce using rule 111 (valor -> float .)
    SHR             reduce using rule 111 (valor -> float .)
    SHL             reduce using rule 111 (valor -> float .)
    EQ              reduce using rule 111 (valor -> float .)
    DIF             reduce using rule 111 (valor -> float .)
    ANDB            reduce using rule 111 (valor -> float .)
    XOR             reduce using rule 111 (valor -> float .)
    ORB             reduce using rule 111 (valor -> float .)
    AND             reduce using rule 111 (valor -> float .)
    OR              reduce using rule 111 (valor -> float .)
    SEMIC           reduce using rule 111 (valor -> float .)
    RBRACKET        reduce using rule 111 (valor -> float .)
    COMMA           reduce using rule 111 (valor -> float .)
    RPAREN          reduce using rule 111 (valor -> float .)


state 132

    (109) valor -> id .

    EXP             reduce using rule 109 (valor -> id .)
    STAR            reduce using rule 109 (valor -> id .)
    SLASH           reduce using rule 109 (valor -> id .)
    MOD             reduce using rule 109 (valor -> id .)
    PLUS            reduce using rule 109 (valor -> id .)
    MINUS           reduce using rule 109 (valor -> id .)
    GREATERTHAN     reduce using rule 109 (valor -> id .)
    LESSTHAN        reduce using rule 109 (valor -> id .)
    GREATEREQUAL    reduce using rule 109 (valor -> id .)
    LESSEQUAL       reduce using rule 109 (valor -> id .)
    SHR             reduce using rule 109 (valor -> id .)
    SHL             reduce using rule 109 (valor -> id .)
    EQ              reduce using rule 109 (valor -> id .)
    DIF             reduce using rule 109 (valor -> id .)
    ANDB            reduce using rule 109 (valor -> id .)
    XOR             reduce using rule 109 (valor -> id .)
    ORB             reduce using rule 109 (valor -> id .)
    AND             reduce using rule 109 (valor -> id .)
    OR              reduce using rule 109 (valor -> id .)
    SEMIC           reduce using rule 109 (valor -> id .)
    RBRACKET        reduce using rule 109 (valor -> id .)
    COMMA           reduce using rule 109 (valor -> id .)
    RPAREN          reduce using rule 109 (valor -> id .)


state 133

    (115) float -> CTEF .

    EXP             reduce using rule 115 (float -> CTEF .)
    STAR            reduce using rule 115 (float -> CTEF .)
    SLASH           reduce using rule 115 (float -> CTEF .)
    MOD             reduce using rule 115 (float -> CTEF .)
    PLUS            reduce using rule 115 (float -> CTEF .)
    MINUS           reduce using rule 115 (float -> CTEF .)
    GREATERTHAN     reduce using rule 115 (float -> CTEF .)
    LESSTHAN        reduce using rule 115 (float -> CTEF .)
    GREATEREQUAL    reduce using rule 115 (float -> CTEF .)
    LESSEQUAL       reduce using rule 115 (float -> CTEF .)
    SHR             reduce using rule 115 (float -> CTEF .)
    SHL             reduce using rule 115 (float -> CTEF .)
    EQ              reduce using rule 115 (float -> CTEF .)
    DIF             reduce using rule 115 (float -> CTEF .)
    ANDB            reduce using rule 115 (float -> CTEF .)
    XOR             reduce using rule 115 (float -> CTEF .)
    ORB             reduce using rule 115 (float -> CTEF .)
    AND             reduce using rule 115 (float -> CTEF .)
    OR              reduce using rule 115 (float -> CTEF .)
    SEMIC           reduce using rule 115 (float -> CTEF .)
    RBRACKET        reduce using rule 115 (float -> CTEF .)
    COMMA           reduce using rule 115 (float -> CTEF .)
    RPAREN          reduce using rule 115 (float -> CTEF .)


state 134

    (103) exponencial -> exponencial2 valor .

    EXP             reduce using rule 103 (exponencial -> exponencial2 valor .)
    STAR            reduce using rule 103 (exponencial -> exponencial2 valor .)
    SLASH           reduce using rule 103 (exponencial -> exponencial2 valor .)
    MOD             reduce using rule 103 (exponencial -> exponencial2 valor .)
    PLUS            reduce using rule 103 (exponencial -> exponencial2 valor .)
    MINUS           reduce using rule 103 (exponencial -> exponencial2 valor .)
    GREATERTHAN     reduce using rule 103 (exponencial -> exponencial2 valor .)
    LESSTHAN        reduce using rule 103 (exponencial -> exponencial2 valor .)
    GREATEREQUAL    reduce using rule 103 (exponencial -> exponencial2 valor .)
    LESSEQUAL       reduce using rule 103 (exponencial -> exponencial2 valor .)
    SHR             reduce using rule 103 (exponencial -> exponencial2 valor .)
    SHL             reduce using rule 103 (exponencial -> exponencial2 valor .)
    EQ              reduce using rule 103 (exponencial -> exponencial2 valor .)
    DIF             reduce using rule 103 (exponencial -> exponencial2 valor .)
    ANDB            reduce using rule 103 (exponencial -> exponencial2 valor .)
    XOR             reduce using rule 103 (exponencial -> exponencial2 valor .)
    ORB             reduce using rule 103 (exponencial -> exponencial2 valor .)
    AND             reduce using rule 103 (exponencial -> exponencial2 valor .)
    OR              reduce using rule 103 (exponencial -> exponencial2 valor .)
    SEMIC           reduce using rule 103 (exponencial -> exponencial2 valor .)
    RBRACKET        reduce using rule 103 (exponencial -> exponencial2 valor .)
    COMMA           reduce using rule 103 (exponencial -> exponencial2 valor .)
    RPAREN          reduce using rule 103 (exponencial -> exponencial2 valor .)


state 135

    (112) int -> CTEI .

    EXP             reduce using rule 112 (int -> CTEI .)
    STAR            reduce using rule 112 (int -> CTEI .)
    SLASH           reduce using rule 112 (int -> CTEI .)
    MOD             reduce using rule 112 (int -> CTEI .)
    PLUS            reduce using rule 112 (int -> CTEI .)
    MINUS           reduce using rule 112 (int -> CTEI .)
    GREATERTHAN     reduce using rule 112 (int -> CTEI .)
    LESSTHAN        reduce using rule 112 (int -> CTEI .)
    GREATEREQUAL    reduce using rule 112 (int -> CTEI .)
    LESSEQUAL       reduce using rule 112 (int -> CTEI .)
    SHR             reduce using rule 112 (int -> CTEI .)
    SHL             reduce using rule 112 (int -> CTEI .)
    EQ              reduce using rule 112 (int -> CTEI .)
    DIF             reduce using rule 112 (int -> CTEI .)
    ANDB            reduce using rule 112 (int -> CTEI .)
    XOR             reduce using rule 112 (int -> CTEI .)
    ORB             reduce using rule 112 (int -> CTEI .)
    AND             reduce using rule 112 (int -> CTEI .)
    OR              reduce using rule 112 (int -> CTEI .)
    SEMIC           reduce using rule 112 (int -> CTEI .)
    RBRACKET        reduce using rule 112 (int -> CTEI .)
    COMMA           reduce using rule 112 (int -> CTEI .)
    RPAREN          reduce using rule 112 (int -> CTEI .)


state 136

    (95) termino2 -> STAR . termino
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    exponencial2                   shift and go to state 86
    termino                        shift and go to state 198
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 137

    (94) termino -> factor termino2 .

    PLUS            reduce using rule 94 (termino -> factor termino2 .)
    MINUS           reduce using rule 94 (termino -> factor termino2 .)
    GREATERTHAN     reduce using rule 94 (termino -> factor termino2 .)
    LESSTHAN        reduce using rule 94 (termino -> factor termino2 .)
    GREATEREQUAL    reduce using rule 94 (termino -> factor termino2 .)
    LESSEQUAL       reduce using rule 94 (termino -> factor termino2 .)
    SHR             reduce using rule 94 (termino -> factor termino2 .)
    SHL             reduce using rule 94 (termino -> factor termino2 .)
    EQ              reduce using rule 94 (termino -> factor termino2 .)
    DIF             reduce using rule 94 (termino -> factor termino2 .)
    ANDB            reduce using rule 94 (termino -> factor termino2 .)
    XOR             reduce using rule 94 (termino -> factor termino2 .)
    ORB             reduce using rule 94 (termino -> factor termino2 .)
    AND             reduce using rule 94 (termino -> factor termino2 .)
    OR              reduce using rule 94 (termino -> factor termino2 .)
    SEMIC           reduce using rule 94 (termino -> factor termino2 .)
    RBRACKET        reduce using rule 94 (termino -> factor termino2 .)
    COMMA           reduce using rule 94 (termino -> factor termino2 .)
    RPAREN          reduce using rule 94 (termino -> factor termino2 .)


state 138

    (96) termino2 -> SLASH . termino
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    exponencial2                   shift and go to state 86
    termino                        shift and go to state 199
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 139

    (98) termino2 -> empty .

    PLUS            reduce using rule 98 (termino2 -> empty .)
    MINUS           reduce using rule 98 (termino2 -> empty .)
    GREATERTHAN     reduce using rule 98 (termino2 -> empty .)
    LESSTHAN        reduce using rule 98 (termino2 -> empty .)
    GREATEREQUAL    reduce using rule 98 (termino2 -> empty .)
    LESSEQUAL       reduce using rule 98 (termino2 -> empty .)
    SHR             reduce using rule 98 (termino2 -> empty .)
    SHL             reduce using rule 98 (termino2 -> empty .)
    EQ              reduce using rule 98 (termino2 -> empty .)
    DIF             reduce using rule 98 (termino2 -> empty .)
    ANDB            reduce using rule 98 (termino2 -> empty .)
    XOR             reduce using rule 98 (termino2 -> empty .)
    ORB             reduce using rule 98 (termino2 -> empty .)
    AND             reduce using rule 98 (termino2 -> empty .)
    OR              reduce using rule 98 (termino2 -> empty .)
    SEMIC           reduce using rule 98 (termino2 -> empty .)
    RBRACKET        reduce using rule 98 (termino2 -> empty .)
    COMMA           reduce using rule 98 (termino2 -> empty .)
    RPAREN          reduce using rule 98 (termino2 -> empty .)


state 140

    (97) termino2 -> MOD . termino
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    exponencial2                   shift and go to state 86
    termino                        shift and go to state 200
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 141

    (101) factor2 -> empty .

    STAR            reduce using rule 101 (factor2 -> empty .)
    SLASH           reduce using rule 101 (factor2 -> empty .)
    MOD             reduce using rule 101 (factor2 -> empty .)
    PLUS            reduce using rule 101 (factor2 -> empty .)
    MINUS           reduce using rule 101 (factor2 -> empty .)
    GREATERTHAN     reduce using rule 101 (factor2 -> empty .)
    LESSTHAN        reduce using rule 101 (factor2 -> empty .)
    GREATEREQUAL    reduce using rule 101 (factor2 -> empty .)
    LESSEQUAL       reduce using rule 101 (factor2 -> empty .)
    SHR             reduce using rule 101 (factor2 -> empty .)
    SHL             reduce using rule 101 (factor2 -> empty .)
    EQ              reduce using rule 101 (factor2 -> empty .)
    DIF             reduce using rule 101 (factor2 -> empty .)
    ANDB            reduce using rule 101 (factor2 -> empty .)
    XOR             reduce using rule 101 (factor2 -> empty .)
    ORB             reduce using rule 101 (factor2 -> empty .)
    AND             reduce using rule 101 (factor2 -> empty .)
    OR              reduce using rule 101 (factor2 -> empty .)
    SEMIC           reduce using rule 101 (factor2 -> empty .)
    RBRACKET        reduce using rule 101 (factor2 -> empty .)
    COMMA           reduce using rule 101 (factor2 -> empty .)
    RPAREN          reduce using rule 101 (factor2 -> empty .)


state 142

    (100) factor2 -> EXP . factor
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    factor                         shift and go to state 201
    exponencial2                   shift and go to state 86
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 143

    (99) factor -> exponencial factor2 .

    STAR            reduce using rule 99 (factor -> exponencial factor2 .)
    SLASH           reduce using rule 99 (factor -> exponencial factor2 .)
    MOD             reduce using rule 99 (factor -> exponencial factor2 .)
    PLUS            reduce using rule 99 (factor -> exponencial factor2 .)
    MINUS           reduce using rule 99 (factor -> exponencial factor2 .)
    GREATERTHAN     reduce using rule 99 (factor -> exponencial factor2 .)
    LESSTHAN        reduce using rule 99 (factor -> exponencial factor2 .)
    GREATEREQUAL    reduce using rule 99 (factor -> exponencial factor2 .)
    LESSEQUAL       reduce using rule 99 (factor -> exponencial factor2 .)
    SHR             reduce using rule 99 (factor -> exponencial factor2 .)
    SHL             reduce using rule 99 (factor -> exponencial factor2 .)
    EQ              reduce using rule 99 (factor -> exponencial factor2 .)
    DIF             reduce using rule 99 (factor -> exponencial factor2 .)
    ANDB            reduce using rule 99 (factor -> exponencial factor2 .)
    XOR             reduce using rule 99 (factor -> exponencial factor2 .)
    ORB             reduce using rule 99 (factor -> exponencial factor2 .)
    AND             reduce using rule 99 (factor -> exponencial factor2 .)
    OR              reduce using rule 99 (factor -> exponencial factor2 .)
    COMMA           reduce using rule 99 (factor -> exponencial factor2 .)
    SEMIC           reduce using rule 99 (factor -> exponencial factor2 .)
    RBRACKET        reduce using rule 99 (factor -> exponencial factor2 .)
    RPAREN          reduce using rule 99 (factor -> exponencial factor2 .)


state 144

    (65) expresion2i -> AND . expresion2
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 202
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97

state 145

    (64) expresion2 -> expresion3 expresion2i .

    OR              reduce using rule 64 (expresion2 -> expresion3 expresion2i .)
    SEMIC           reduce using rule 64 (expresion2 -> expresion3 expresion2i .)
    RBRACKET        reduce using rule 64 (expresion2 -> expresion3 expresion2i .)
    RPAREN          reduce using rule 64 (expresion2 -> expresion3 expresion2i .)
    COMMA           reduce using rule 64 (expresion2 -> expresion3 expresion2i .)


state 146

    (66) expresion2i -> empty .

    OR              reduce using rule 66 (expresion2i -> empty .)
    SEMIC           reduce using rule 66 (expresion2i -> empty .)
    RBRACKET        reduce using rule 66 (expresion2i -> empty .)
    COMMA           reduce using rule 66 (expresion2i -> empty .)
    RPAREN          reduce using rule 66 (expresion2i -> empty .)


state 147

    (61) expresion -> expresion2 expresioni .

    SEMIC           reduce using rule 61 (expresion -> expresion2 expresioni .)
    COMMA           reduce using rule 61 (expresion -> expresion2 expresioni .)
    RBRACKET        reduce using rule 61 (expresion -> expresion2 expresioni .)
    RPAREN          reduce using rule 61 (expresion -> expresion2 expresioni .)


state 148

    (62) expresioni -> OR . expresion
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 203

state 149

    (63) expresioni -> empty .

    SEMIC           reduce using rule 63 (expresioni -> empty .)
    RBRACKET        reduce using rule 63 (expresioni -> empty .)
    COMMA           reduce using rule 63 (expresioni -> empty .)
    RPAREN          reduce using rule 63 (expresioni -> empty .)


state 150

    (71) expresion4i -> XOR . expresion4
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 204
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    expresion9                     shift and go to state 96
    empty                          shift and go to state 89
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88

state 151

    (72) expresion4i -> empty .

    ORB             reduce using rule 72 (expresion4i -> empty .)
    AND             reduce using rule 72 (expresion4i -> empty .)
    OR              reduce using rule 72 (expresion4i -> empty .)
    SEMIC           reduce using rule 72 (expresion4i -> empty .)
    RBRACKET        reduce using rule 72 (expresion4i -> empty .)
    COMMA           reduce using rule 72 (expresion4i -> empty .)
    RPAREN          reduce using rule 72 (expresion4i -> empty .)


state 152

    (70) expresion4 -> expresion5 expresion4i .

    ORB             reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    AND             reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    OR              reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    RPAREN          reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    SEMIC           reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    COMMA           reduce using rule 70 (expresion4 -> expresion5 expresion4i .)
    RBRACKET        reduce using rule 70 (expresion4 -> expresion5 expresion4i .)


state 153

    (67) expresion3 -> expresion4 expresion3i .

    AND             reduce using rule 67 (expresion3 -> expresion4 expresion3i .)
    OR              reduce using rule 67 (expresion3 -> expresion4 expresion3i .)
    SEMIC           reduce using rule 67 (expresion3 -> expresion4 expresion3i .)
    COMMA           reduce using rule 67 (expresion3 -> expresion4 expresion3i .)
    RBRACKET        reduce using rule 67 (expresion3 -> expresion4 expresion3i .)
    RPAREN          reduce using rule 67 (expresion3 -> expresion4 expresion3i .)


state 154

    (68) expresion3i -> ORB . expresion3
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    exponencial2                   shift and go to state 86
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 205
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    factor                         shift and go to state 87

state 155

    (69) expresion3i -> empty .

    AND             reduce using rule 69 (expresion3i -> empty .)
    OR              reduce using rule 69 (expresion3i -> empty .)
    SEMIC           reduce using rule 69 (expresion3i -> empty .)
    RBRACKET        reduce using rule 69 (expresion3i -> empty .)
    COMMA           reduce using rule 69 (expresion3i -> empty .)
    RPAREN          reduce using rule 69 (expresion3i -> empty .)


state 156

    (76) expresion6 -> expresion7 expresion6i .

    ANDB            reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    XOR             reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    ORB             reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    AND             reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    OR              reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    RPAREN          reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    SEMIC           reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    RBRACKET        reduce using rule 76 (expresion6 -> expresion7 expresion6i .)
    COMMA           reduce using rule 76 (expresion6 -> expresion7 expresion6i .)


state 157

    (78) expresion6i -> DIF . expresion6
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion6                     shift and go to state 206
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    expresion7                     shift and go to state 94
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 158

    (77) expresion6i -> EQ . expresion6
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion6                     shift and go to state 207
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    expresion7                     shift and go to state 94
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 159

    (79) expresion6i -> empty .

    ANDB            reduce using rule 79 (expresion6i -> empty .)
    XOR             reduce using rule 79 (expresion6i -> empty .)
    ORB             reduce using rule 79 (expresion6i -> empty .)
    AND             reduce using rule 79 (expresion6i -> empty .)
    OR              reduce using rule 79 (expresion6i -> empty .)
    SEMIC           reduce using rule 79 (expresion6i -> empty .)
    RBRACKET        reduce using rule 79 (expresion6i -> empty .)
    COMMA           reduce using rule 79 (expresion6i -> empty .)
    RPAREN          reduce using rule 79 (expresion6i -> empty .)


state 160

    (73) expresion5 -> expresion6 expresion5i .

    XOR             reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    ORB             reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    AND             reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    OR              reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    SEMIC           reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    RBRACKET        reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    COMMA           reduce using rule 73 (expresion5 -> expresion6 expresion5i .)
    RPAREN          reduce using rule 73 (expresion5 -> expresion6 expresion5i .)


state 161

    (74) expresion5i -> ANDB . expresion5
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion5                     shift and go to state 208
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    expresion9                     shift and go to state 96
    empty                          shift and go to state 89
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88

state 162

    (75) expresion5i -> empty .

    XOR             reduce using rule 75 (expresion5i -> empty .)
    ORB             reduce using rule 75 (expresion5i -> empty .)
    AND             reduce using rule 75 (expresion5i -> empty .)
    OR              reduce using rule 75 (expresion5i -> empty .)
    SEMIC           reduce using rule 75 (expresion5i -> empty .)
    RBRACKET        reduce using rule 75 (expresion5i -> empty .)
    COMMA           reduce using rule 75 (expresion5i -> empty .)
    RPAREN          reduce using rule 75 (expresion5i -> empty .)


state 163

    (87) expresion8i -> GREATEREQUAL . expresion8
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 209
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 164

    (84) expresion8 -> expresion9 expresion8i .

    SHR             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    SHL             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    EQ              reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    DIF             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    ANDB            reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    XOR             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    ORB             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    AND             reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    OR              reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    RBRACKET        reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    SEMIC           reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    COMMA           reduce using rule 84 (expresion8 -> expresion9 expresion8i .)
    RPAREN          reduce using rule 84 (expresion8 -> expresion9 expresion8i .)


state 165

    (86) expresion8i -> LESSTHAN . expresion8
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 210
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 166

    (85) expresion8i -> GREATERTHAN . expresion8
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 211
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 167

    (88) expresion8i -> LESSEQUAL . expresion8
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 212
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 168

    (89) expresion8i -> empty .

    SHR             reduce using rule 89 (expresion8i -> empty .)
    SHL             reduce using rule 89 (expresion8i -> empty .)
    EQ              reduce using rule 89 (expresion8i -> empty .)
    DIF             reduce using rule 89 (expresion8i -> empty .)
    ANDB            reduce using rule 89 (expresion8i -> empty .)
    XOR             reduce using rule 89 (expresion8i -> empty .)
    ORB             reduce using rule 89 (expresion8i -> empty .)
    AND             reduce using rule 89 (expresion8i -> empty .)
    OR              reduce using rule 89 (expresion8i -> empty .)
    SEMIC           reduce using rule 89 (expresion8i -> empty .)
    RBRACKET        reduce using rule 89 (expresion8i -> empty .)
    COMMA           reduce using rule 89 (expresion8i -> empty .)
    RPAREN          reduce using rule 89 (expresion8i -> empty .)


state 169

    (81) expresion7i -> SHR . expresion7
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion7                     shift and go to state 213
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 170

    (80) expresion7 -> expresion8 expresion7i .

    EQ              reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    DIF             reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    ANDB            reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    XOR             reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    ORB             reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    AND             reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    OR              reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    RBRACKET        reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    SEMIC           reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    COMMA           reduce using rule 80 (expresion7 -> expresion8 expresion7i .)
    RPAREN          reduce using rule 80 (expresion7 -> expresion8 expresion7i .)


state 171

    (82) expresion7i -> SHL . expresion7
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    expresion7                     shift and go to state 214
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    exponencial2                   shift and go to state 86
    termino                        shift and go to state 83
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89

state 172

    (83) expresion7i -> empty .

    EQ              reduce using rule 83 (expresion7i -> empty .)
    DIF             reduce using rule 83 (expresion7i -> empty .)
    ANDB            reduce using rule 83 (expresion7i -> empty .)
    XOR             reduce using rule 83 (expresion7i -> empty .)
    ORB             reduce using rule 83 (expresion7i -> empty .)
    AND             reduce using rule 83 (expresion7i -> empty .)
    OR              reduce using rule 83 (expresion7i -> empty .)
    SEMIC           reduce using rule 83 (expresion7i -> empty .)
    RBRACKET        reduce using rule 83 (expresion7i -> empty .)
    COMMA           reduce using rule 83 (expresion7i -> empty .)
    RPAREN          reduce using rule 83 (expresion7i -> empty .)


state 173

    (102) exponencial -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 215


state 174

    (13) build -> BUILD expresion SEMIC .

    IF              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    PRINT           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    FOR             reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RETURN          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    BUILD           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    CONDITION       reduce using rule 13 (build -> BUILD expresion SEMIC .)
    ID              reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TINT            reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TBOOL           reduce using rule 13 (build -> BUILD expresion SEMIC .)
    TFLOAT          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    RCURLY          reduce using rule 13 (build -> BUILD expresion SEMIC .)
    WHERE           reduce using rule 13 (build -> BUILD expresion SEMIC .)


state 175

    (14) where -> WHERE LCURLY . bloque2 RCURLY
    (58) bloque2 -> . statement bloque2
    (59) bloque2 -> . empty
    (16) statement -> . declaration
    (17) statement -> . asign
    (18) statement -> . condition
    (19) statement -> . write
    (20) statement -> . ciclo
    (21) statement -> . return
    (22) statement -> . build
    (23) statement -> . wherecondition
    (124) empty -> .
    (51) declaration -> . typedeclaration POINTS ID dec22 SEMIC
    (27) asign -> . id asign_signo expresiones SEMIC
    (35) condition -> . IF asign bloque condition1
    (38) write -> . PRINT asign write2 SEMIC
    (41) ciclo -> . FOR ID IN DOT ID bloque
    (60) return -> . RETURN asign
    (13) build -> . BUILD expresion SEMIC
    (15) wherecondition -> . CONDITION expresion SEMIC
    (52) typedeclaration -> . type dimensions
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions
    (121) type -> . TINT
    (122) type -> . TBOOL
    (123) type -> . TFLOAT

    RCURLY          reduce using rule 124 (empty -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 33
    FOR             shift and go to state 43
    RETURN          shift and go to state 31
    BUILD           shift and go to state 44
    CONDITION       shift and go to state 52
    ID              shift and go to state 36
    TINT            shift and go to state 15
    TBOOL           shift and go to state 18
    TFLOAT          shift and go to state 16

    id                             shift and go to state 34
    ciclo                          shift and go to state 35
    write                          shift and go to state 37
    build                          shift and go to state 38
    statement                      shift and go to state 39
    type                           shift and go to state 28
    empty                          shift and go to state 79
    return                         shift and go to state 42
    typedeclaration                shift and go to state 25
    declaration                    shift and go to state 45
    condition                      shift and go to state 47
    bloque2                        shift and go to state 216
    asign                          shift and go to state 51
    wherecondition                 shift and go to state 53

state 176

    (35) condition -> IF asign bloque . condition1
    (36) condition1 -> . ELSE bloque
    (37) condition1 -> . empty
    (124) empty -> .

    ELSE            shift and go to state 218
    IF              reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    BUILD           reduce using rule 124 (empty -> .)
    CONDITION       reduce using rule 124 (empty -> .)
    ID              reduce using rule 124 (empty -> .)
    TINT            reduce using rule 124 (empty -> .)
    TBOOL           reduce using rule 124 (empty -> .)
    TFLOAT          reduce using rule 124 (empty -> .)
    RCURLY          reduce using rule 124 (empty -> .)
    WHERE           reduce using rule 124 (empty -> .)

    empty                          shift and go to state 219
    condition1                     shift and go to state 217

state 177

    (12) optimize -> MAX LCURLY statement . where RCURLY
    (14) where -> . WHERE LCURLY bloque2 RCURLY

    WHERE           shift and go to state 103

    where                          shift and go to state 220

state 178

    (15) wherecondition -> CONDITION expresion SEMIC .

    IF              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    PRINT           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    FOR             reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RETURN          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    BUILD           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    CONDITION       reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    ID              reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TINT            reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TBOOL           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    TFLOAT          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    RCURLY          reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)
    WHERE           reduce using rule 15 (wherecondition -> CONDITION expresion SEMIC .)


state 179

    (57) bloque -> LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 221


state 180

    (47) funcion3 -> LPAREN type RPAREN .

    LCURLY          reduce using rule 47 (funcion3 -> LPAREN type RPAREN .)


state 181

    (45) funcion2 -> COMMA type ID . funcion2
    (45) funcion2 -> . COMMA type ID funcion2
    (46) funcion2 -> .

    COMMA           shift and go to state 56
    RPAREN          reduce using rule 46 (funcion2 -> .)

    funcion2                       shift and go to state 222

state 182

    (55) dec22 -> COMMA . ID dec22

    ID              shift and go to state 223


state 183

    (51) declaration -> typedeclaration POINTS ID dec22 . SEMIC

    SEMIC           shift and go to state 224


state 184

    (56) dec22 -> empty .

    SEMIC           reduce using rule 56 (dec22 -> empty .)


state 185

    (53) dimensions -> LBRACKET expresion RBRACKET . dimensions
    (53) dimensions -> . LBRACKET expresion RBRACKET dimensions
    (54) dimensions -> . empty
    (124) empty -> .

    LBRACKET        shift and go to state 62
    POINTS          reduce using rule 124 (empty -> .)
    ASEQ            reduce using rule 124 (empty -> .)
    PLUSEQ          reduce using rule 124 (empty -> .)
    MINEQ           reduce using rule 124 (empty -> .)
    MULTEQ          reduce using rule 124 (empty -> .)
    DIVEQ           reduce using rule 124 (empty -> .)
    EXP             reduce using rule 124 (empty -> .)
    STAR            reduce using rule 124 (empty -> .)
    SLASH           reduce using rule 124 (empty -> .)
    MOD             reduce using rule 124 (empty -> .)
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    GREATERTHAN     reduce using rule 124 (empty -> .)
    LESSTHAN        reduce using rule 124 (empty -> .)
    GREATEREQUAL    reduce using rule 124 (empty -> .)
    LESSEQUAL       reduce using rule 124 (empty -> .)
    SHR             reduce using rule 124 (empty -> .)
    SHL             reduce using rule 124 (empty -> .)
    EQ              reduce using rule 124 (empty -> .)
    DIF             reduce using rule 124 (empty -> .)
    ANDB            reduce using rule 124 (empty -> .)
    XOR             reduce using rule 124 (empty -> .)
    ORB             reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    SEMIC           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    RPAREN          reduce using rule 124 (empty -> .)

    dimensions                     shift and go to state 225
    empty                          shift and go to state 63

state 186

    (11) optimize -> MIN LCURLY statement where . RCURLY

    RCURLY          shift and go to state 226


state 187

    (38) write -> PRINT asign write2 SEMIC .

    IF              reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    PRINT           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    FOR             reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    RETURN          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    BUILD           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    CONDITION       reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    ID              reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TINT            reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TBOOL           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    TFLOAT          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    RCURLY          reduce using rule 38 (write -> PRINT asign write2 SEMIC .)
    WHERE           reduce using rule 38 (write -> PRINT asign write2 SEMIC .)


state 188

    (39) write2 -> COMMA asign . write2
    (39) write2 -> . COMMA asign write2
    (40) write2 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 117
    SEMIC           reduce using rule 124 (empty -> .)

    write2                         shift and go to state 227
    empty                          shift and go to state 118

state 189

    (27) asign -> id asign_signo expresiones SEMIC .

    IF              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    PRINT           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    FOR             reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RETURN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    BUILD           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    CONDITION       reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    ID              reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TINT            reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TBOOL           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    TFLOAT          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    COMMA           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    SEMIC           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    WHERE           reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    RPAREN          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)
    LCURLY          reduce using rule 27 (asign -> id asign_signo expresiones SEMIC .)


state 190

    (28) expresiones -> expresion COMMA . expresiones
    (28) expresiones -> . expresion COMMA expresiones
    (29) expresiones -> . expresion
    (61) expresion -> . expresion2 expresioni
    (64) expresion2 -> . expresion3 expresion2i
    (67) expresion3 -> . expresion4 expresion3i
    (70) expresion4 -> . expresion5 expresion4i
    (73) expresion5 -> . expresion6 expresion5i
    (76) expresion6 -> . expresion7 expresion6i
    (80) expresion7 -> . expresion8 expresion7i
    (84) expresion8 -> . expresion9 expresion8i
    (90) expresion9 -> . termino expresion9i
    (94) termino -> . factor termino2
    (99) factor -> . exponencial factor2
    (102) exponencial -> . LPAREN expresion RPAREN
    (103) exponencial -> . exponencial2 valor
    (104) exponencial2 -> . NOT
    (105) exponencial2 -> . MM
    (106) exponencial2 -> . PP
    (107) exponencial2 -> . NEW
    (108) exponencial2 -> . empty
    (124) empty -> .

    LPAREN          shift and go to state 98
    NOT             shift and go to state 101
    MM              shift and go to state 100
    PP              shift and go to state 85
    NEW             shift and go to state 84
    ID              reduce using rule 124 (empty -> .)
    CTEI            reduce using rule 124 (empty -> .)
    CTEF            reduce using rule 124 (empty -> .)

    termino                        shift and go to state 83
    expresiones                    shift and go to state 228
    exponencial2                   shift and go to state 86
    factor                         shift and go to state 87
    exponencial                    shift and go to state 88
    empty                          shift and go to state 89
    expresion3                     shift and go to state 90
    expresion2                     shift and go to state 91
    expresion5                     shift and go to state 92
    expresion4                     shift and go to state 93
    expresion7                     shift and go to state 94
    expresion6                     shift and go to state 95
    expresion9                     shift and go to state 96
    expresion8                     shift and go to state 97
    expresion                      shift and go to state 120

state 191

    (117) llamarfuncion3 -> asign llamarfuncion33 .

    RPAREN          reduce using rule 117 (llamarfuncion3 -> asign llamarfuncion33 .)


state 192

    (119) llamarfuncion33 -> COMMA . asign llamarfuncion33
    (27) asign -> . id asign_signo expresiones SEMIC
    (113) id -> . ID llamarfuncion
    (114) id -> . ID dimensions

    ID              shift and go to state 36

    asign                          shift and go to state 229
    id                             shift and go to state 34

state 193

    (120) llamarfuncion33 -> empty .

    RPAREN          reduce using rule 120 (llamarfuncion33 -> empty .)


state 194

    (116) llamarfuncion -> LPAREN llamarfuncion3 RPAREN .

    ASEQ            reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUSEQ          reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINEQ           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MULTEQ          reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIVEQ           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EXP             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    STAR            reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SLASH           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MOD             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    PLUS            reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    MINUS           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATERTHAN     reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSTHAN        reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    GREATEREQUAL    reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    LESSEQUAL       reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHR             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SHL             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    EQ              reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    DIF             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ANDB            reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    XOR             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    ORB             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    AND             reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    OR              reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    SEMIC           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RBRACKET        reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    COMMA           reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)
    RPAREN          reduce using rule 116 (llamarfuncion -> LPAREN llamarfuncion3 RPAREN .)


state 195

    (41) ciclo -> FOR ID IN DOT . ID bloque

    ID              shift and go to state 230


state 196

    (91) expresion9i -> PLUS expresion9 .

    GREATERTHAN     reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    LESSTHAN        reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    GREATEREQUAL    reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    LESSEQUAL       reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    SHR             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    SHL             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    EQ              reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    DIF             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    ANDB            reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    XOR             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    ORB             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    AND             reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    OR              reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    SEMIC           reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    RBRACKET        reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    COMMA           reduce using rule 91 (expresion9i -> PLUS expresion9 .)
    RPAREN          reduce using rule 91 (expresion9i -> PLUS expresion9 .)


state 197

    (92) expresion9i -> MINUS expresion9 .

    GREATERTHAN     reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    LESSTHAN        reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    GREATEREQUAL    reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    LESSEQUAL       reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    SHR             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    SHL             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    EQ              reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    DIF             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    ANDB            reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    XOR             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    ORB             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    AND             reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    OR              reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    SEMIC           reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    RBRACKET        reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    COMMA           reduce using rule 92 (expresion9i -> MINUS expresion9 .)
    RPAREN          reduce using rule 92 (expresion9i -> MINUS expresion9 .)


state 198

    (95) termino2 -> STAR termino .

    PLUS            reduce using rule 95 (termino2 -> STAR termino .)
    MINUS           reduce using rule 95 (termino2 -> STAR termino .)
    GREATERTHAN     reduce using rule 95 (termino2 -> STAR termino .)
    LESSTHAN        reduce using rule 95 (termino2 -> STAR termino .)
    GREATEREQUAL    reduce using rule 95 (termino2 -> STAR termino .)
    LESSEQUAL       reduce using rule 95 (termino2 -> STAR termino .)
    SHR             reduce using rule 95 (termino2 -> STAR termino .)
    SHL             reduce using rule 95 (termino2 -> STAR termino .)
    EQ              reduce using rule 95 (termino2 -> STAR termino .)
    DIF             reduce using rule 95 (termino2 -> STAR termino .)
    ANDB            reduce using rule 95 (termino2 -> STAR termino .)
    XOR             reduce using rule 95 (termino2 -> STAR termino .)
    ORB             reduce using rule 95 (termino2 -> STAR termino .)
    AND             reduce using rule 95 (termino2 -> STAR termino .)
    OR              reduce using rule 95 (termino2 -> STAR termino .)
    SEMIC           reduce using rule 95 (termino2 -> STAR termino .)
    RBRACKET        reduce using rule 95 (termino2 -> STAR termino .)
    COMMA           reduce using rule 95 (termino2 -> STAR termino .)
    RPAREN          reduce using rule 95 (termino2 -> STAR termino .)


state 199

    (96) termino2 -> SLASH termino .

    PLUS            reduce using rule 96 (termino2 -> SLASH termino .)
    MINUS           reduce using rule 96 (termino2 -> SLASH termino .)
    GREATERTHAN     reduce using rule 96 (termino2 -> SLASH termino .)
    LESSTHAN        reduce using rule 96 (termino2 -> SLASH termino .)
    GREATEREQUAL    reduce using rule 96 (termino2 -> SLASH termino .)
    LESSEQUAL       reduce using rule 96 (termino2 -> SLASH termino .)
    SHR             reduce using rule 96 (termino2 -> SLASH termino .)
    SHL             reduce using rule 96 (termino2 -> SLASH termino .)
    EQ              reduce using rule 96 (termino2 -> SLASH termino .)
    DIF             reduce using rule 96 (termino2 -> SLASH termino .)
    ANDB            reduce using rule 96 (termino2 -> SLASH termino .)
    XOR             reduce using rule 96 (termino2 -> SLASH termino .)
    ORB             reduce using rule 96 (termino2 -> SLASH termino .)
    AND             reduce using rule 96 (termino2 -> SLASH termino .)
    OR              reduce using rule 96 (termino2 -> SLASH termino .)
    SEMIC           reduce using rule 96 (termino2 -> SLASH termino .)
    RBRACKET        reduce using rule 96 (termino2 -> SLASH termino .)
    COMMA           reduce using rule 96 (termino2 -> SLASH termino .)
    RPAREN          reduce using rule 96 (termino2 -> SLASH termino .)


state 200

    (97) termino2 -> MOD termino .

    PLUS            reduce using rule 97 (termino2 -> MOD termino .)
    MINUS           reduce using rule 97 (termino2 -> MOD termino .)
    GREATERTHAN     reduce using rule 97 (termino2 -> MOD termino .)
    LESSTHAN        reduce using rule 97 (termino2 -> MOD termino .)
    GREATEREQUAL    reduce using rule 97 (termino2 -> MOD termino .)
    LESSEQUAL       reduce using rule 97 (termino2 -> MOD termino .)
    SHR             reduce using rule 97 (termino2 -> MOD termino .)
    SHL             reduce using rule 97 (termino2 -> MOD termino .)
    EQ              reduce using rule 97 (termino2 -> MOD termino .)
    DIF             reduce using rule 97 (termino2 -> MOD termino .)
    ANDB            reduce using rule 97 (termino2 -> MOD termino .)
    XOR             reduce using rule 97 (termino2 -> MOD termino .)
    ORB             reduce using rule 97 (termino2 -> MOD termino .)
    AND             reduce using rule 97 (termino2 -> MOD termino .)
    OR              reduce using rule 97 (termino2 -> MOD termino .)
    SEMIC           reduce using rule 97 (termino2 -> MOD termino .)
    RBRACKET        reduce using rule 97 (termino2 -> MOD termino .)
    COMMA           reduce using rule 97 (termino2 -> MOD termino .)
    RPAREN          reduce using rule 97 (termino2 -> MOD termino .)


state 201

    (100) factor2 -> EXP factor .

    STAR            reduce using rule 100 (factor2 -> EXP factor .)
    SLASH           reduce using rule 100 (factor2 -> EXP factor .)
    MOD             reduce using rule 100 (factor2 -> EXP factor .)
    PLUS            reduce using rule 100 (factor2 -> EXP factor .)
    MINUS           reduce using rule 100 (factor2 -> EXP factor .)
    GREATERTHAN     reduce using rule 100 (factor2 -> EXP factor .)
    LESSTHAN        reduce using rule 100 (factor2 -> EXP factor .)
    GREATEREQUAL    reduce using rule 100 (factor2 -> EXP factor .)
    LESSEQUAL       reduce using rule 100 (factor2 -> EXP factor .)
    SHR             reduce using rule 100 (factor2 -> EXP factor .)
    SHL             reduce using rule 100 (factor2 -> EXP factor .)
    EQ              reduce using rule 100 (factor2 -> EXP factor .)
    DIF             reduce using rule 100 (factor2 -> EXP factor .)
    ANDB            reduce using rule 100 (factor2 -> EXP factor .)
    XOR             reduce using rule 100 (factor2 -> EXP factor .)
    ORB             reduce using rule 100 (factor2 -> EXP factor .)
    AND             reduce using rule 100 (factor2 -> EXP factor .)
    OR              reduce using rule 100 (factor2 -> EXP factor .)
    SEMIC           reduce using rule 100 (factor2 -> EXP factor .)
    RBRACKET        reduce using rule 100 (factor2 -> EXP factor .)
    COMMA           reduce using rule 100 (factor2 -> EXP factor .)
    RPAREN          reduce using rule 100 (factor2 -> EXP factor .)


state 202

    (65) expresion2i -> AND expresion2 .

    OR              reduce using rule 65 (expresion2i -> AND expresion2 .)
    SEMIC           reduce using rule 65 (expresion2i -> AND expresion2 .)
    RBRACKET        reduce using rule 65 (expresion2i -> AND expresion2 .)
    COMMA           reduce using rule 65 (expresion2i -> AND expresion2 .)
    RPAREN          reduce using rule 65 (expresion2i -> AND expresion2 .)


state 203

    (62) expresioni -> OR expresion .

    SEMIC           reduce using rule 62 (expresioni -> OR expresion .)
    RBRACKET        reduce using rule 62 (expresioni -> OR expresion .)
    COMMA           reduce using rule 62 (expresioni -> OR expresion .)
    RPAREN          reduce using rule 62 (expresioni -> OR expresion .)


state 204

    (71) expresion4i -> XOR expresion4 .

    ORB             reduce using rule 71 (expresion4i -> XOR expresion4 .)
    AND             reduce using rule 71 (expresion4i -> XOR expresion4 .)
    OR              reduce using rule 71 (expresion4i -> XOR expresion4 .)
    SEMIC           reduce using rule 71 (expresion4i -> XOR expresion4 .)
    RBRACKET        reduce using rule 71 (expresion4i -> XOR expresion4 .)
    COMMA           reduce using rule 71 (expresion4i -> XOR expresion4 .)
    RPAREN          reduce using rule 71 (expresion4i -> XOR expresion4 .)


state 205

    (68) expresion3i -> ORB expresion3 .

    AND             reduce using rule 68 (expresion3i -> ORB expresion3 .)
    OR              reduce using rule 68 (expresion3i -> ORB expresion3 .)
    SEMIC           reduce using rule 68 (expresion3i -> ORB expresion3 .)
    RBRACKET        reduce using rule 68 (expresion3i -> ORB expresion3 .)
    COMMA           reduce using rule 68 (expresion3i -> ORB expresion3 .)
    RPAREN          reduce using rule 68 (expresion3i -> ORB expresion3 .)


state 206

    (78) expresion6i -> DIF expresion6 .

    ANDB            reduce using rule 78 (expresion6i -> DIF expresion6 .)
    XOR             reduce using rule 78 (expresion6i -> DIF expresion6 .)
    ORB             reduce using rule 78 (expresion6i -> DIF expresion6 .)
    AND             reduce using rule 78 (expresion6i -> DIF expresion6 .)
    OR              reduce using rule 78 (expresion6i -> DIF expresion6 .)
    SEMIC           reduce using rule 78 (expresion6i -> DIF expresion6 .)
    RBRACKET        reduce using rule 78 (expresion6i -> DIF expresion6 .)
    COMMA           reduce using rule 78 (expresion6i -> DIF expresion6 .)
    RPAREN          reduce using rule 78 (expresion6i -> DIF expresion6 .)


state 207

    (77) expresion6i -> EQ expresion6 .

    ANDB            reduce using rule 77 (expresion6i -> EQ expresion6 .)
    XOR             reduce using rule 77 (expresion6i -> EQ expresion6 .)
    ORB             reduce using rule 77 (expresion6i -> EQ expresion6 .)
    AND             reduce using rule 77 (expresion6i -> EQ expresion6 .)
    OR              reduce using rule 77 (expresion6i -> EQ expresion6 .)
    SEMIC           reduce using rule 77 (expresion6i -> EQ expresion6 .)
    RBRACKET        reduce using rule 77 (expresion6i -> EQ expresion6 .)
    COMMA           reduce using rule 77 (expresion6i -> EQ expresion6 .)
    RPAREN          reduce using rule 77 (expresion6i -> EQ expresion6 .)


state 208

    (74) expresion5i -> ANDB expresion5 .

    XOR             reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    ORB             reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    AND             reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    OR              reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    SEMIC           reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    RBRACKET        reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    COMMA           reduce using rule 74 (expresion5i -> ANDB expresion5 .)
    RPAREN          reduce using rule 74 (expresion5i -> ANDB expresion5 .)


state 209

    (87) expresion8i -> GREATEREQUAL expresion8 .

    SHR             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    SHL             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    EQ              reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    DIF             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    ANDB            reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    XOR             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    ORB             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    AND             reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    OR              reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    SEMIC           reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    RBRACKET        reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    COMMA           reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)
    RPAREN          reduce using rule 87 (expresion8i -> GREATEREQUAL expresion8 .)


state 210

    (86) expresion8i -> LESSTHAN expresion8 .

    SHR             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    SHL             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    EQ              reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    DIF             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    ANDB            reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    XOR             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    ORB             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    AND             reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    OR              reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    SEMIC           reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    RBRACKET        reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    COMMA           reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)
    RPAREN          reduce using rule 86 (expresion8i -> LESSTHAN expresion8 .)


state 211

    (85) expresion8i -> GREATERTHAN expresion8 .

    SHR             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    SHL             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    EQ              reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    DIF             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    ANDB            reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    XOR             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    ORB             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    AND             reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    OR              reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    SEMIC           reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    RBRACKET        reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    COMMA           reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)
    RPAREN          reduce using rule 85 (expresion8i -> GREATERTHAN expresion8 .)


state 212

    (88) expresion8i -> LESSEQUAL expresion8 .

    SHR             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    SHL             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    EQ              reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    DIF             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    ANDB            reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    XOR             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    ORB             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    AND             reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    OR              reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    SEMIC           reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    RBRACKET        reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    COMMA           reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)
    RPAREN          reduce using rule 88 (expresion8i -> LESSEQUAL expresion8 .)


state 213

    (81) expresion7i -> SHR expresion7 .

    EQ              reduce using rule 81 (expresion7i -> SHR expresion7 .)
    DIF             reduce using rule 81 (expresion7i -> SHR expresion7 .)
    ANDB            reduce using rule 81 (expresion7i -> SHR expresion7 .)
    XOR             reduce using rule 81 (expresion7i -> SHR expresion7 .)
    ORB             reduce using rule 81 (expresion7i -> SHR expresion7 .)
    AND             reduce using rule 81 (expresion7i -> SHR expresion7 .)
    OR              reduce using rule 81 (expresion7i -> SHR expresion7 .)
    SEMIC           reduce using rule 81 (expresion7i -> SHR expresion7 .)
    RBRACKET        reduce using rule 81 (expresion7i -> SHR expresion7 .)
    COMMA           reduce using rule 81 (expresion7i -> SHR expresion7 .)
    RPAREN          reduce using rule 81 (expresion7i -> SHR expresion7 .)


state 214

    (82) expresion7i -> SHL expresion7 .

    EQ              reduce using rule 82 (expresion7i -> SHL expresion7 .)
    DIF             reduce using rule 82 (expresion7i -> SHL expresion7 .)
    ANDB            reduce using rule 82 (expresion7i -> SHL expresion7 .)
    XOR             reduce using rule 82 (expresion7i -> SHL expresion7 .)
    ORB             reduce using rule 82 (expresion7i -> SHL expresion7 .)
    AND             reduce using rule 82 (expresion7i -> SHL expresion7 .)
    OR              reduce using rule 82 (expresion7i -> SHL expresion7 .)
    SEMIC           reduce using rule 82 (expresion7i -> SHL expresion7 .)
    RBRACKET        reduce using rule 82 (expresion7i -> SHL expresion7 .)
    COMMA           reduce using rule 82 (expresion7i -> SHL expresion7 .)
    RPAREN          reduce using rule 82 (expresion7i -> SHL expresion7 .)


state 215

    (102) exponencial -> LPAREN expresion RPAREN .

    EXP             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    STAR            reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    SLASH           reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    MOD             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    GREATERTHAN     reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    LESSTHAN        reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    GREATEREQUAL    reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    LESSEQUAL       reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    SHR             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    SHL             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    EQ              reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    DIF             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    ANDB            reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    XOR             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    ORB             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    AND             reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    OR              reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    SEMIC           reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 102 (exponencial -> LPAREN expresion RPAREN .)


state 216

    (14) where -> WHERE LCURLY bloque2 . RCURLY

    RCURLY          shift and go to state 231


state 217

    (35) condition -> IF asign bloque condition1 .

    IF              reduce using rule 35 (condition -> IF asign bloque condition1 .)
    PRINT           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    FOR             reduce using rule 35 (condition -> IF asign bloque condition1 .)
    RETURN          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    BUILD           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    CONDITION       reduce using rule 35 (condition -> IF asign bloque condition1 .)
    ID              reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TINT            reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TBOOL           reduce using rule 35 (condition -> IF asign bloque condition1 .)
    TFLOAT          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    RCURLY          reduce using rule 35 (condition -> IF asign bloque condition1 .)
    WHERE           reduce using rule 35 (condition -> IF asign bloque condition1 .)


state 218

    (36) condition1 -> ELSE . bloque
    (57) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 107

    bloque                         shift and go to state 232

state 219

    (37) condition1 -> empty .

    IF              reduce using rule 37 (condition1 -> empty .)
    PRINT           reduce using rule 37 (condition1 -> empty .)
    FOR             reduce using rule 37 (condition1 -> empty .)
    RETURN          reduce using rule 37 (condition1 -> empty .)
    BUILD           reduce using rule 37 (condition1 -> empty .)
    CONDITION       reduce using rule 37 (condition1 -> empty .)
    ID              reduce using rule 37 (condition1 -> empty .)
    TINT            reduce using rule 37 (condition1 -> empty .)
    TBOOL           reduce using rule 37 (condition1 -> empty .)
    TFLOAT          reduce using rule 37 (condition1 -> empty .)
    RCURLY          reduce using rule 37 (condition1 -> empty .)
    WHERE           reduce using rule 37 (condition1 -> empty .)


state 220

    (12) optimize -> MAX LCURLY statement where . RCURLY

    RCURLY          shift and go to state 233


state 221

    (57) bloque -> LCURLY bloque2 RCURLY .

    IF              reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    ID              reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    WHERE           reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    FUNC            reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    MODEL           reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)
    ELSE            reduce using rule 57 (bloque -> LCURLY bloque2 RCURLY .)


state 222

    (45) funcion2 -> COMMA type ID funcion2 .

    RPAREN          reduce using rule 45 (funcion2 -> COMMA type ID funcion2 .)


state 223

    (55) dec22 -> COMMA ID . dec22
    (55) dec22 -> . COMMA ID dec22
    (56) dec22 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 182
    SEMIC           reduce using rule 124 (empty -> .)

    dec22                          shift and go to state 234
    empty                          shift and go to state 184

state 224

    (51) declaration -> typedeclaration POINTS ID dec22 SEMIC .

    WHERE           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    IF              reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    PRINT           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    FOR             reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RETURN          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    BUILD           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    CONDITION       reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    ID              reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TINT            reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TBOOL           reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    TFLOAT          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)
    RCURLY          reduce using rule 51 (declaration -> typedeclaration POINTS ID dec22 SEMIC .)


state 225

    (53) dimensions -> LBRACKET expresion RBRACKET dimensions .

    ASEQ            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUSEQ          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINEQ           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MULTEQ          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIVEQ           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EXP             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    STAR            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SLASH           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MOD             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    PLUS            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    MINUS           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATERTHAN     reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSTHAN        reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    GREATEREQUAL    reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    LESSEQUAL       reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHR             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SHL             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    EQ              reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    DIF             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ANDB            reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    XOR             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    ORB             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    AND             reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    OR              reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    SEMIC           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RBRACKET        reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    COMMA           reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    RPAREN          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)
    POINTS          reduce using rule 53 (dimensions -> LBRACKET expresion RBRACKET dimensions .)


state 226

    (11) optimize -> MIN LCURLY statement where RCURLY .

    WHERE           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    IF              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    PRINT           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    FOR             reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RETURN          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    BUILD           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    ID              reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TINT            reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 11 (optimize -> MIN LCURLY statement where RCURLY .)


state 227

    (39) write2 -> COMMA asign write2 .

    SEMIC           reduce using rule 39 (write2 -> COMMA asign write2 .)


state 228

    (28) expresiones -> expresion COMMA expresiones .

    SEMIC           reduce using rule 28 (expresiones -> expresion COMMA expresiones .)


state 229

    (119) llamarfuncion33 -> COMMA asign . llamarfuncion33
    (119) llamarfuncion33 -> . COMMA asign llamarfuncion33
    (120) llamarfuncion33 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 192
    RPAREN          reduce using rule 124 (empty -> .)

    llamarfuncion33                shift and go to state 235
    empty                          shift and go to state 193

state 230

    (41) ciclo -> FOR ID IN DOT ID . bloque
    (57) bloque -> . LCURLY bloque2 RCURLY

    LCURLY          shift and go to state 107

    bloque                         shift and go to state 236

state 231

    (14) where -> WHERE LCURLY bloque2 RCURLY .

    IF              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    PRINT           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    FOR             reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RETURN          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    BUILD           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    CONDITION       reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    ID              reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TINT            reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TBOOL           reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    TFLOAT          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)
    RCURLY          reduce using rule 14 (where -> WHERE LCURLY bloque2 RCURLY .)


state 232

    (36) condition1 -> ELSE bloque .

    IF              reduce using rule 36 (condition1 -> ELSE bloque .)
    PRINT           reduce using rule 36 (condition1 -> ELSE bloque .)
    FOR             reduce using rule 36 (condition1 -> ELSE bloque .)
    RETURN          reduce using rule 36 (condition1 -> ELSE bloque .)
    BUILD           reduce using rule 36 (condition1 -> ELSE bloque .)
    CONDITION       reduce using rule 36 (condition1 -> ELSE bloque .)
    ID              reduce using rule 36 (condition1 -> ELSE bloque .)
    TINT            reduce using rule 36 (condition1 -> ELSE bloque .)
    TBOOL           reduce using rule 36 (condition1 -> ELSE bloque .)
    TFLOAT          reduce using rule 36 (condition1 -> ELSE bloque .)
    RCURLY          reduce using rule 36 (condition1 -> ELSE bloque .)
    WHERE           reduce using rule 36 (condition1 -> ELSE bloque .)


state 233

    (12) optimize -> MAX LCURLY statement where RCURLY .

    WHERE           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    IF              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    PRINT           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    FOR             reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RETURN          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    BUILD           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    CONDITION       reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    ID              reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TINT            reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TBOOL           reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    TFLOAT          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)
    RCURLY          reduce using rule 12 (optimize -> MAX LCURLY statement where RCURLY .)


state 234

    (55) dec22 -> COMMA ID dec22 .

    SEMIC           reduce using rule 55 (dec22 -> COMMA ID dec22 .)


state 235

    (119) llamarfuncion33 -> COMMA asign llamarfuncion33 .

    RPAREN          reduce using rule 119 (llamarfuncion33 -> COMMA asign llamarfuncion33 .)


state 236

    (41) ciclo -> FOR ID IN DOT ID bloque .

    WHERE           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    IF              reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    PRINT           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    FOR             reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    RETURN          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    BUILD           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    CONDITION       reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    ID              reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TINT            reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TBOOL           reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    TFLOAT          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)
    RCURLY          reduce using rule 41 (ciclo -> FOR ID IN DOT ID bloque .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 22 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 22 resolved as shift
WARNING: shift/reduce conflict for FOR in state 22 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 22 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 22 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for TINT in state 22 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 22 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 22 resolved as shift
WARNING: shift/reduce conflict for IF in state 39 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 39 resolved as shift
WARNING: shift/reduce conflict for FOR in state 39 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 39 resolved as shift
WARNING: shift/reduce conflict for BUILD in state 39 resolved as shift
WARNING: shift/reduce conflict for CONDITION in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for TINT in state 39 resolved as shift
WARNING: shift/reduce conflict for TBOOL in state 39 resolved as shift
WARNING: shift/reduce conflict for TFLOAT in state 39 resolved as shift
WARNING: reduce/reduce conflict in state 40 resolved using rule (model -> empty)
WARNING: rejected rule (bloque2 -> empty) in state 40
